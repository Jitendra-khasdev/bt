cscope 15 $HOME/U/OSS/bt/src/oc/utl               0000182811
	@oc_utl.c

6 
	~<°rög.h
>

7 
	~<°dlib.h
>

8 
	~<sig«l.h
>

10 
	~"oc_ué.h
"

11 
	~"oc_¸t_öt.h
"

12 
	~"oc_ué_∑ge.h
"

16 
Oc_ué_c⁄fig
 
	goc_ué_c⁄f_g
;

22 
uöt32
 
	$oc_ué_Ãc_upd©e
(
uöt32
 
Ãc
, * 
buf
, 
Àn
)

24 
n
, 
n⁄_Æign_Àn
;

25 
uöt32
 
zîo_buf
 = 0;

26 
uöt32
 * 
p
;

29 
	`oc_ué_as£π
(((
uöt32
)
buf
 & 3) == 0);

34 
p
 = (
uöt32
 *Ë
buf
;

35 
n
 = 0;Ç < 
Àn
 / 4;Ç++) {

36 
Ãc
 ^*
p
++;

40 
n⁄_Æign_Àn
 = 
Àn
%4;

41 i‡(
n⁄_Æign_Àn
 > 0) {

42 
	`mem˝y
(&
zîo_buf
, 
p
, 
n⁄_Æign_Àn
);

43 
Ãc
 ^
zîo_buf
;

46  
Ãc
;

47 
	}
}

51 
	#CASE
(
s
Ës:  #†; 

	)

53 c⁄° *
	$oc_ué_°rög_of_subcomp⁄ít_id
(
Oc_subcomp⁄ít_id
 
id
)

55 
id
) {

56 
	`CASE
(
OC_CRT
);

57 
	`CASE
(
OC_IO
);

58 
	`CASE
(
OC_FS
);

59 
	`CASE
(
OC_BT
);

60 
	`CASE
(
OC_SN
);

61 
	`CASE
(
OC_CAT
);

62 
	`CASE
(
OC_OCT
);

63 
	`CASE
(
OC_PCT
);

64 
	`CASE
(
OC_RM
);

65 
	`CASE
(
OC_SM
);

66 
	`CASE
(
OC_OH
);

67 
	`CASE
(
OC_PH
);

68 
	`CASE
(
OC_RT
);

69 
	`CASE
(
OC_PM
);

70 
	`CASE
(
OC_JL
);

71 
	`CASE
(
OC_RC
);

74 
	`ERR
(("bad case"));

76 
	}
}

78 #unde‡
CASE


83 
	$oc_ué_öô_fuŒ
(
Oc_ué_c⁄fig
 *
c⁄f_pi
)

85 
	`mem˝y
(&
oc_ué_c⁄f_g
, 
c⁄f_pi
, (
Oc_ué_c⁄fig
));

87 
	`¥ötf
("====================\n");

88 
	`¥ötf
("UTL configuration:\n");

89 
	`¥ötf
("Üun size: %Lu(Mbyte), or, %Lu(Kbyte)\n",

90 
oc_ué_c⁄f_g
.
lun_size
 /(1024 * 1024),

91 
oc_ué_c⁄f_g
.
lun_size
 / 1024);

92 
	`¥ötf
("Çum_∑ges: %d\n", 
oc_ué_c⁄f_g
.
num_∑ges
);

93 
	`¥ötf
(" OSD vîsi⁄: %lu\n", (
uöt32
)
oc_ué_c⁄f_g
.
vîsi⁄
);

94 
	`¥ötf
(" d©®dev: %s\n", 
oc_ué_c⁄f_g
.
d©a_dev
);

95 
	`¥ötf
("Üj»dev: %s\n", 
oc_ué_c⁄f_g
.
ljl_dev
);

96 
	`¥ötf
("====================\n");

98 
	`oc_ué_∑ge_öô
(
c⁄f_pi
->
num_∑ges
);

99 
	}
}

101 
	$oc_ué_deÁu…_c⁄fig
(
Oc_ué_c⁄fig
 *
c⁄f_po
)

103 
	`mem£t
(
c⁄f_po
, 0, (
Oc_ué_c⁄fig
));

104 
c⁄f_po
->
lun_size
 = 
OC_LUN_SIZE
;

105 
c⁄f_po
->
num_∑ges
 = 
OC_NUM_PAGES
;

107 
	`mem£t
(
c⁄f_po
->
d©a_dev
, 0, 60);

108 
	`mem£t
(
c⁄f_po
->
ljl_dev
, 0, 60);

109 
	}
}

111 
	$oc_ué_öô
()

113 
Oc_ué_c⁄fig
 
c⁄f
;

115 
	`oc_ué_deÁu…_c⁄fig
(&
c⁄f
);

116 
	`oc_ué_öô_fuŒ
(&
c⁄f
);

117 
	}
}

119 
	$oc_ué_‰ì_ªsour˚s
()

121 
	`oc_ué_∑ge_‰ì_ªsour˚s
();

122 
	}
}

126 
uöt64
 
	$oc_quîy_öput_lun_size
–
uöt32
 
lun
 )

128  
oc_ué_c⁄f_g
.
lun_size
;

129 
	}
}

133 
uöt64
 
	$oc_ué_gë_ªq_id
()

135 
uöt64
 
ªq_id
 = 1;

136 
ªq_id
++;

137  
ªq_id
;

138 
	}
}

142 
uöt32
 
	$oc_ué_log2
(
uöt32
 
num
)

144 
i
;

146 i‡(0 =
num
 || 1 ==Çum)  0;

148 
i
=1; i<32; i++) {

149 
num
 =Çum>>1;

150 i‡(0 =
num
Ë (
i
-1);

154 
	}
}

	@oc_utl.h

10 #i‚de‡
OC_UTL_H


11 
	#OC_UTL_H


	)

13 
	~"∂_d°ru.h
"

14 
	~"oc_wu_s.h
"

15 
	~"oc_ué_s.h
"

16 
	~"oc_c⁄fig.h
"

17 
	~"∂_mm_öt.h
"

22 
	mOC_MIN_COMP
 = 0,

24 
	mOC_CRT
,

25 
	mOC_IO
,

26 
	mOC_FS
,

27 
	mOC_BT
,

28 
	mOC_SN
,

29 
	mOC_CAT
,

30 
	mOC_OCT
,

31 
	mOC_PCT
,

32 
	mOC_RM
,

33 
	mOC_SM
,

34 
	mOC_OH
,

35 
	mOC_PH
,

36 
	mOC_RT
,

37 
	mOC_PM
,

38 
	mOC_JL
,

39 
	mOC_RC
,

41 
	mOC_MAX_COMP
,

42 } 
	tOc_subcomp⁄ít_id
;

47 
	gOc_wu
;

50 
Oc_ué_c⁄fig
 
oc_ué_c⁄f_g
;

52 
	eOc_©omic
 {

53 
	mOC_ATOMIC
 = 1,

54 
	mOC_NON_ATOMIC
,

55 } 
	tOc_©omic
;

57 *(*
	tthªad_routöe_t
)(*);

60 
	gOc_ué_fûe
;

64 
	#oc_ué_as£π
–
ex¥
 ) 
	`as£π
”x¥)

	)

66 #ifde‡
OC_DEBUG


67 
	#oc_ué_debugas£π
–
ex¥
 ) 
	`oc_ué_as£π
–ex¥ )

	)

69 
	#oc_ué_debugas£π
–
ex¥
 )

	)

72 #i‚de‡
MAX


73 
	#MAX
(
x
,
y
Ë((xË< (yË? (yË: (x))

	)

76 #i‚de‡
MIN


77 
	#MIN
(
x
,
y
Ë((xË> (yË? (yË: (x))

	)

80 
oc_ué_deÁu…_c⁄fig
(
Oc_ué_c⁄fig
 *
c⁄f_po
);

81 
oc_ué_öô
();

82 
oc_ué_öô_fuŒ
(
Oc_ué_c⁄fig
 *
c⁄f_pi
);

84 
oc_ué_‰ì_ªsour˚s
();

87 
ölöe
 
uöt32
 
	$oc_ué_Ãc_öô
()

90 
	}
}

93 
uöt32
 
oc_ué_Ãc_upd©e
(uöt32 
Ãc
, * 
buf
, 
Àn
);

95 c⁄° *
oc_ué_°rög_of_subcomp⁄ít_id
(
Oc_subcomp⁄ít_id
 
id
);

97 
uöt64
 
oc_quîy_öput_lun_size
(
uöt32
 
lun
);

99 
uöt64
 
oc_ué_gë_ªq_id
();

109 
uöt32
 
oc_ué_log2
(uöt32 
num
);

	@oc_utl_htbl.c

9 
	~"oc_ué_htbl.h
"

10 
	~"oc_ué.h
"

11 
	~<mem‹y.h
>

12 
	~<°dio.h
>

18 
	$oc_ué_htbl_¸óã
(

19 
Oc_ué_htbl
 *
htbl
,

20 
size
,

21 *
¶Ÿ_¨øy_pi
,

22 
Oc_ué_htbl_hash
 
hash
,

23 
Oc_ué_htbl_com∑ª
 
com∑ª
)

25 
	`mem£t
(
htbl
, 0, (
Oc_ué_htbl
));

26 i‡(
NULL
 =
¶Ÿ_¨øy_pi
) {

27 
htbl
->
¨r
 = (
Ss_¶i°_node
**Ë
	`∂_mm_mÆloc
(
size
 * ());

28 i‡(
htbl
->
¨r
) {

29 
htbl
->
¨r_mÆlo˚d_⁄_¸óã
 = 
TRUE
;

33 
htbl
->
¨r
 = (
Ss_¶i°_node
**Ë
¶Ÿ_¨øy_pi
;

35 
	`mem£t
(
htbl
->
¨r
, 0, 
size
 * ());

36 
htbl
->
Àn
=
size
;

37 
htbl
->
size
 = 0;

38 
htbl
->
hash
 = hash;

39 
htbl
->
com∑ª
 = compare;

40 
	}
}

45 
	$oc_ué_htbl_‰ì
(
Oc_ué_htbl
 *
htbl
)

47 
	`mem£t
(
htbl
->
¨r
, 0, htbl->
Àn
 * ());

48 i‡(
htbl
->
¨r_mÆlo˚d_⁄_¸óã
) {

49 
	`∂_mm_‰ì
((*)
htbl
->
¨r
);

51 
	`mem£t
(
htbl
, 0, (
Oc_ué_htbl
));

52 
	}
}

58 
	$oc_ué_htbl_exi°s
(
Oc_ué_htbl
 *
h_i
, *
key_i
)

60 
uöt32
 
¶Ÿ
;

61 
Ss_¶i°_node
 *
tmp
;

63 
¶Ÿ
 = 
h_i
->
	`hash
(
key_i
, h_i->
Àn
, 0);

64 
	`oc_ué_debugas£π
(
¶Ÿ
 < 
h_i
->
Àn
 && 0 <= slot);

65 
tmp
 = 
h_i
->
¨r
[
¶Ÿ
];

67 
tmp
 !
NULL
) {

68 i‡(
h_i
->
	`com∑ª
((*)
tmp
, 
key_i
Ë=
TRUE
)

69  
TRUE
;

70 
tmp
 =Åmp->
√xt
;

72  
FALSE
;

73 
	}
}

77 * 
	$oc_ué_htbl_lookup
(
Oc_ué_htbl
 *
h_i
, *
key_i
)

79 
uöt32
 
¶Ÿ
;

80 
Ss_¶i°_node
 *
tmp
;

83 
¶Ÿ
 = 
h_i
->
	`hash
(
key_i
,h_i->
Àn
, 0);

84 
	`oc_ué_debugas£π
(
¶Ÿ
 < 
h_i
->
Àn
 && 0 <= slot);

85 
tmp
 = 
h_i
->
¨r
[
¶Ÿ
];

87 
tmp
) {

88 i‡(
h_i
->
	`com∑ª
(
tmp
, 
key_i
Ë=
TRUE
)

89  
tmp
;

90 
tmp
 =Åmp->
√xt
;

98  
NULL
;

99 
	}
}

103 * 
	$oc_ué_htbl_exåa˘
(
Oc_ué_htbl
 *
h_i
, *
key_i
)

105 
uöt32
 
¶Ÿ
;

106 
Ss_¶i°_node
 *
tmp
, *
rc
;

108 
¶Ÿ
 = 
h_i
->
	`hash
(
key_i
,h_i->
Àn
, 0);

109 
	`oc_ué_debugas£π
(
¶Ÿ
 < 
h_i
->
Àn
 && 0 <= slot);

110 
tmp
 = 
h_i
->
¨r
[
¶Ÿ
];

112 i‡(
tmp
 =
NULL
)  NULL;

114 i‡(
h_i
->
	`com∑ª
(
tmp
, 
key_i
Ë=
TRUE
) {

115 
rc
 = 
tmp
;

116 
h_i
->
¨r
[
¶Ÿ
] = 
tmp
->
√xt
;

117 
h_i
->
size
--;

118  
rc
;

121 
tmp
) {

122 i‡(
tmp
->
√xt
 =
NULL
)  NULL;

123 i‡(
h_i
->
	`com∑ª
(
tmp
->
√xt
, 
key_i
Ë=
TRUE
) {

124 
rc
 = 
tmp
->
√xt
;

125 
tmp
->
√xt
 =Åmp->next->next;

126 
h_i
->
size
--;

127  
rc
;

129 
tmp
 =Åmp->
√xt
;

132  
NULL
;

133 
	}
}

142 
	$oc_ué_htbl_ö£π
(
Oc_ué_htbl
 *
h_i
, *
key_i
, * 
_ñem
)

144 
uöt32
 
¶Ÿ
;

145 
Ss_¶i°_node
 *
hód
 = 
NULL
;

146 
Ss_¶i°_node
 *
ñem
 = (Ss_¶i°_node*Ë
_ñem
;

148 #i‡
OC_DEBUG


149 i‡(
	`oc_ué_htbl_exi°s
(
h_i
, 
key_i
Ë=
TRUE
)

150 
	`ERR
(("TryingÅoáddánÉlementÅoÅhe hash-tableÅwice"));

153 
h_i
->
size
++;

154 
¶Ÿ
 = 
h_i
->
	`hash
(
key_i
, h_i->
Àn
, 0);

155 
	`oc_ué_as£π
(
¶Ÿ
 < 
h_i
->
Àn
 && 0 <= slot);

156 
hód
 = 
h_i
->
¨r
[
¶Ÿ
];

157 
ñem
->
√xt
 = 
hód
;

158 
h_i
->
¨r
[
¶Ÿ
] = 
ñem
;

159 
	}
}

161 
boﬁ
 
	$oc_ué_htbl_ªmove
(
Oc_ué_htbl
 *
h_i
, *
key_i
)

163 
uöt32
 
¶Ÿ
;

164 
Ss_¶i°_node
 *
tmp
 = 
NULL
;

166 
¶Ÿ
 = 
h_i
->
	`hash
(
key_i
, h_i->
Àn
, 0);

167 
	`oc_ué_as£π
(
¶Ÿ
 < 
h_i
->
Àn
 && 0 <= slot);

168 
tmp
 = 
h_i
->
¨r
[
¶Ÿ
];

170 i‡(
tmp
 =
NULL
Ë 
FALSE
;

172 i‡(
h_i
->
	`com∑ª
(
tmp
, 
key_i
Ë=
TRUE
) {

173 
h_i
->
¨r
[
¶Ÿ
] = 
tmp
->
√xt
;

174 
h_i
->
size
--;

175  
TRUE
;

178 
tmp
) {

179 i‡(
tmp
->
√xt
 =
NULL
Ë 
FALSE
;

180 i‡(
h_i
->
	`com∑ª
(
tmp
->
√xt
, 
key_i
Ë=
TRUE
) {

181 
tmp
->
√xt
 =Åmp->next->next;

182 
h_i
->
size
--;

183  
TRUE
;

185 
tmp
 =Åmp->
√xt
;

188  
FALSE
;

189 
	}
}

192 
oc_ué_htbl_ôî
(
Oc_ué_htbl
 *
h_i
, (*
fun
)(*
ñem
, *
˘x
), *ctx)

194 
uöt32
 
i
;

195 
Ss_¶i°_node
 *
ñem
;

197 
i
=0; i<
h_i
->
Àn
; i++) {

198 
ñem
 = 
h_i
->
¨r
[
i
] ;

199 
ñem
) {

200 
	`fun
(
ñem
, 
˘x
);

201 
ñem
 =ÉÀm->
√xt
;

204 
	}
}

208 
oc_ué_htbl_ôî_disˇrd
(
Oc_ué_htbl
 *
h_i
,

209 
	$boﬁ
 (*
fun
)(*
ñem
, *
d©a
),

210 *
addôi⁄Æ_d©a
 )

212 
uöt32
 
i
;

213 
Ss_¶i°_node
 *
ñem_p
;

214 
Ss_¶i°_node
 *
√xt_ñem_p
;

215 
c⁄t
;

217 
i
=0; i<
h_i
->
Àn
; i++) {

218 
ñem_p
 = 
h_i
->
¨r
[
i
] ;

219 i‡(
NULL
 =
ñem_p
) ;

222 
c⁄t
 = 
TRUE
;

223  
c⁄t


224 && 
ñem_p
 ) {

225 
c⁄t
 = 
FALSE
;

227 
√xt_ñem_p
 = 
ñem_p
->
√xt
;

229 
	`fun
(
ñem_p
, 
addôi⁄Æ_d©a
)) {

230 
FALSE
:

232 
TRUE
:

233 
ñem_p
 = 
√xt_ñem_p
;

234 
h_i
->
¨r
[
i
] = 
ñem_p
;

235 
h_i
->
size
--;

236 
c⁄t
 = 
TRUE
;

242 i‡–
NULL
 =
ñem_p


243 || 
NULL
 =
ñem_p
->
√xt
 ) ;

246 
ñem_p
->
√xt
) {

247 
√xt_ñem_p
 = 
ñem_p
->
√xt
->next;

248 
	`fun
(
ñem_p
->
√xt
, 
addôi⁄Æ_d©a
)){

249 
FALSE
:

250 
ñem_p
 =ÉÀm_p->
√xt
;

252 
TRUE
:

253 
ñem_p
->
√xt
 = 
√xt_ñem_p
;

254 
h_i
->
size
--;

259 
	}
}

265 
oc_ué_htbl_ôî_mv_to_li°
(
Oc_ué_htbl
 *
h_i
,

266 
	$boﬁ
 (*
fun
)(*
ñem
, *
d©a
),

267 *
addôi⁄Æ_d©a
,

268 
Ss_¶i°
 *
li°_pi
)

270 
uöt32
 
i
;

271 
Ss_¶i°_node
 *
ñem_p
, *
rmv_p
;

272 
c⁄t
;

274 
i
=0; i<
h_i
->
Àn
; i++) {

275 
ñem_p
 = 
h_i
->
¨r
[
i
] ;

276 i‡(
NULL
 =
ñem_p
) ;

279 
c⁄t
 = 
TRUE
;

280  
c⁄t


281 && 
ñem_p
 ) {

282 
c⁄t
 = 
FALSE
;

284 
	`fun
(
ñem_p
, 
addôi⁄Æ_d©a
)) {

285 
FALSE
:

287 
TRUE
:

288 
rmv_p
 = 
ñem_p
;

289 
ñem_p
 =ÉÀm_p->
√xt
;

290 
h_i
->
¨r
[
i
] = 
ñem_p
;

291 
h_i
->
size
--;

292 
c⁄t
 = 
TRUE
;

293 
rmv_p
->
√xt
 = 
NULL
;

294 
	`ss¶i°_add_èû
(
li°_pi
, 
rmv_p
 );

300 i‡–
NULL
 =
ñem_p


301 || 
NULL
 =
ñem_p
->
√xt
 ) ;

304 
ñem_p
->
√xt
) {

305 
	`fun
(
ñem_p
->
√xt
, 
addôi⁄Æ_d©a
)){

306 
FALSE
:

307 
ñem_p
 =ÉÀm_p->
√xt
;

309 
TRUE
:

310 
rmv_p
 = 
ñem_p
->
√xt
;

311 
ñem_p
->
√xt
 =Élem_p->next->next;

312 
h_i
->
size
--;

313 
rmv_p
->
√xt
 = 
NULL
;

314 
	`ss¶i°_add_èû
(
li°_pi
, 
rmv_p
 );

319 
	}
}

	@oc_utl_htbl.h

8 #i‚de‡
OC_UTL_HTBL_H


9 
	#OC_UTL_HTBL_H


	)

11 
	~"oc_ué_htbl_s.h
"

18 
oc_ué_htbl_¸óã
(

19 
Oc_ué_htbl
 *
htbl
,

20 
size
,

21 *
¶Ÿ_¨øy_pi
,

22 
Oc_ué_htbl_hash
 
hash
,

23 
Oc_ué_htbl_com∑ª
 
com∑ª


29 
oc_ué_htbl_‰ì
(
Oc_ué_htbl
 *
htbl
);

33 * 
oc_ué_htbl_lookup
(
Oc_ué_htbl
 *
h_i
, *
key_i
);

35 
oc_ué_htbl_exi°s
(
Oc_ué_htbl
 *
h_i
, *
key_i
);

42 
oc_ué_htbl_ö£π
(
Oc_ué_htbl
 *
h_i
, *
key_i
, * 
_ñem
);

44 
boﬁ
 
oc_ué_htbl_ªmove
(
Oc_ué_htbl
 *
h_i
, *
key_i
);

46 
oc_ué_htbl_ôî
(
Oc_ué_htbl
 *
h_i
,

47 (*
fun
)(*
ñem
, *
˘x
),

48 *
˘x
);

52 
	`oc_ué_htbl_ôî_disˇrd
–
Oc_ué_htbl
 *
h_i
,

53 
	$boﬁ
 (*
fun
)(*
ñem
, *
d©a
),

54 *
addôi⁄Æ_d©a
 );

56 
	`oc_ué_htbl_ôî_mv_to_li°
–
Oc_ué_htbl
 *
h_i
,

57 
	$boﬁ
 (*
fun
)(*
ñem
, *
d©a
),

58 *
addôi⁄Æ_d©a
,

59 
Ss_¶i°
 *
li°_pi
 );

63 * 
	`oc_ué_htbl_exåa˘
(
Oc_ué_htbl
 *
h_i
, *
key_i
);

	@oc_utl_page.c

5 
	~<mem‹y.h
>

7 
	~"∂_öt.h
"

8 
	~"oc_ué.h
"

9 
	~"oc_¸t_öt.h
"

10 
	~"oc_ué_∑ge.h
"

11 
	~"oc_ué_åa˚.h
"

14 
	sOc_ué_∑ge_˘x
 {

16 
Pl_mm_›
 *
	m∑ge_poﬁ
;

19 
Oc_¸t_©om_˙t
 
	ma˙t
;

22 
	mnum_‰ì_∑ges
;

25 
	mmax_num_‰ì_∑ges
;

26 } 
	tOc_ué_∑ge_˘x
;

28 
Oc_ué_∑ge_˘x
 
	g˘x
;

32 
öô_∑ge
 (*
_pg_p
);

33 
de°roy_∑ge
 (*
_pg_p
);

34 
öô_∑ge_w_d©a
 (
Oc_ué_∑ge
 *
pg_p
);

35 
Oc_ué_∑ge
 *
oc_ué_∑ge_Æloc_c‹e
(
Oc_wu
 *
wu_p
);

39 
	$oc_ué_∑ge_öô
(
num_∑ges
)

41 
boﬁ
 
rc
;

44 
rc
 = 
	`∂_mm_poﬁ_¸óã
–(
Oc_ué_∑ge
),

45 
PL_MM_ALIGN_DEFAULT
,

46 
num_∑ges
,

47 
öô_∑ge
,

48 &
˘x
.
∑ge_poﬁ
 );

49 i‡(
FALSE
 =
rc
 || 
NULL
 =
˘x
.
∑ge_poﬁ
)

50 
	`ERR
(("CouldÇot createÅheÖage-pool"));

52 
˘x
.
num_‰ì_∑ges
 = 
num_∑ges
;

54 
	`oc_¸t_©om_˙t_öô
(&
˘x
.
a˙t
, ctx.
num_‰ì_∑ges
);

55 
	}
}

57 
	$oc_ué_∑ge_‰ì_ªsour˚s
()

59 
	`∂_mm_poﬁ_dñëe
–
˘x
.
∑ge_poﬁ
 , 
de°roy_∑ge
);

60 
	`mem£t
(&
˘x
, 0, (ctx));

61 
	}
}

65 
	$öô_∑ge_w_d©a
 (
Oc_ué_∑ge
 *
pg_p
)

67 *
buf_p
;

68 
Pl_ué_iobuf
 *
iobuf_p
;

71 
buf_p
 = 
pg_p
->buf_p;

72 
iobuf_p
 = 
pg_p
->iobuf_p;

75 
	`mem£t
(
pg_p
, 0, (
Oc_ué_∑ge
));

76 
	`oc_¸t_öô_waô_q
(&
pg_p
->
waô_q
);

77 
pg_p
->
Êags
.
övÆid
 = 
TRUE
;

80 
pg_p
->
buf_p
 = buf_p;

81 
pg_p
->
iobuf_p
 = iobuf_p;

83 
	`oc_ué_debugas£π
(
NULL
 !
pg_p
->
buf_p
);

84 
	}
}

86 
	$öô_∑ge
 (*
_pg_p
)

88 
Oc_ué_∑ge
 *
pg_p
 = (Oc_ué_∑gê*)
_pg_p
;

90 
∂_ué_cfg
.
funs
.
	`iobuf_Æloc_f
(

91 
SS_PAGE_SIZE
,

92 &
pg_p
->
iobuf_p
,

93 &
pg_p
->
buf_p
);

94 
	`öô_∑ge_w_d©a
(
pg_p
);

95 
	}
}

97 
	$de°roy_∑ge
 (*
_pg_p
)

99 
Oc_ué_∑ge
 *
pg_p
 = (Oc_ué_∑gê*)
_pg_p
;

101 
∂_ué_cfg
.
funs
.
	`iobuf_‰ì_f
(
pg_p
->
iobuf_p
);

102 
	}
}

106 
Oc_ué_∑ge
 *
	$oc_ué_∑ge_Æloc_c‹e
(
Oc_wu
 *
wu_p
)

108 
boﬁ
 
rc
;

109 
Oc_ué_∑ge
 *
pg_p
;

112 
	`oc_ué_as£π
 (
˘x
.
num_‰ì_∑ges
 > 0);

113 
˘x
.
num_‰ì_∑ges
--;

114 
rc
 = 
	`∂_mm_poﬁ_Æloc
(
˘x
.
∑ge_poﬁ
,

115 (**)&
pg_p
);

116 
	`oc_ué_debugas£π
(
rc
 && 
pg_p
 &&Ög_p->
buf_p
);

117 
	`oc_ué_debugas£π
(0 =
pg_p
->
ªf_cou¡
);

118 
pg_p
->
ªf_cou¡
++;

119 
pg_p
->
Êags
.
övÆid
 = 
FALSE
;

121 
	`oc_ué_åa˚_wu_lvl
(4, 
OC_EV_UTL_PG_ALLOC_CORE
,

122 
wu_p
,

124 
˘x
.
num_‰ì_∑ges
, 
pg_p
 ,Ög_p->
buf_p
);

126  
pg_p
;

127 
	}
}

130 
Oc_ué_∑ge
 *
	$oc_ué_∑ge_Æloc_b
(
Oc_wu
 *
wu_p
)

132 
	`oc_ué_åa˚_wu_lvl
(4, 
OC_EV_UTL_PG_ALLOC_B
,

133 
wu_p
,

134 "#‰ì=%d", 
˘x
.
num_‰ì_∑ges
);

137 
	`oc_¸t_©om_˙t_dec
(&
˘x
.
a˙t
, 1);

139  
	`oc_ué_∑ge_Æloc_c‹e
(
wu_p
);

140 
	}
}

142 
Oc_ué_∑ge
 *
	$oc_ué_∑ge_Æloc_°ri˘
(
Oc_wu
 *
wu_p
)

145 
	`oc_ué_as£π
(
˘x
.
num_‰ì_∑ges
 > 0);

147  
	`oc_ué_∑ge_Æloc_b
(
wu_p
);

148 
	}
}

152 
	$oc_ué_∑ge_öc
(
Oc_wu
 *
wu_p
, 
Oc_ué_∑ge
 *
pg_p
)

154 
	`oc_ué_debugas£π
(
pg_p
->
ªf_cou¡
 > 0);

155 
pg_p
->
ªf_cou¡
++;

157 
	`oc_ué_åa˚_wu_lvl
(4, 
OC_EV_UTL_PG_INC
, 
wu_p
, "#addr=%LuÖg=%p",

158 
pg_p
->
pos
.
addr_i
,Ög_p);

159 
	}
}

165 
	$oc_ué_∑ge_dec
(
Oc_wu
 *
wu_p
, 
Oc_ué_∑ge
 *
pg_p
)

167 
	`oc_ué_debugas£π
(
pg_p
->
ªf_cou¡
 > 0);

168 
pg_p
->
ªf_cou¡
--;

171 
	`oc_ué_åa˚_wu_lvl
(4, 
OC_EV_UTL_PG_DEC
, 
wu_p
,

173 
pg_p
->
pos
.
addr_i
,Ög_p,Ög_p->
ªf_cou¡
,Ög_p->
buf_p
);

176 i‡(0 =
pg_p
->
ªf_cou¡
) {

180 
	`öô_∑ge_w_d©a
(
pg_p
);

182 
˘x
.
num_‰ì_∑ges
++;

184 
	`oc_ué_åa˚_wu_lvl
(4, 
OC_EV_UTL_PG_FREE
, 
wu_p
,

186 
˘x
.
num_‰ì_∑ges
, 
pg_p
,Ög_p->
buf_p
);

188 
	`oc_ué_debugas£π
(
NULL
 !
pg_p
->
buf_p
);

190 
	`∂_mm_poﬁ_‰ì
(
˘x
.
∑ge_poﬁ
, 
pg_p
);

192 
	`oc_¸t_©om_˙t_öc
(&
˘x
.
a˙t
, 1);

194 
	}
}

199 
	#CASE
(
s
Ës:  #†; 

	)

201 c⁄° *
	$oc_ué_∑ge_°rög_of_°©e
(
Oc_ué_∑ge_°©e
 
°©e
)

203 
°©e
)

205 
	`CASE
(
OC_UTL_PAGE_NORMAL
);

206 
	`CASE
(
OC_UTL_PAGE_IN_READ
);

207 
	`CASE
(
OC_UTL_PAGE_IN_WRITE
);

210 
	`ERR
(("unknown state"));

212 
	}
}

214 #unde‡
CASE


218 
	$oc_ué_∑ge_num_‰ì
()

220  
˘x
.
num_‰ì_∑ges
;

221 
	}
}

	@oc_utl_page.h

1 #i‚de‡
OC_UTL_PAGE_H


2 
	#OC_UTL_PAGE_H


	)

4 
	~"oc_wu_s.h
"

5 
	~"oc_ué.h
"

10 
oc_ué_∑ge_öô
(
num_∑ges
);

12 
oc_ué_∑ge_‰ì_ªsour˚s
();

15 
Oc_ué_∑ge
 *
oc_ué_∑ge_Æloc_b
(
Oc_wu
 *
wu_p
);

20 
Oc_ué_∑ge
 *
oc_ué_∑ge_Æloc_°ri˘
(
Oc_wu
 *
wu_p
);

23 
oc_ué_∑ge_öc
(
Oc_wu
 *
wu_p
, 
Oc_ué_∑ge
 *
pg_p
);

29 
oc_ué_∑ge_dec
(
Oc_wu
 *
wu_p
, 
Oc_ué_∑ge
 *
pg_p
);

31 c⁄° *
oc_ué_∑ge_°rög_of_°©e
(
Oc_ué_∑ge_°©e
 
°©e
);

34 
oc_ué_∑ge_num_‰ì
();

	@oc_utl_trace.c

3 
	~<mem‹y.h
>

4 
	~"∂_åa˚_ba£.h
"

5 
	~"∂_ba£.h
"

6 
	~"oc_ué.h
"

8 
	~"oc_ué_åa˚_ba£.h
"

9 
	~"oc_ué_åa˚.h
"

10 
	~"oc_ué.h
"

13 #i‡
OC_DEBUG


17 
	#CASE
(
s
Ës:  #†; 

	)

19 c⁄° *
	$oc_ué_°rög_of_åa˚_evít
(
ev_i
)

22 
ev_i
) {

23 
	`CASE
(
OC_EV_UTL_PG_FREE
);

24 
	`CASE
(
OC_EV_UTL_PG_ALLOC_STRICT
);

25 
	`CASE
(
OC_EV_UTL_PG_ALLOC_B
);

26 
	`CASE
(
OC_EV_UTL_PG_ALLOC_CORE
);

27 
	`CASE
(
OC_EV_UTL_PG_INC
);

28 
	`CASE
(
OC_EV_UTL_PG_DEC
);

29 
	`CASE
(
OC_EV_UTL_PG_ALLOC_ARRAY_B
);

31 
	`CASE
(
OC_EV_UTL_PG_SIGNAL
);

32 
	`CASE
(
OC_EV_UTL_PG_SIGNAL_OFF
);

34 
	`CASE
(
OC_EV_UTL_ATTR_INIT
);

35 
	`CASE
(
OC_EV_UTL_ATTR_GET
);

36 
	`CASE
(
OC_EV_UTL_ATTR_SET
);

38 
	`CASE
(
OC_EV_UTL_VBUF_POOL_INIT
);

40 
	`CASE
(
OC_EV_UTL_CA_RACE_COND
);

43 
	`ERR
(("bad sèã %d",
ev_i
 ));

45 
	}
}

47 #unde‡
CASE


49 
	$oc_ué_åa˚_wu_lvl
(
Àvñ
,

50 
Oc_ué_åa˚_evít
 
ev_i
,

51 
Oc_wu
 *
wu_pi
,

52 c⁄° *
fmt_p
,

55 
va_li°
 
¨gs
;

57 i‡(
	`∂_åa˚_ba£_is_£t
(
PL_TRACE_BASE_OC_UTL
, 
Àvñ
))

60 
buf
[100];

62 
	`va_°¨t
(
¨gs
, 
fmt_p
);

63 
	`v¢¥ötf
(
buf
, 100, 
fmt_p
, 
¨gs
);

64 
	`oc_ué_åa˚_ba£_wu_lvl
(
TRUE
, 
PL_TRACE_BASE_OC_UTL
, 
Àvñ
, 
wu_pi
,

65 "%†%s", 
	`oc_ué_°rög_of_åa˚_evít
(
ev_i
), 
buf
);

66 
	`va_íd
(
¨gs
);

68 
	}
}

	@oc_utl_trace.h

5 #i‚de‡
OC_UTL_TRACE_H


6 
	#OC_UTL_TRACE_H


	)

8 
	~<°d¨g.h
>

10 
	gOc_wu
;

12 
	eOc_ué_åa˚_evít
 {

13 
	mOC_EV_UTL_PG_FREE
,

14 
	mOC_EV_UTL_PG_ALLOC_STRICT
,

15 
	mOC_EV_UTL_PG_ALLOC_B
,

16 
	mOC_EV_UTL_PG_ALLOC_CORE
,

17 
	mOC_EV_UTL_PG_ALLOC_ARRAY_B
,

18 
	mOC_EV_UTL_PG_INC
,

19 
	mOC_EV_UTL_PG_DEC
,

21 
	mOC_EV_UTL_PG_SIGNAL
,

22 
	mOC_EV_UTL_PG_SIGNAL_OFF
,

24 
	mOC_EV_UTL_ATTR_INIT
,

25 
	mOC_EV_UTL_ATTR_GET
,

26 
	mOC_EV_UTL_ATTR_SET
,

28 
	mOC_EV_UTL_VBUF_POOL_INIT
,

29 
	mOC_EV_UTL_CA_RACE_COND
,

31 } 
	tOc_ué_åa˚_evít
;

33 #i‡
OC_DEBUG


35 
oc_ué_åa˚_wu_lvl
(
Àvñ
,

36 
Oc_ué_åa˚_evít
 
ev_i
,

37 
Oc_wu
 *
wu_pi
,

38 c⁄° *
fmt_p
,

42 
ölöe
 
	$oc_ué_åa˚_wu_lvl
(
Àvñ
,

43 
Oc_ué_åa˚_evít
 
ev_i
,

44 
Oc_wu
 *
wu_pi
,

45 c⁄° *
fmt_p
,

46 ...Ë{
	}
}

	@oc_utl_trace_base.c

4 
	~<mem‹y.h
>

5 
	~<±hªad.h
>

7 
	~"∂_ba£.h
"

8 
	~"∂_ba£.h
"

9 
	~"oc_¸t_öt.h
"

10 
	~"∂_åa˚_ba£.h
"

11 
	~"oc_ué_åa˚_ba£.h
"

12 
	~"oc_ué.h
"

14 #i‡
OC_DEBUG


15 
oc_ué_åa˚_fuŒ
–
boﬁ
 
check_thrd_id_i
,

16 
Pl_åa˚_ba£_èg
 
èg_i
,

17 
Àvñ
,

18 
Oc_wu
 *
wu_pi
,

19 c⁄° *
fmt_p
,

20 
va_li°
 
¨gs
 );

22 
	$oc_ué_åa˚_ba£_wu
–
boﬁ
 
check_thrd_id_i
,

23 
Pl_åa˚_ba£_èg
 
èg_i
,

24 
Àvñ
,

25 
Oc_wu
 *
wu_pi
,

26 c⁄° *
fmt_p
,

29 
va_li°
 
¨gs
;

31 
	`va_°¨t
(
¨gs
, 
fmt_p
);

32 
	`oc_ué_åa˚_fuŒ
(
check_thrd_id_i
, 
èg_i
, 
Àvñ
, 
wu_pi
, 
fmt_p
, 
¨gs
);

33 
	`va_íd
(
¨gs
);

34 
	}
}

36 
	$oc_ué_åa˚_ba£_wu_lvl
(
boﬁ
 
check_thrd_id_i
,

37 
Pl_åa˚_ba£_èg
 
èg_i
,

38 
Àvñ
,

39 
Oc_wu
 *
wu_pi
,

40 c⁄° *
fmt_p
,

43 
va_li°
 
¨gs
;

45 
	`va_°¨t
(
¨gs
, 
fmt_p
);

46 
	`oc_ué_åa˚_fuŒ
(
check_thrd_id_i
, 
èg_i
, 
Àvñ
, 
wu_pi
, 
fmt_p
, 
¨gs
);

47 
	`va_íd
(
¨gs
);

48 
	}
}

50 
	$oc_ué_åa˚_fuŒ
–
boﬁ
 
check_thrd_id_i
,

51 
Pl_åa˚_ba£_èg
 
èg_i
,

52 
Àvñ
,

53 
Oc_wu
 *
wu_pi
,

54 c⁄° *
fmt_p
,

55 
va_li°
 
¨gs
 )

57 
uöt32
 
ªq_id
 = 0;

58 
uöt32
 
po_id
 = 0;

59 
oc_¸t_thªad_id
 = 0;

61 i‡(
wu_pi
) {

62 
ªq_id
 = 
wu_pi
->req_id;

63 
po_id
 = 
wu_pi
->po_id;

69 
check_thrd_id_i
 = 
FALSE
;

72 i‡(
check_thrd_id_i
) {

74 i‡(0 =
oc_¸t_thªad_id
)

75 
oc_¸t_thªad_id
 = 
	`oc_¸t_gë_thªad
 ();

78 i‡(
check_thrd_id_i
) {

79 
	`oc_ué_as£π
(0 =
oc_¸t_thªad_id
 ||

80 ()
	`±hªad_£lf
(Ë=
oc_¸t_thªad_id
);

81 
	`oc_¸t_as£π
();

85 i‡(
	`∂_åa˚_ba£_is_£t
(
èg_i
, 
Àvñ
)) {

87 
buf
[100];

89 
	`v¢¥ötf
(
buf
, 100, 
fmt_p
, 
¨gs
);

90 
	`∂_åa˚_ba£
(
èg_i
,

91 
Àvñ
,

93 
ªq_id
,

94 
po_id
,

95 
buf
);

97 
	}
}

	@oc_utl_trace_base.h

5 #i‚de‡
OC_UTL_TRACE_BASE_H


6 
	#OC_UTL_TRACE_BASE_H


	)

8 
	~<°d¨g.h
>

9 
	~"∂_åa˚_ba£.h
"

10 
	~"∂_ba£.h
"

12 
	gOc_cb
;

13 
	gOc_wu
;

15 #i‡
OC_DEBUG


16 
oc_ué_åa˚_ba£_wu
–
boﬁ
 
check_thrd_id_i
,

17 
Pl_åa˚_ba£_èg
 
èg_i
,

18 
Àvñ
,

19 
Oc_wu
 *
wu_pi
,

20 c⁄° *
fmt_p
,

23 
oc_ué_åa˚_ba£_wu_lvl
(
boﬁ
 
check_thrd_id_i
,

24 
Pl_åa˚_ba£_èg
 
èg_i
,

25 
Àvñ
,

26 
Oc_wu
 *
wu_pi
,

27 c⁄° *
fmt_p
,

32 
ölöe
 
	$oc_ué_åa˚_ba£_wu
–
boﬁ
 
check_thrd_id_i
,

33 
Pl_åa˚_ba£_èg
 
èg_i
,

34 
Àvñ
,

35 
Oc_wu
 *
wu_pi
,

36 c⁄° *
fmt_p
,

37 ...Ë{
	}
}

39 
ölöe
 
	$oc_ué_åa˚_ba£_wu_lvl
(
boﬁ
 
check_thrd_id_i
,

40 
Pl_åa˚_ba£_èg
 
èg_i
,

41 
Àvñ
,

42 
Oc_wu
 *
wu_pi
,

43 c⁄° *
fmt_p
,

44 ...Ë{
	}
}

	@oc_utl_trk.c

7 
	~"oc_ué_åk.h
"

8 
	~"oc_¸t_öt.h
"

9 
	~"oc_rm_s.h
"

10 
	~"oc_ué.h
"

12 
add_ªf
(
Oc_wu
 *
wu_pi
, 
Oc_¸t_rw_lock
 *
lock_p
);

13 
rmv_ªf
(
Oc_wu
 *
wu_pi
, 
Oc_¸t_rw_lock
 *
lock_p
);

16 
	$add_ªf
(
Oc_wu
 *
wu_pi
, 
Oc_¸t_rw_lock
 *
lock_p
)

18 
Oc_ué_åk_ªf_£t
 *
ªfs_p
 = &
wu_pi
->
rm_p
->
ué_rm
.
ªfs
;

21 
	`oc_ué_as£π
(
ªfs_p
->
sum
 <
OC_UTL_TRK_MAX_REFS
);

23 i‡(
ªfs_p
->
sum
 =ªfs_p->
curs‹
) {

25 
ªfs_p
->
locks
[ªfs_p->
curs‹
] = 
lock_p
;

26 
ªfs_p
->
curs‹
++;

27 
ªfs_p
->
sum
++;

32 
i
;

34 
	`oc_ué_as£π
(
ªfs_p
->
curs‹
-1 >= 0);

35 
i
=
ªfs_p
->
curs‹
-1; i>=0; i--)

36 i‡(
NULL
 =
ªfs_p
->
locks
[
i
]) {

37 
ªfs_p
->
locks
[
i
] = 
lock_p
;

38 
ªfs_p
->
sum
++;

43 
	`ERR
(("sanity: didÇot manageÅoáddáÜock intoÅheÜist"));

45 
	}
}

48 
	$rmv_ªf
(
Oc_wu
 *
wu_pi
, 
Oc_¸t_rw_lock
 *
lock_p
)

50 
Oc_ué_åk_ªf_£t
 *
ªfs_p
 = &
wu_pi
->
rm_p
->
ué_rm
.
ªfs
;

53 
	`oc_ué_debugas£π
(
ªfs_p
->
sum
 > 0);

54 
	`oc_ué_debugas£π
(
ªfs_p
->
curs‹
 > 0);

56 
ªfs_p
->
sum
--;

58 i‡(
ªfs_p
->
locks
[ªfs_p->
curs‹
-1] =
lock_p
) {

63 
ªfs_p
->
locks
[ªfs_p->
curs‹
-1] = 
NULL
;

64 
ªfs_p
->
curs‹
--;

66 
ªfs_p
->
curs‹
 >= 1 &&

67 
NULL
 =
ªfs_p
->
locks
[ªfs_p->
curs‹
-1])

68 
ªfs_p
->
curs‹
--;

72 
i
;

77 
	`oc_ué_as£π
(
ªfs_p
->
curs‹
 >= 1);

78 
i
=
ªfs_p
->
curs‹
-1; i>=0; i--) {

79 i‡(
ªfs_p
->
locks
[
i
] =
lock_p
) {

80 
ªfs_p
->
locks
[
i
] = 
NULL
;

86 
	`ERR
(("lock=%∞wa†ªÀa£d; howevî, iàwa†√vîÅakí.", 
lock_p
));

88 
	}
}

91 
	$oc_ué_åk_¸t_lock_ªad
(
Oc_wu
 *
wu_p
, 
Oc_¸t_rw_lock
 *
lock_p
)

93 
	`oc_ué_debugas£π
(
wu_p
->
rm_p
);

94 
	`oc_¸t_lock_ªad
(
lock_p
);

95 
	`add_ªf
(
wu_p
, 
lock_p
);

96 
	}
}

98 
	$oc_ué_åk_¸t_lock_wrôe
(
Oc_wu
 *
wu_p
, 
Oc_¸t_rw_lock
 *
lock_p
)

100 
	`oc_ué_debugas£π
(
wu_p
->
rm_p
);

101 
	`oc_¸t_lock_wrôe
(
lock_p
);

102 
	`add_ªf
(
wu_p
, 
lock_p
);

103 
	}
}

105 
	$oc_ué_åk_¸t_u∆ock
(
Oc_wu
 *
wu_p
, 
Oc_¸t_rw_lock
 *
lock_p
)

107 
	`oc_ué_debugas£π
(
wu_p
->
rm_p
);

108 
	`oc_¸t_u∆ock
(
lock_p
);

109 
	`rmv_ªf
(
wu_p
, 
lock_p
);

110 
	}
}

113 
	$oc_ué_åk_ab‹t
(
Oc_wu
 *
wu_p
)

115 
i
;

116 
Oc_ué_åk_ªf_£t
 *
ªfs_p
;

118 
	`oc_ué_debugas£π
(
wu_p
->
rm_p
);

119 
ªfs_p
 = &
wu_p
->
rm_p
->
ué_rm
.
ªfs
;

121 i‡(0 =
ªfs_p
->
curs‹
)

124 
i
=0; i<
ªfs_p
->
curs‹
; i++) {

126 i‡(
ªfs_p
->
locks
[
i
] !
NULL
) {

127 
	`oc_ué_as£π
 (
ªfs_p
->
locks
[
i
]->
mode
 !
CRT_RWSTATE_NONE
);

128 
	`oc_¸t_u∆ock
(
ªfs_p
->
locks
[
i
]);

129 
ªfs_p
->
locks
[
i
] = 
NULL
;

132 
	}
}

134 
	$oc_ué_åk_föÆize
(
Oc_wu
 *
wu_pi
)

136 
Oc_ué_åk_ªf_£t
 *
ªfs_p
 = &
wu_pi
->
rm_p
->
ué_rm
.
ªfs
;

138 
	`oc_ué_as£π
(
ªfs_p
->
sum
 == 0);

139 
	`oc_ué_as£π
(
ªfs_p
->
curs‹
 == 0);

140 
	}
}

	@oc_utl_trk.h

1 #i‚de‡
OC_UTL_TRK_H


2 
	#OC_UTL_TRK_H


	)

4 
	~"oc_¸t_öt.h
"

6 
oc_ué_åk_¸t_lock_ªad
(
Oc_wu
 *
wu_p
, 
Oc_¸t_rw_lock
 *
lock_p
);

7 
oc_ué_åk_¸t_lock_wrôe
(
Oc_wu
 *
wu_p
, 
Oc_¸t_rw_lock
 *
lock_p
);

8 
oc_ué_åk_¸t_u∆ock
(
Oc_wu
 *
wu_p
, 
Oc_¸t_rw_lock
 *
lock_p
);

11 
oc_ué_åk_ab‹t
(
Oc_wu
 *
wu_p
);

16 
oc_ué_åk_föÆize
(
Oc_wu
 *
wu_pi
);

	@test/oc_utl_htbl_test.c

4 
	~<mem‹y.h
>

5 
	~<°dlib.h
>

7 
	~"∂_öt.h
"

8 
	~"oc_ué_htbl.h
"

9 
	~"oc_ué.h
"

14 
	#DATA_SIZE
 10

	)

17 
Ss_¶i°_node
 
	mlök
;

18 
	mkey
;

19 
	md©a
[
DATA_SIZE
];

20 } 
	tEÀm
 ;

22 
	#NUM_ELEM
 (1000)

	)

24 
Pl_mm_›
 *
	gñem_poﬁ_p
 = 
NULL
;

27 
	sOc_li°
 {

28 
Ss_¶i°
 
	mli°
;

29 
Oc_ué_htbl_com∑ª
 
	mcomp
;

30 } 
	tOc_li°
;

33 
ã°_öô
();

34 
EÀm
 *
ñem_Æloc
();

37 
uöt32
 
öt_hash
(*
_key
, 
num_buckës
, 
dummy
);

38 
boﬁ
 
öt_com∑ª
(*
_ñem
, *
_key
);

42 
gíî©e_™d_ö£π_ñemíts
(
Oc_li°
 *
l_i
, 
Oc_ué_htbl
 *
h_i
);

43 
øndom_›s
–
Oc_li°
 *
l_i
, 
Oc_ué_htbl
 *
h_i
,

44 
Ss_¶i°
 *
‰ì_li°1
, Ss_¶i° *
‰ì_li°2
 );

45 
add_ñemít_to_bŸh_im∂
–
Oc_li°
 *
l_i
, 
Oc_ué_htbl
 *
h_i
, 
key_i
);

46 
ã°_ss¶i°s
();

50 
uöt32
 
	$öt_hash
(*
_key
, 
num_buckës
, 
dummy
)

52 
key
 = (Ë
_key
;

53  
key
%
num_buckës
;

54 
	}
}

56 
boﬁ
 
	$öt_com∑ª
(*
_ñem
, *
_key
)

58 
EÀm
 *
ñem
 = (EÀm*)
_ñem
;

59 
key
 = ()
_key
;

61 i‡(
ñem
->
key
 =keyË 
TRUE
;

62  
FALSE
;

63 
	}
}

86 
	$li°_¸óã
(
Oc_li°
 *
l_i
, 
Oc_ué_htbl_com∑ª
 
comp
)

88 
	`ss¶i°_öô
(&
l_i
->
li°
);

89 
l_i
->
comp
 = comp;

90 
	}
}

92 * 
	$li°_lookup
(
Oc_li°
 *
l_i
, *
key_i
)

94 
EÀm
 *
ñem_p
;

96  
ñem_p
 = 
	`ss¶i°_hód
(&
l_i
->
li°
);

97 
ñem_p
 !
NULL
 ;

98 
ñem_p
(
EÀm
 *Ëñem_p->
lök
.
√xt
 )

99 i‡(
TRUE
 =(
l_i
->
comp
)(
ñem_p
, 
key_i
)) Élem_p;

101  
NULL
;

102 
	}
}

104 
boﬁ
 
	$li°_ö£π
(
Oc_li°
 *
l_i
, *
key_i
, * 
_ñem
)

106 i‡(
	`li°_lookup
(
l_i
, 
key_i
Ë!
NULL
Ë 
FALSE
;

108 
	`ss¶i°_add_èû
(&
l_i
->
li°
, (
Ss_¶i°_node
*)
_ñem
);

109  
FALSE
;

110 
	}
}

112 
boﬁ
 
	$li°_ªmove
(
Oc_li°
 *
l_i
, *
key_i
)

114 
EÀm
 *
ñem_p
;

116 
ñem_p
 = 
	`li°_lookup
(
l_i
, 
key_i
);

117 i‡(
NULL
 =
ñem_p
Ë 
FALSE
;

119 
	`ss¶i°_ªmove_node
(&
l_i
->
li°
, (
Ss_¶i°_node
*Ë
ñem_p
);

120  
TRUE
;

121 
	}
}

123 * 
	$li°_exåa˘
(
Oc_li°
 *
l_i
, *
key_i
)

125 
EÀm
 *
ñem_p
;

127 
ñem_p
 = 
	`li°_lookup
(
l_i
, 
key_i
);

128 i‡(
NULL
 =
ñem_p
)  NULL;

130 
	`ss¶i°_ªmove_node
(&
l_i
->
li°
, (
Ss_¶i°_node
*Ë
ñem_p
);

131  
ñem_p
;

132 
	}
}

135 
	$ã°_öô
()

137 i‡(!
	`∂_mm_poﬁ_¸óã
((
EÀm
),

138 
PL_MM_ALIGN_32BITS
,

139 
NUM_ELEM
,

140 
NULL
,

141 &
ñem_poﬁ_p
)) {

142 
	`ERR
(("failedÅo createÉlementÖool"));

144 
	}
}

146 
EÀm
 *
	$ñem_Æloc
()

148 
EÀm
 *
ñem_p
;

150 i‡(!
	`∂_mm_poﬁ_Æloc
(
ñem_poﬁ_p
, (**Ë&
ñem_p
)) {

151  
NULL
;

153 
	`mem£t
(
ñem_p
,0, (
EÀm
));

154  
ñem_p
;

156 
	}
}

166 
EÀm
 *
	$ñem_gíî©e
–
key
, *
d©a
 )

168 
EÀm
 *
ñem_p
 = 
	`ñem_Æloc
();

170 
	`oc_ué_as£π
(
ñem_p
);

171 
ñem_p
->
key
 = key;

172 
	`mem£t
(
ñem_p
->
d©a
, 0, (
DATA_SIZE
));

173 
	`°∫˝y
(
ñem_p
->
d©a
, d©a, 
DATA_SIZE
-1);

175  
ñem_p
;

176 
	}
}

180 
	$add_ñemít_to_bŸh_im∂
–
Oc_li°
 *
l_i
, 
Oc_ué_htbl
 *
h_i
, 
key_i
)

182 
EÀm
 *
ñem1_p
, *
ñem2_p
;

183 
d©a
[
DATA_SIZE
];

185 
	`¢¥ötf
(
d©a
, 
DATA_SIZE
, "E(%d)", 
key_i
);

187 
ñem1_p
 = 
	`ñem_gíî©e
(
key_i
, 
d©a
);

188 
ñem2_p
 = 
	`ñem_gíî©e
(
key_i
, 
d©a
);

191 
	`li°_ö£π
(
l_i
, (*Ë
key_i
, (*Ë
ñem1_p
);

192 
	`oc_ué_htbl_ö£π
(
h_i
, (*Ë
key_i
, (*Ë
ñem2_p
);

194 
	}
}

196 
	$gíî©e_™d_ö£π_ñemíts
(
Oc_li°
 *
l_i
, 
Oc_ué_htbl
 *
h_i
)

198 
i
;

200 
i
=0; i<
NUM_ELEM
/2; i++)

201 
	`add_ñemít_to_bŸh_im∂
–
l_i
, 
h_i
, 
i
 );

203  
NUM_ELEM
/2;

204 
	}
}

207 
	$øndom_›s
(
Oc_li°
 *
l_i
, 
Oc_ué_htbl
 *
h_i
,

208 
Ss_¶i°
 *
‰ì_li°1
, Ss_¶i° *
‰ì_li°2
 )

210 
i
;

211 
EÀm
 *
ñem1_p
, *
ñem2_p
;

212 
key
;

215 
i
=0; i<10000; i++){

216 
	`ønd
 () % 3) {

219 
ñem1_p
 = (
EÀm
*Ë
	`ss¶i°_ªmove_hód
(
‰ì_li°1
);

220 
ñem2_p
 = (
EÀm
*Ë
	`ss¶i°_ªmove_hód
(
‰ì_li°2
);

222 i‡(
ñem1_p
 !
NULL
) {

223 
	`oc_ué_as£π
(
ñem2_p
 !
NULL
);

224 
	`oc_ué_as£π
(
ñem1_p
->
key
 =
ñem2_p
->key);

226 
	`¥ötf
("ö£π(%d)\n", 
ñem1_p
->
key
);

227 
	`li°_ö£π
(
l_i
, (*Ë
ñem1_p
->
key
,Élem1_p);

228 
	`oc_ué_htbl_ö£π
(
h_i
, (*Ë
ñem2_p
->
key
,Élem2_p);

233 
key
 = 
	`ønd
(Ë% (
NUM_ELEM
/2);

234 
	`¥ötf
("lookup(%d)\n", 
key
);

236 
ñem1_p
 = 
	`li°_lookup
(
l_i
, (*)
key
);

237 
ñem2_p
 = 
	`oc_ué_htbl_lookup
(
h_i
, (*)
key
);

238 i‡–
NULL
 =
ñem1_p
 && NULL =
ñem2_p
 )

240 i‡(
NULL
 =
ñem1_p


241 || 
NULL
 =
ñem2_p


242 || 
ñem1_p
->
key
 !
ñem2_p
->key)

243 
	`ERR
(("lookup didÇot match"));

247 
key
 = 
	`ønd
(Ë% (
NUM_ELEM
/2);

248 
	`¥ötf
("exåa˘(%d)\n", 
key
);

250 
ñem1_p
 = (
EÀm
*Ë
	`li°_exåa˘
(
l_i
, (*)
key
);

251 
ñem2_p
 = (
EÀm
*Ë
	`oc_ué_htbl_exåa˘
(
h_i
, (*)
key
);

252 i‡–
NULL
 =
ñem1_p
 && NULL =
ñem2_p
 ) {

253 
	`¥ötf
("extractÑeturn NULL\n");

256 i‡(
NULL
 =
ñem1_p
)

257 
	`ERR
(("extract codes didÇot match"));

258 i‡–
NULL
 =
ñem2_p
 )

259 
	`ERR
(("extract codes didÇot match"));

260 i‡–
ñem1_p
->
key
 !
ñem2_p
->key ) {

261 
	`ERR
(("extract codes didÇot match"));

263 
	`ss¶i°_add_èû
(
‰ì_li°1
, (
Ss_¶i°_node
*Ë
ñem1_p
);

264 
	`ss¶i°_add_èû
(
‰ì_li°2
, (
Ss_¶i°_node
*Ë
ñem2_p
);

265 
	`¥ötf
("addingÅo freeÜists,Üen=%lu,Üen=%lu\n",

266 
	`ss¶i°_gë_Àngth
(
‰ì_li°1
),

267 
	`ss¶i°_gë_Àngth
(
‰ì_li°2
)

284 
	`ERR
(("sanity"));

287 
	}
}

289 
	$¥öt_li°
(c⁄° *
s
, 
Ss_¶i°
 *
l_p
)

291 
Ss_¶i°_node
 *
node_p
;

292 
EÀm
 *
e_p
;

294 
	`¥ötf
("li° %s=", 
s
);

295 
node_p
 = 
	`ss¶i°_hód
(
l_p
);

296 
node_p
 !
NULL
;

297 
node_p
 = 
	`ss¶i°_√xt
(node_p))

299 
e_p
 = (
EÀm
*Ë
node_p
;

300 
	`¥ötf
("<%d>", 
e_p
->
key
);

303 
	`¥ötf
 ("\n");

304 
	}
}

306 
	$ã°_ss¶i°s
()

308 
Ss_¶i°
 
l1
, 
l2
;

309 
EÀm
 
e_a
[10];

310 
i
;

312 
	`mem£t
(
e_a
, 0, (e_a));

314 
i
=0; i<10; i++)

315 
e_a
[
i
].
key
=i;

317 
	`ss¶i°_öô
(&
l1
);

318 
	`ss¶i°_öô
(&
l2
);

320 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[0].
lök
);

321 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[1].
lök
);

323 
	`ss¶i°_add_èû
(&
l2
, &
e_a
[2].
lök
);

324 
	`ss¶i°_add_èû
(&
l2
, &
e_a
[3].
lök
);

325 
	`ss¶i°_add_èû
(&
l2
, &
e_a
[4].
lök
);

327 
	`¥ötf
("\n"); 
	`fÊush
(
°dout
);

328 
	`¥ötf
("-----------------------------------");

329 
	`¥ötf
("Testing ssslist_add_list_as_tail\n");

330 
	`¥öt_li°
("l1=", &
l1
);

331 
	`¥öt_li°
("l2=", &
l2
);

332 
	`ss¶i°_add_li°_as_èû
(&
l1
, &
l2
);

333 
	`¥öt_li°
("l1=", &
l1
);

334 
	`¥öt_li°
("l2=", &
l2
);

336 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[5].
lök
);

337 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[6].
lök
);

338 
	`ss¶i°_add_li°_as_èû
(&
l1
, &
l2
);

339 
	`¥öt_li°
("l1=", &
l1
);

340 
	`¥öt_li°
("l2=", &
l2
);

341 
	`ss¶i°_add_li°_as_èû
(&
l1
, &
l2
);

342 
	`¥öt_li°
("l1=", &
l1
);

343 
	`¥öt_li°
("l2=", &
l2
);

344 
	`ss¶i°_add_li°_as_èû
(&
l2
, &
l1
);

345 
	`¥öt_li°
("l1=", &
l1
);

346 
	`¥öt_li°
("l2=", &
l2
);

348 
	`¥ötf
("-----------------------------------");

349 
	`¥ötf
("Testing ssslist_add_list_as_tail\n");

351 
	`ss¶i°_öô
(&
l1
);

352 
	`ss¶i°_öô
(&
l2
);

354 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[0].
lök
);

355 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[1].
lök
);

357 
	`ss¶i°_add_èû
(&
l2
, &
e_a
[2].
lök
);

358 
	`ss¶i°_add_èû
(&
l2
, &
e_a
[3].
lök
);

359 
	`ss¶i°_add_èû
(&
l2
, &
e_a
[4].
lök
);

361 
	`¥öt_li°
("l1=", &
l1
);

362 
	`¥öt_li°
("l2=", &
l2
);

363 
	`ss¶i°_add_li°_ö_‰⁄t
(&
l1
, &
l2
);

364 
	`¥öt_li°
("l1=", &
l1
);

365 
	`¥öt_li°
("l2=", &
l2
);

367 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[5].
lök
);

368 
	`ss¶i°_add_èû
(&
l1
, &
e_a
[6].
lök
);

369 
	`ss¶i°_add_li°_ö_‰⁄t
(&
l1
, &
l2
);

370 
	`¥öt_li°
("l1=", &
l1
);

371 
	`¥öt_li°
("l2=", &
l2
);

372 
	`ss¶i°_add_li°_ö_‰⁄t
(&
l1
, &
l2
);

373 
	`¥öt_li°
("l1=", &
l1
);

374 
	`¥öt_li°
("l2=", &
l2
);

375 
	`ss¶i°_add_li°_ö_‰⁄t
(&
l2
, &
l1
);

376 
	`¥öt_li°
("l1=", &
l1
);

377 
	`¥öt_li°
("l2=", &
l2
);

378 
	`ss¶i°_add_li°_ö_‰⁄t
(&
l2
, &
l1
);

379 
	`¥öt_li°
("l1=", &
l1
);

380 
	`¥öt_li°
("l2=", &
l2
);

382 
	`¥ötf
("-----------------------------------");

383 
	}
}

389 
	$maö
()

391 
Oc_ué_htbl
 
htbl
;

392 
Oc_li°
 
li°
;

393 
num_ñem
;

394 
Ss_¶i°
 
‰ì_li°1
;

395 
Ss_¶i°
 
‰ì_li°2
;

397 
	`ss¶i°_öô
(&
‰ì_li°1
);

398 
	`ss¶i°_öô
(&
‰ì_li°2
);

401 
	`∂_öô
();

403 
	`ã°_ss¶i°s
();

406 
	`ã°_öô
();

408 
	`oc_ué_htbl_¸óã
(

409 &
htbl
,

411 
NULL
,

412 
öt_hash
,

413 
öt_com∑ª
);

415 
	`li°_¸óã
(

416 &
li°
,

417 
öt_com∑ª


421 
num_ñem
 = 
	`gíî©e_™d_ö£π_ñemíts
(&
li°
, &
htbl
);

425 
	`øndom_›s
–&
li°
, &
htbl
, &
‰ì_li°1
, &
‰ì_li°2
 );

428 
	}
}

	@test/oc_utl_trk_test.c

4 
	~<mem‹y.h
>

5 
	~<°dlib.h
>

6 
	~<°dio.h
>

7 
	~<£m≠h‹e.h
>

9 
	~"∂_öt.h
"

10 
	~"oc_wu_s.h
"

11 
	~"oc_rm_s.h
"

12 
	~"oc_¸t_öt.h
"

13 
	~"oc_ué.h
"

14 
	~"oc_ué_åk.h
"

17 
	$run_ã°s
(* 
dummy
)

19 
Oc_¸t_rw_lock
 
lock1
, 
lock2
, 
lock3
;

20 
Oc_wu
 
wu
;

21 
Oc_rm_tickë
 
rm_tickë
;

23 
	`mem£t
(&
wu
, 0, (wu));

24 
	`mem£t
(&
rm_tickë
, 0, (rm_ticket));

25 
wu
.
rm_p
 = &
rm_tickë
;

27 
	`oc_¸t_öô_rw_lock
(&
lock1
);

28 
	`oc_¸t_öô_rw_lock
(&
lock2
);

29 
	`oc_¸t_öô_rw_lock
(&
lock3
);

31 
	`oc_ué_åk_¸t_lock_ªad
(&
wu
, &
lock1
);

32 
	`oc_ué_åk_¸t_lock_ªad
(&
wu
, &
lock2
);

33 
	`oc_ué_åk_¸t_lock_wrôe
(&
wu
, &
lock3
);

35 
	`oc_ué_åk_¸t_u∆ock
(&
wu
, &
lock1
);

36 
	`oc_ué_åk_¸t_lock_wrôe
(&
wu
, &
lock1
);

37 
	`oc_ué_åk_¸t_u∆ock
(&
wu
, &
lock2
);

38 
	`oc_ué_åk_ab‹t
(&
wu
);

40 
	`¥ötf
("\nSuccess\n");

41 
	`exô
(0);

42 
	}
}

44 
	$exec_ã°
()

47 
	`oc_¸t_¸óã_èsk
("run-ã°s", 
run_ã°s
, 
NULL
);

48 
	}
}

50 
	$maö
 (
¨gc
, *
¨gv
[])

52 
£m_t
 
£ma
;

53 
Oc_¸t_c⁄fig
 
¸t_c⁄f
;

55 
	`∂_öô
();

56 
	`oc_ué_öô
();

58 
	`oc_¸t_deÁu…_c⁄fig
(&
¸t_c⁄f
);

59 
¸t_c⁄f
.
öô_fun
 = 
exec_ã°
;

60 
	`oc_¸t_öô_fuŒ
(&
¸t_c⁄f
);

62 
	`£m_öô
(&
£ma
,0,0);

63 
	`£m_waô
(&
£ma
);

66 
	}
}

	@/usr/include/memory.h

11 #i‚de‡
_MEMORY_H


12 
	#_MEMORY_H


	)

15 
	~<°rög.h
>

	@/usr/include/pthread.h

14 
	~<sys/ty≥s.h
>

15 
	~<sig«l.h
>

16 
	~<sched.h
>

17 
	~<time.h
>

19 #i‚de‡
_PTHREAD_H


20 
	#_PTHREAD_H


	)

22 #ifde‡
__˝lu•lus


31 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 1

	)

33 
	#PTHREAD_CANCEL_ENABLE
 0

	)

34 
	#PTHREAD_CANCEL_DEFERRED
 0

	)

35 
	#PTHREAD_CANCEL_DISABLE
 1

	)

36 
	#PTHREAD_CANCELED
 ((*)-1)

	)

38 
	#PTHREAD_COND_INITIALIZER
 (
±hªad_c⁄d_t
)21

	)

39 
	#PTHREAD_CREATE_DETACHED
 1

	)

41 
	#PTHREAD_CREATE_JOINABLE
 0

	)

42 
	#PTHREAD_EXPLICIT_SCHED
 1

	)

43 
	#PTHREAD_INHERIT_SCHED
 0

	)

44 
	#PTHREAD_MUTEX_RECURSIVE
 0

	)

45 
	#PTHREAD_MUTEX_ERRORCHECK
 1

	)

46 
	#PTHREAD_MUTEX_NORMAL
 2

	)

47 
	#PTHREAD_MUTEX_DEFAULT
 
PTHREAD_MUTEX_NORMAL


	)

49 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 (
±hªad_muãx_t
)18

	)

50 
	#PTHREAD_NORMAL_MUTEX_INITIALIZER_NP
 (
±hªad_muãx_t
)19

	)

51 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 (
±hªad_muãx_t
)20

	)

52 
	#PTHREAD_MUTEX_INITIALIZER
 
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP


	)

53 
	#PTHREAD_ONCE_INIT
 { 
PTHREAD_MUTEX_INITIALIZER
, 0 }

	)

54 #i‡
deföed
(
_POSIX_THREAD_PRIO_INHERIT
) && _POSIX_THREAD_PRIO_INHERIT >= 0

55 
	#PTHREAD_PRIO_NONE
 0

	)

56 
	#PTHREAD_PRIO_INHERIT
 1

	)

57 
	#PTHREAD_PRIO_PROTECT
 2

	)

59 
	#PTHREAD_PROCESS_SHARED
 1

	)

60 
	#PTHREAD_PROCESS_PRIVATE
 0

	)

61 
	#PTHREAD_RWLOCK_INITIALIZER
 (
±hªad_rwlock_t
)22

	)

63 
	#PTHREAD_SCOPE_PROCESS
 0

	)

64 
	#PTHREAD_SCOPE_SYSTEM
 1

	)

67 
±hªad_©f‹k
 ((*)(), (*)(), (*)());

70 
±hªad_©å_de°roy
 (
±hªad_©å_t
 *);

71 
±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *, *);

72 
±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *, 
size_t
 *);

73 
±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *, *);

74 
±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *, 
sched_∑øm
 *);

75 
±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *, *);

76 
±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *, *);

77 
±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *, **, 
size_t
 *);

78 
±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *, **);

79 
±hªad_©å_öô
 (
±hªad_©å_t
 *);

80 
±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *, );

81 
±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *, 
size_t
);

82 
±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *, );

83 
±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *, c⁄° 
sched_∑øm
 *);

84 
±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *, );

85 
±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *, );

87 #ifde‡
_POSIX_THREAD_ATTR_STACKADDR


92 
±hªad_©å_£t°ack
 (
±hªad_©å_t
 *, *, 
size_t
);

93 
±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *, *);

96 #ifde‡
_POSIX_THREAD_ATTR_STACKSIZE


97 
±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *, 
size_t
 *);

98 
±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *, 
size_t
);

101 
±hªad_ˇn˚l
 (
±hªad_t
);

107 (*
__˛ónup_routöe_ty≥
) (*);

108 
	s_±hªad_˛ónup_h™dÀr


110 
__˛ónup_routöe_ty≥
 
fun˘i⁄
;

111 *
¨g
;

112 
_±hªad_˛ónup_h™dÀr
 *
√xt
;

113 } 
	t__±hªad_˛ónup_h™dÀr
;

115 
_±hªad_˛ónup_push
 (
__±hªad_˛ónup_h™dÀr
 *
h™dÀr
);

116 
_±hªad_˛ónup_p›
 (
execuã
);

118 
	#±hªad_˛ónup_push
(
_‚
, 
_¨g
Ë{ 
__±hªad_˛ónup_h™dÀr
 
__˛ónup_h™dÀr
 = \

119 { 
_‚
, 
_¨g
, 
NULL
 }; \

120 
	`_±hªad_˛ónup_push
–&
__˛ónup_h™dÀr
 );

	)

121 
	#±hªad_˛ónup_p›
(
_execuã
Ë
	`_±hªad_˛ónup_p›
–_execuã ); }

	)

124 
±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *);

125 
±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *);

126 
±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *, c⁄° 
±hªad_c⁄d©å_t
 *);

127 
±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *);

128 
±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *,

129 
±hªad_muãx_t
 *, c⁄° 
time•ec
 *);

130 
±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *);

131 
±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *);

132 
±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *, 
˛ockid_t
 *);

133 
±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *, *);

134 
±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *);

135 
±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *, 
˛ockid_t
);

136 
±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *, );

138 
±hªad_¸óã
 (
±hªad_t
 *, c⁄° 
±hªad_©å_t
 *,

140 
±hªad_dëach
 (
±hªad_t
);

141 
±hªad_equÆ
 (
±hªad_t
,Öthread_t);

142 
±hªad_exô
 (*Ë
__©åibuã__
 ((
n‹ëu∫
));

143 
±hªad_gë˝u˛ockid
 (
±hªad_t
, 
˛ockid_t
 *);

144 
±hªad_gësched∑øm
 (
±hªad_t
, *, 
sched_∑øm
 *);

145 *
±hªad_gë•ecific
 (
±hªad_key_t
);

146 
±hªad_joö
 (
±hªad_t
, **);

147 
±hªad_key_¸óã
 (
±hªad_key_t
 *, (*)(*));

148 
±hªad_key_dñëe
 (
±hªad_key_t
);

151 
±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *);

152 
±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *, *);

153 
±hªad_muãx_öô
 (
±hªad_muãx_t
 *, c⁄° 
±hªad_muãx©å_t
 *);

154 
±hªad_muãx_lock
 (
±hªad_muãx_t
 *);

155 
±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *, , *);

156 
±hªad_muãx_åylock
 (
±hªad_muãx_t
 *);

157 
±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *);

158 
±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *);

159 
±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *, *);

160 
±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *, *);

161 
±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *, *);

162 
±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *, *);

163 
±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *);

164 
±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *, );

165 
±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *, );

166 
±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *, );

167 
±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *, );

170 
±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *);

171 
±hªad_•ö_öô
 (
±hªad_•ölock_t
 *, );

172 
±hªad_•ö_lock
 (
±hªad_•ölock_t
 *);

173 
±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *);

174 
±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *);

177 
±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
rwlock
);

178 
±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
rwlock
, c⁄° 
±hªad_rwlock©å_t
 *
©å
);

179 
±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
rwlock
);

180 
±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
rwlock
);

181 
±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
rwlock
);

182 
±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
rwlock
);

183 
±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
rwlock
);

184 
±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
rwlock©å
);

185 
±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *
©å
,

186 *
psh¨ed
);

187 
±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
©å
, 
psh¨ed
);

188 
±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
rwlock©å
);

190 
±hªad_⁄˚
 (
±hªad_⁄˚_t
 *, (*)());

193 
±hªad_gëc⁄cuºícy
 ();

194 
±hªad_£tc⁄cuºícy
 ();

197 
±hªad_t
 
±hªad_£lf
 ();

198 
±hªad_£tˇn˚l°©e
 (, *);

199 
±hªad_£tˇn˚…y≥
 (, *);

200 
±hªad_£tsched∑øm
 (
±hªad_t
, , c⁄° 
sched_∑øm
 *);

201 
±hªad_£tsched¥io
 (
±hªad_t
, );

202 
±hªad_£t•ecific
 (
±hªad_key_t
, const *);

203 
±hªad_ã°ˇn˚l
 ();

207 
±hªad_gë©å_≈
 (
±hªad_t
, 
±hªad_©å_t
 *);

208 
±hªad_sigqueue
 (
±hªad_t
 *, , c⁄° 
sigvÆ
);

209 
±hªad_su•íd
 (
±hªad_t
);

210 
±hªad_c⁄töue
 (
±hªad_t
);

211 
±hªad_yõld
 ();

213 #ifde‡
__˝lu•lus


	@/usr/include/semaphore.h

13 
	~<sys/ty≥s.h
>

15 #i‚de‡
_SEMAPHORE_H


16 
	#_SEMAPHORE_H


	)

18 #ifde‡
__˝lu•lus


23 #i‚de‡
__INSIDE_CYGWIN__


24 
	s__£m_t
 {
__dummy
;} *
	t£m_t
;

27 
	#SEM_FAILED
 ((
£m_t
 *Ë0)

	)

30 
£m_öô
 (
£m_t
 *
£m
, 
psh¨ed
, 
vÆue
);

31 
£m_de°roy
 (
£m_t
 *
£m
);

32 
£m_t
 *
£m_›í
 (c⁄° *
«me
, 
oÊag
, ...);

33 
£m_˛o£
 (
£m_t
 *
£m
);

34 
£m_u∆ök
 (c⁄° *
«me
);

35 
£m_waô
 (
£m_t
 *
£m
);

36 
£m_åywaô
 (
£m_t
 *
£m
);

37 
£m_timedwaô
 (
£m_t
 *
£m
, c⁄° 
time•ec
 *
ab°ime
);

38 
£m_po°
 (
£m_t
 *
£m
);

39 
£m_gëvÆue
 (
£m_t
 *
£m
, *
svÆ
);

41 #ifde‡
__˝lu•lus


	@/usr/include/signal.h

1 #i‚de‡
_SIGNAL_H_


2 
	#_SIGNAL_H_


	)

4 
	~"_™si.h
"

5 
	~<sys/sig«l.h
>

7 
_BEGIN_STD_C


9 
	tsig_©omic_t
;

10 #i‚de‡
_POSIX_SOURCE


11 
_sig_func_±r
 
	tsig_t
;

12 
_sig_func_±r
 
	tsigh™dÀr_t
;

15 
	#SIG_DFL
 ((
_sig_func_±r
)0Ë

	)

16 
	#SIG_IGN
 ((
_sig_func_±r
)1Ë

	)

17 
	#SIG_ERR
 ((
_sig_func_±r
)-1Ë

	)

19 
	g_ªít
;

21 
_sig_func_±r
 
_EXFUN
(
_sig«l_r
, (
_ªít
 *, , _sig_func_ptr));

22 
_EXFUN
(
_øi£_r
, (
_ªít
 *, ));

24 #i‚de‡
_REENT_ONLY


25 
_sig_func_±r
 
_EXFUN
(
sig«l
, (, _sig_func_ptr));

26 
_EXFUN
(
øi£
, ());

27 
_EXFUN
(
psig«l
, (, const *));

30 
	g_END_STD_C


	@/usr/include/stdio.h

26 #i‚de‡
_STDIO_H_


27 
	#_STDIO_H_


	)

29 
	~"_™si.h
"

31 
	#_FSTDIO


	)

33 
	#__√ed_size_t


	)

34 
	#__√ed_NULL


	)

35 
	~<°ddef.h
>

37 
	#__√ed___va_li°


	)

38 
	~<°d¨g.h
>

46 
	~<sys/ªít.h
>

47 
	~<sys/ty≥s.h
>

49 
_BEGIN_STD_C


51 
__FILE
 
	tFILE
;

53 #ifde‡
__CYGWIN__


54 
_Âos64_t
 
	tÂos_t
;

56 
_Âos_t
 
	tÂos_t
;

57 #ifde‡
__LARGE64_FILES


58 
_Âos64_t
 
	tÂos64_t
;

62 
	~<sys/°dio.h
>

64 
	#__SLBF
 0x0001

	)

65 
	#__SNBF
 0x0002

	)

66 
	#__SRD
 0x0004

	)

67 
	#__SWR
 0x0008

	)

69 
	#__SRW
 0x0010

	)

70 
	#__SEOF
 0x0020

	)

71 
	#__SERR
 0x0040

	)

72 
	#__SMBF
 0x0080

	)

73 
	#__SAPP
 0x0100

	)

74 
	#__SSTR
 0x0200

	)

75 
	#__SOPT
 0x0400

	)

76 
	#__SNPT
 0x0800

	)

77 
	#__SOFF
 0x1000

	)

78 
	#__SORD
 0x2000

	)

79 #i‡
deföed
(
__CYGWIN__
)

80 
	#__SCLE
 0x4000

	)

82 
	#__SL64
 0x8000

	)

85 
	#__SWID
 0x2000

	)

96 
	#_IOFBF
 0

	)

97 
	#_IOLBF
 1

	)

98 
	#_IONBF
 2

	)

100 
	#EOF
 (-1)

	)

102 #ifde‡
__BUFSIZ__


103 
	#BUFSIZ
 
__BUFSIZ__


	)

105 
	#BUFSIZ
 1024

	)

108 #ifde‡
__FOPEN_MAX__


109 
	#FOPEN_MAX
 
__FOPEN_MAX__


	)

111 
	#FOPEN_MAX
 20

	)

114 #ifde‡
__FILENAME_MAX__


115 
	#FILENAME_MAX
 
__FILENAME_MAX__


	)

117 
	#FILENAME_MAX
 1024

	)

120 #ifde‡
__L_tm≤am__


121 
	#L_tm≤am
 
__L_tm≤am__


	)

123 
	#L_tm≤am
 
FILENAME_MAX


	)

126 #i‚de‡
__STRICT_ANSI__


127 
	#P_tmpdú
 "/tmp"

	)

130 #i‚de‡
SEEK_SET


131 
	#SEEK_SET
 0

	)

133 #i‚de‡
SEEK_CUR


134 
	#SEEK_CUR
 1

	)

136 #i‚de‡
SEEK_END


137 
	#SEEK_END
 2

	)

140 
	#TMP_MAX
 26

	)

142 
	#°dö
 (
_REENT
->
_°dö
)

	)

143 
	#°dout
 (
_REENT
->
_°dout
)

	)

144 
	#°dîr
 (
_REENT
->
_°dîr
)

	)

146 
	#_°dö_r
(
x
Ë((x)->
_°dö
)

	)

147 
	#_°dout_r
(
x
Ë((x)->
_°dout
)

	)

148 
	#_°dîr_r
(
x
Ë((x)->
_°dîr
)

	)

154 #i‚de‡
__VALIST


155 #ifde‡
__GNUC__


156 
	#__VALIST
 
__gnuc_va_li°


	)

158 
	#__VALIST
 *

	)

162 
FILE
 * 
_EXFUN
(
tmpfûe
, ());

163 * 
_EXFUN
(
tm≤am
, (*));

164 
_EXFUN
(
f˛o£
, (
FILE
 *));

165 
_EXFUN
(
fÊush
, (
FILE
 *));

166 
FILE
 * 
_EXFUN
(
‰e›í
, (const *, const *, FILE *));

167 
_EXFUN
(
£tbuf
, (
FILE
 *, *));

168 
_EXFUN
(
£tvbuf
, (
FILE
 *, *, , 
size_t
));

169 
_EXFUN
(
Ârötf
, (
FILE
 *, const *, ...)

170 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

171 
_EXFUN
(
fsˇnf
, (
FILE
 *, const *, ...)

172 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 3))));

173 
_EXFUN
(
¥ötf
, (const *, ...)

174 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 1, 2))));

175 
_EXFUN
(
sˇnf
, (const *, ...)

176 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 1, 2))));

177 
_EXFUN
(
ssˇnf
, (const *, const *, ...)

178 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 3))));

179 
_EXFUN
(
vÂrötf
, (
FILE
 *, c⁄° *, 
__VALIST
)

180 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

181 
_EXFUN
(
v¥ötf
, (c⁄° *, 
__VALIST
)

182 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 1, 0))));

183 
_EXFUN
(
v•rötf
, (*, c⁄° *, 
__VALIST
)

184 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

185 
_EXFUN
(
fgëc
, (
FILE
 *));

186 * 
_EXFUN
(
fgës
, (*, , 
FILE
 *));

187 
_EXFUN
(
Âutc
, (, 
FILE
 *));

188 
_EXFUN
(
Âuts
, (c⁄° *, 
FILE
 *));

189 
_EXFUN
(
gëc
, (
FILE
 *));

190 
_EXFUN
(
gëch¨
, ());

191 * 
_EXFUN
(
gës
, (*));

192 
_EXFUN
(
putc
, (, 
FILE
 *));

193 
_EXFUN
(
putch¨
, ());

194 
_EXFUN
(
puts
, (const *));

195 
_EXFUN
(
ungëc
, (, 
FILE
 *));

196 
size_t
 
_EXFUN
(
‰ód
, (
_PTR
, size_à
_size
, size_à
_n
, 
FILE
 *));

197 
size_t
 
_EXFUN
(
fwrôe
, (c⁄° 
_PTR
 , size_à
_size
, size_à
_n
, 
FILE
 *));

198 #ifde‡
_COMPILING_NEWLIB


199 
_EXFUN
(
fgëpos
, (
FILE
 *, 
_Âos_t
 *));

201 
_EXFUN
(
fgëpos
, (
FILE
 *, 
Âos_t
 *));

203 
_EXFUN
(
f£ek
, (
FILE
 *, , ));

204 #ifde‡
_COMPILING_NEWLIB


205 
_EXFUN
(
f£ços
, (
FILE
 *, c⁄° 
_Âos_t
 *));

207 
_EXFUN
(
f£ços
, (
FILE
 *, c⁄° 
Âos_t
 *));

209 
_EXFUN
(
·ñl
, ( 
FILE
 *));

210 
_EXFUN
(
ªwöd
, (
FILE
 *));

211 
_EXFUN
(
˛óªº
, (
FILE
 *));

212 
_EXFUN
(
„of
, (
FILE
 *));

213 
_EXFUN
(
„º‹
, (
FILE
 *));

214 
_EXFUN
(
≥º‹
, (const *));

215 #i‚de‡
_REENT_ONLY


216 
FILE
 * 
_EXFUN
(
f›í
, (c⁄° *
_«me
, c⁄° *
_ty≥
));

217 
_EXFUN
(
•rötf
, (*, const *, ...)

218 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

219 
_EXFUN
(
ªmove
, (const *));

220 
_EXFUN
(
ª«me
, (const *, const *));

221 #ifde‡
_COMPILING_NEWLIB


222 
_EXFUN
(
_ª«me
, (const *, const *));

225 #i‡!
deföed
(
__STRICT_ANSI__
Ë|| deföed(
__USE_XOPEN2K
)

226 #ifde‡
_COMPILING_NEWLIB


227 
_EXFUN
(
f£eko
, (
FILE
 *, 
_off_t
, ));

228 
_off_t
 
_EXFUN
(
·ñlo
, ( 
FILE
 *));

230 
_EXFUN
(
f£eko
, (
FILE
 *, 
off_t
, ));

231 
off_t
 
_EXFUN
(
·ñlo
, ( 
FILE
 *));

234 #i‡!
deföed
(
__STRICT_ANSI__
Ë|| (
__STDC_VERSION__
 >= 199901L)

235 #i‚de‡
_REENT_ONLY


236 
_EXFUN
(
asùrötf
, (**, const *, ...)

237 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

238 * 
_EXFUN
(
a¢ùrötf
, (*, 
size_t
 *, const *, ...)

239 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

240 * 
_EXFUN
(
a¢¥ötf
, (*, 
size_t
 *, const *, ...)

241 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

242 
_EXFUN
(
a•rötf
, (**, const *, ...)

243 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

244 #i‚de‡
dùrötf


245 
_EXFUN
(
dùrötf
, (, const *, ...)

246 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

248 
_EXFUN
(
f˛o£Æl
, (
_VOID
));

249 
_EXFUN
(
fùrötf
, (
FILE
 *, const *, ...)

250 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

251 
_EXFUN
(
fisˇnf
, (
FILE
 *, const *, ...)

252 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 3))));

253 
_EXFUN
(
ùrötf
, (const *, ...)

254 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 1, 2))));

255 
_EXFUN
(
isˇnf
, (const *, ...)

256 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 1, 2))));

257 
_EXFUN
(
sùrötf
, (*, const *, ...)

258 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

259 
_EXFUN
(
sisˇnf
, (const *, const *, ...)

260 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 3))));

261 
_EXFUN
(
¢¥ötf
, (*, 
size_t
, const *, ...)

262 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

263 
_EXFUN
(
¢ùrötf
, (*, 
size_t
, const *, ...)

264 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

265 * 
_EXFUN
(
ãm≤am
, (const *, const *));

266 
_EXFUN
(
vasùrötf
, (**, c⁄° *, 
__VALIST
)

267 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

268 * 
_EXFUN
(
va¢ùrötf
, (*, 
size_t
 *, c⁄° *, 
__VALIST
)

269 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

270 * 
_EXFUN
(
va¢¥ötf
, (*, 
size_t
 *, c⁄° *, 
__VALIST
)

271 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

272 
_EXFUN
(
va•rötf
, (**, c⁄° *, 
__VALIST
)

273 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

274 
_EXFUN
(
vdùrötf
, (, c⁄° *, 
__VALIST
)

275 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

276 
_EXFUN
(
vfùrötf
, (
FILE
 *, c⁄° *, 
__VALIST
)

277 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

278 
_EXFUN
(
vfisˇnf
, (
FILE
 *, c⁄° *, 
__VALIST
)

279 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 0))));

280 
_EXFUN
(
vfsˇnf
, (
FILE
 *, c⁄° *, 
__VALIST
)

281 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 0))));

282 
_EXFUN
(
vùrötf
, (c⁄° *, 
__VALIST
)

283 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 1, 0))));

284 
_EXFUN
(
visˇnf
, (c⁄° *, 
__VALIST
)

285 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 1, 0))));

286 
_EXFUN
(
vsˇnf
, (c⁄° *, 
__VALIST
)

287 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 1, 0))));

288 
_EXFUN
(
vsùrötf
, (*, c⁄° *, 
__VALIST
)

289 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

290 
_EXFUN
(
vsisˇnf
, (c⁄° *, c⁄° *, 
__VALIST
)

291 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 0))));

292 
_EXFUN
(
v¢ùrötf
, (*, 
size_t
, c⁄° *, 
__VALIST
)

293 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

294 
_EXFUN
(
v¢¥ötf
, (*, 
size_t
, c⁄° *, 
__VALIST
)

295 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

296 
_EXFUN
(
vssˇnf
, (c⁄° *, c⁄° *, 
__VALIST
)

297 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 0))));

305 #i‚de‡
__STRICT_ANSI__


306 #i‚de‡
_REENT_ONLY


307 
FILE
 * 
_EXFUN
(
fd›í
, (, const *));

309 
_EXFUN
(
fûío
, (
FILE
 *));

310 
_EXFUN
(
gëw
, (
FILE
 *));

311 
_EXFUN
(
p˛o£
, (
FILE
 *));

312 
FILE
 * 
_EXFUN
(
p›í
, (const *, const *));

313 
_EXFUN
(
putw
, (, 
FILE
 *));

314 
_EXFUN
(
£tbuf„r
, (
FILE
 *, *, ));

315 
_EXFUN
(
£éöebuf
, (
FILE
 *));

316 
_EXFUN
(
gëc_u∆ocked
, (
FILE
 *));

317 
_EXFUN
(
gëch¨_u∆ocked
, ());

318 
_EXFUN
(
Êockfûe
, (
FILE
 *));

319 
_EXFUN
(
·rylockfûe
, (
FILE
 *));

320 
_EXFUN
(
fu∆ockfûe
, (
FILE
 *));

321 
_EXFUN
(
putc_u∆ocked
, (, 
FILE
 *));

322 
_EXFUN
(
putch¨_u∆ocked
, ());

329 #i‚de‡
__STRICT_ANSI__


330 #i‚de‡
_REENT_ONLY


331 #i‚de‡
d¥ötf


332 
_EXFUN
(
d¥ötf
, (, const *, ...)

333 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

335 
FILE
 * 
_EXFUN
(
fmem›í
, (*, 
size_t
, const *));

338 
FILE
 * 
_EXFUN
(
›í_mem°ªam
, (**, 
size_t
 *));

339 #i‡
deföed
 (
__CYGWIN__
)

340 
_EXFUN
(
ª«mót
, (, const *, , const *));

342 
_EXFUN
(
vd¥ötf
, (, c⁄° *, 
__VALIST
)

343 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

351 
_EXFUN
(
_asùrötf_r
, (
_ªít
 *, **, const *, ...)

352 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

353 * 
_EXFUN
(
_a¢ùrötf_r
, (
_ªít
 *, *, 
size_t
 *, const *, ...)

354 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 5))));

355 * 
_EXFUN
(
_a¢¥ötf_r
, (
_ªít
 *, *, 
size_t
 *, const *, ...)

356 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 5))));

357 
_EXFUN
(
_a•rötf_r
, (
_ªít
 *, **, const *, ...)

358 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

359 
_EXFUN
(
_dùrötf_r
, (
_ªít
 *, , const *, ...)

360 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

361 
_EXFUN
(
_d¥ötf_r
, (
_ªít
 *, , const *, ...)

362 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

363 
_EXFUN
(
_f˛o£_r
, (
_ªít
 *, 
FILE
 *));

364 
_EXFUN
(
_f˛o£Æl_r
, (
_ªít
 *));

365 
FILE
 * 
_EXFUN
(
_fd›í_r
, (
_ªít
 *, , const *));

366 
_EXFUN
(
_fÊush_r
, (
_ªít
 *, 
FILE
 *));

367 
_EXFUN
(
_fgëc_r
, (
_ªít
 *, 
FILE
 *));

368 * 
_EXFUN
(
_fgës_r
, (
_ªít
 *, *, , 
FILE
 *));

369 #ifde‡
_COMPILING_NEWLIB


370 
_EXFUN
(
_fgëpos_r
, (
_ªít
 *, 
FILE
 *, 
_Âos_t
 *));

371 
_EXFUN
(
_f£ços_r
, (
_ªít
 *, 
FILE
 *, c⁄° 
_Âos_t
 *));

373 
_EXFUN
(
_fgëpos_r
, (
_ªít
 *, 
FILE
 *, 
Âos_t
 *));

374 
_EXFUN
(
_f£ços_r
, (
_ªít
 *, 
FILE
 *, c⁄° 
Âos_t
 *));

376 
_EXFUN
(
_fùrötf_r
, (
_ªít
 *, 
FILE
 *, const *, ...)

377 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

378 
_EXFUN
(
_fisˇnf_r
, (
_ªít
 *, 
FILE
 *, const *, ...)

379 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 4))));

380 
FILE
 * 
_EXFUN
(
_fmem›í_r
, (
_ªít
 *, *, 
size_t
, const *));

381 
FILE
 * 
_EXFUN
(
_f›í_r
, (
_ªít
 *, const *, const *));

382 
FILE
 * 
_EXFUN
(
_‰e›í_r
, (
_ªít
 *, const *, const *, FILE *));

383 
_EXFUN
(
_Ârötf_r
, (
_ªít
 *, 
FILE
 *, const *, ...)

384 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

385 
_EXFUN
(
_Âurge_r
, (
_ªít
 *, 
FILE
 *));

386 
_EXFUN
(
_Âutc_r
, (
_ªít
 *, , 
FILE
 *));

387 
_EXFUN
(
_Âuts_r
, (
_ªít
 *, c⁄° *, 
FILE
 *));

388 
size_t
 
_EXFUN
(
_‰ód_r
, (
_ªít
 *, 
_PTR
, size_à
_size
, size_à
_n
, 
FILE
 *));

389 
_EXFUN
(
_fsˇnf_r
, (
_ªít
 *, 
FILE
 *, const *, ...)

390 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 4))));

391 
_EXFUN
(
_f£ek_r
, (
_ªít
 *, 
FILE
 *, , ));

392 
_EXFUN
(
_f£eko_r
,(
_ªít
 *, 
FILE
 *, 
_off_t
, ));

393 
_EXFUN
(
_·ñl_r
, (
_ªít
 *, 
FILE
 *));

394 
_off_t
 
_EXFUN
(
_·ñlo_r
,(
_ªít
 *, 
FILE
 *));

395 
_EXFUN
(
_ªwöd_r
, (
_ªít
 *, 
FILE
 *));

396 
size_t
 
_EXFUN
(
_fwrôe_r
, (
_ªít
 *, c⁄° 
_PTR
 , size_à
_size
, size_à
_n
, 
FILE
 *));

397 
_EXFUN
(
_gëc_r
, (
_ªít
 *, 
FILE
 *));

398 
_EXFUN
(
_gëc_u∆ocked_r
, (
_ªít
 *, 
FILE
 *));

399 
_EXFUN
(
_gëch¨_r
, (
_ªít
 *));

400 
_EXFUN
(
_gëch¨_u∆ocked_r
, (
_ªít
 *));

401 * 
_EXFUN
(
_gës_r
, (
_ªít
 *, *));

402 
_EXFUN
(
_ùrötf_r
, (
_ªít
 *, const *, ...)

403 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

404 
_EXFUN
(
_isˇnf_r
, (
_ªít
 *, const *, ...)

405 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 3))));

406 
FILE
 * 
_EXFUN
(
_›í_mem°ªam_r
, (
_ªít
 *, **, 
size_t
 *));

407 
_EXFUN
(
_≥º‹_r
, (
_ªít
 *, const *));

408 
_EXFUN
(
_¥ötf_r
, (
_ªít
 *, const *, ...)

409 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 3))));

410 
_EXFUN
(
_putc_r
, (
_ªít
 *, , 
FILE
 *));

411 
_EXFUN
(
_putc_u∆ocked_r
, (
_ªít
 *, , 
FILE
 *));

412 
_EXFUN
(
_putch¨_u∆ocked_r
, (
_ªít
 *, ));

413 
_EXFUN
(
_putch¨_r
, (
_ªít
 *, ));

414 
_EXFUN
(
_puts_r
, (
_ªít
 *, const *));

415 
_EXFUN
(
_ªmove_r
, (
_ªít
 *, const *));

416 
_EXFUN
(
_ª«me_r
, (
_ªít
 *,

417 c⁄° *
_ﬁd
, c⁄° *
_√w
));

418 
_EXFUN
(
_sˇnf_r
, (
_ªít
 *, const *, ...)

419 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 3))));

420 
_EXFUN
(
_sùrötf_r
, (
_ªít
 *, *, const *, ...)

421 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

422 
_EXFUN
(
_sisˇnf_r
, (
_ªít
 *, const *, const *, ...)

423 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 4))));

424 
_EXFUN
(
_¢ùrötf_r
, (
_ªít
 *, *, 
size_t
, const *, ...)

425 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 5))));

426 
_EXFUN
(
_¢¥ötf_r
, (
_ªít
 *, *, 
size_t
, const *, ...)

427 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 5))));

428 
_EXFUN
(
_•rötf_r
, (
_ªít
 *, *, const *, ...)

429 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4))));

430 
_EXFUN
(
_ssˇnf_r
, (
_ªít
 *, const *, const *, ...)

431 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 4))));

432 * 
_EXFUN
(
_ãm≤am_r
, (
_ªít
 *, const *, const *));

433 
FILE
 * 
_EXFUN
(
_tmpfûe_r
, (
_ªít
 *));

434 * 
_EXFUN
(
_tm≤am_r
, (
_ªít
 *, *));

435 
_EXFUN
(
_ungëc_r
, (
_ªít
 *, , 
FILE
 *));

436 
_EXFUN
(
_vasùrötf_r
, (
_ªít
 *, **, c⁄° *, 
__VALIST
)

437 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

438 * 
_EXFUN
(
_va¢ùrötf_r
, (
_ªít
*, *, 
size_t
 *, c⁄° *, 
__VALIST
)

439 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 0))));

440 * 
_EXFUN
(
_va¢¥ötf_r
, (
_ªít
*, *, 
size_t
 *, c⁄° *, 
__VALIST
)

441 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 0))));

442 
_EXFUN
(
_va•rötf_r
, (
_ªít
 *, **, c⁄° *, 
__VALIST
)

443 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

444 
_EXFUN
(
_vdùrötf_r
, (
_ªít
 *, , c⁄° *, 
__VALIST
)

445 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

446 
_EXFUN
(
_vd¥ötf_r
, (
_ªít
 *, , c⁄° *, 
__VALIST
)

447 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

448 
_EXFUN
(
_vfùrötf_r
, (
_ªít
 *, 
FILE
 *, c⁄° *, 
__VALIST
)

449 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

450 
_EXFUN
(
_vfisˇnf_r
, (
_ªít
 *, 
FILE
 *, c⁄° *, 
__VALIST
)

451 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 0))));

452 
_EXFUN
(
_vÂrötf_r
, (
_ªít
 *, 
FILE
 *, c⁄° *, 
__VALIST
)

453 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

454 
_EXFUN
(
_vfsˇnf_r
, (
_ªít
 *, 
FILE
 *, c⁄° *, 
__VALIST
)

455 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 0))));

456 
_EXFUN
(
_vùrötf_r
, (
_ªít
 *, c⁄° *, 
__VALIST
)

457 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

458 
_EXFUN
(
_visˇnf_r
, (
_ªít
 *, c⁄° *, 
__VALIST
)

459 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 0))));

460 
_EXFUN
(
_v¥ötf_r
, (
_ªít
 *, c⁄° *, 
__VALIST
)

461 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 2, 0))));

462 
_EXFUN
(
_vsˇnf_r
, (
_ªít
 *, c⁄° *, 
__VALIST
)

463 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 2, 0))));

464 
_EXFUN
(
_vsùrötf_r
, (
_ªít
 *, *, c⁄° *, 
__VALIST
)

465 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

466 
_EXFUN
(
_vsisˇnf_r
, (
_ªít
 *, c⁄° *, c⁄° *, 
__VALIST
)

467 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 0))));

468 
_EXFUN
(
_v¢ùrötf_r
, (
_ªít
 *, *, 
size_t
, c⁄° *, 
__VALIST
)

469 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 0))));

470 
_EXFUN
(
_v¢¥ötf_r
, (
_ªít
 *, *, 
size_t
, c⁄° *, 
__VALIST
)

471 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 4, 0))));

472 
_EXFUN
(
_v•rötf_r
, (
_ªít
 *, *, c⁄° *, 
__VALIST
)

473 
_ATTRIBUTE
 ((
__f‹m©__
 (
__¥ötf__
, 3, 0))));

474 
_EXFUN
(
_vssˇnf_r
, (
_ªít
 *, c⁄° *, c⁄° *, 
__VALIST
)

475 
_ATTRIBUTE
 ((
__f‹m©__
 (
__sˇnf__
, 3, 0))));

479 
_EXFUN
(
Âurge
, (
FILE
 *));

480 
ssize_t
 
_EXFUN
(
__gëdñim
, (**, 
size_t
 *, , 
FILE
 *));

481 
ssize_t
 
_EXFUN
(
__gëlöe
, (**, 
size_t
 *, 
FILE
 *));

483 #ifde‡
__LARGE64_FILES


484 #i‡!
deföed
(
__CYGWIN__
Ë|| deföed(
_COMPILING_NEWLIB
)

485 
FILE
 * 
_EXFUN
(
fd›í64
, (, const *));

486 
FILE
 * 
_EXFUN
(
f›í64
, (const *, const *));

487 
FILE
 * 
_EXFUN
(
‰e›í64
, (
_CONST
 *, _CONST *, FILE *));

488 
_off64_t
 
_EXFUN
(
·ñlo64
, (
FILE
 *));

489 
_off64_t
 
_EXFUN
(
f£eko64
, (
FILE
 *, _off64_t, ));

490 
_EXFUN
(
fgëpos64
, (
FILE
 *, 
_Âos64_t
 *));

491 
_EXFUN
(
f£ços64
, (
FILE
 *, c⁄° 
_Âos64_t
 *));

492 
FILE
 * 
_EXFUN
(
tmpfûe64
, ());

494 
FILE
 * 
_EXFUN
(
_fd›í64_r
, (
_ªít
 *, , const *));

495 
FILE
 * 
_EXFUN
(
_f›í64_r
, (
_ªít
 *,const *, const *));

496 
FILE
 * 
_EXFUN
(
_‰e›í64_r
, (
_ªít
 *, 
_CONST
 *, _CONST *, FILE *));

497 
_off64_t
 
_EXFUN
(
_·ñlo64_r
, (
_ªít
 *, 
FILE
 *));

498 
_off64_t
 
_EXFUN
(
_f£eko64_r
, (
_ªít
 *, 
FILE
 *, _off64_t, ));

499 
_EXFUN
(
_fgëpos64_r
, (
_ªít
 *, 
FILE
 *, 
_Âos64_t
 *));

500 
_EXFUN
(
_f£ços64_r
, (
_ªít
 *, 
FILE
 *, c⁄° 
_Âos64_t
 *));

501 
FILE
 * 
_EXFUN
(
_tmpfûe64_r
, (
_ªít
 *));

509 
_EXFUN
(
__§gë_r
, (
_ªít
 *, 
FILE
 *));

510 
_EXFUN
(
__swbuf_r
, (
_ªít
 *, , 
FILE
 *));

516 #i‚de‡
__STRICT_ANSI__


517 #ifde‡
__LARGE64_FILES


518 
FILE
 *
_EXFUN
(
fun›í
,(c⁄° 
_PTR
 
__cookõ
,

519 (*
__ªad‚
)(
_PTR
 
__c
, *
__buf
, 
__n
),

520 (*
__wrôe‚
)(
_PTR
 
__c
, c⁄° *
__buf
, 
__n
),

521 
	$_Âos64_t
 (*
__£ek‚
)(
_PTR
 
__c
, 
_Âos64_t
 
__off
, 
__whí˚
),

522 (*
__˛o£‚
)(
_PTR
 
__c
)));

523 
FILE
 *
	`_EXFUN
(
_fun›í_r
,(
_ªít
 *, c⁄° 
_PTR
 
__cookõ
,

524 (*
__ªad‚
)(
_PTR
 
__c
, *
__buf
, 
__n
),

525 (*
__wrôe‚
)(
_PTR
 
__c
, c⁄° *
__buf
, 
__n
),

526 
	$_Âos64_t
 (*
__£ek‚
)(
_PTR
 
__c
, 
_Âos64_t
 
__off
, 
__whí˚
),

527 (*
__˛o£‚
)(
_PTR
 
__c
)));

529 
FILE
 *
	`_EXFUN
(
fun›í
,(c⁄° 
_PTR
 
__cookõ
,

530 (*
__ªad‚
)(
_PTR
 
__cookõ
, *
__buf
, 
__n
),

531 (*
__wrôe‚
)(
_PTR
 
__cookõ
, c⁄° *
__buf
, 
__n
),

532 
	$Âos_t
 (*
__£ek‚
)(
_PTR
 
__cookõ
, 
Âos_t
 
__off
, 
__whí˚
),

533 (*
__˛o£‚
)(
_PTR
 
__cookõ
)));

534 
FILE
 *
	`_EXFUN
(
_fun›í_r
,(
_ªít
 *, c⁄° 
_PTR
 
__cookõ
,

535 (*
__ªad‚
)(
_PTR
 
__cookõ
, *
__buf
, 
__n
),

536 (*
__wrôe‚
)(
_PTR
 
__cookõ
, c⁄° *
__buf
, 
__n
),

537 
	$Âos_t
 (*
__£ek‚
)(
_PTR
 
__cookõ
, 
Âos_t
 
__off
, 
__whí˚
),

538 (*
__˛o£‚
)(
_PTR
 
__cookõ
)));

541 
	#‰›í
(
__cookõ
, 
__‚
Ë
	`fun›í
(__cookie, __fn, ((*)())0, \

542 (
	`Âos_t
 (*)())0, ((*)())0)

	)

543 
	#fw›í
(
__cookõ
, 
__‚
Ë
	`fun›í
(__cookie, ((*)())0, __fn, \

544 (
	`Âos_t
 (*)())0, ((*)())0)

	)

546 
ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
(*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__n
);

547 
ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
(*
	t__cookõ
, c⁄° *
	t__buf
,

548 
	tsize_t
 
	t__n
);

549 #ifde‡
__LARGE64_FILES


550 
	tcookõ_£ek_fun˘i⁄_t
(*
	t__cookõ
, 
	t_off64_t
 *
	t__off
,

551 
	t__whí˚
);

553 
	tcookõ_£ek_fun˘i⁄_t
(*
	t__cookõ
, 
	toff_t
 *
	t__off
, 
	t__whí˚
);

555 
	tcookõ_˛o£_fun˘i⁄_t
(*
	t__cookõ
);

560 
cookõ_ªad_fun˘i⁄_t
 *
ªad
;

561 
cookõ_wrôe_fun˘i⁄_t
 *
wrôe
;

562 
cookõ_£ek_fun˘i⁄_t
 *
£ek
;

563 
cookõ_˛o£_fun˘i⁄_t
 *
˛o£
;

564 } 
	tcookõ_io_fun˘i⁄s_t
;

565 
FILE
 *
	`_EXFUN
(
f›ícookõ
,(*
__cookõ
,

566 c⁄° *
__mode
, 
cookõ_io_fun˘i⁄s_t
 
__fun˘i⁄s
));

567 
FILE
 *
	`_EXFUN
(
_f›ícookõ_r
,(
_ªít
 *, *
__cookõ
,

568 c⁄° *
__mode
, 
cookõ_io_fun˘i⁄s_t
 
__fun˘i⁄s
));

571 #i‚de‡
__CUSTOM_FILE_IO__


576 
	#__sgëc_øw_r
(
__±r
, 
__f
Ë(--(__f)->
_r
 < 0 ? 
	`__§gë_r
(__±r, __fË: ()(*(__f)->
_p
++))

	)

578 #ifde‡
__SCLE


589 
_ELIDABLE_INLINE
 
	`__sgëc_r
(
_ªít
 *
__±r
, 
FILE
 *
__p
);

591 
_ELIDABLE_INLINE
 
	$__sgëc_r
(
_ªít
 *
__±r
, 
FILE
 *
__p
)

593 
__c
 = 
	`__sgëc_øw_r
(
__±r
, 
__p
);

594 i‡((
__p
->
_Êags
 & 
__SCLE
Ë&& (
__c
 == '\r'))

596 
__c2
 = 
	`__sgëc_øw_r
(
__±r
, 
__p
);

597 i‡(
__c2
 == '\n')

598 
__c
 = 
__c2
;

600 
	`ungëc
(
__c2
, 
__p
);

602  
__c
;

603 
	}
}

605 
	#__sgëc_r
(
__±r
, 
__p
Ë
	`__sgëc_øw_r
(__±r, __p)

	)

608 #ifde‡
_√vî


611 
_ELIDABLE_INLINE
 
	$__•utc_r
(
_ªít
 *
_±r
, 
_c
, 
FILE
 *
_p
) {

612 i‡(--
_p
->
_w
 >0 || (_p->_w >_p->
_lbfsize
 && ()
_c
 != '\n'))

613  (*
_p
->_p++ = 
_c
);

615  (
	`__swbuf_r
(
_±r
, 
_c
, 
_p
));

616 
	}
}

621 
	#__•utc_øw_r
(
__±r
, 
__c
, 
__p
) \

622 (--(
__p
)->
_w
 < 0 ? \

623 (
__p
)->
_w
 >(__p)->
_lbfsize
 ? \

624 (*(
__p
)->
_p
 = (
__c
)), *(__p)->_p != '\n' ? \

625 ()*(
__p
)->
_p
++ : \

626 
	`__swbuf_r
(
__±r
, '\n', 
__p
) : \

627 
	`__swbuf_r
(
__±r
, ()(
__c
), 
__p
) : \

628 (*(
__p
)->
_p
 = (
__c
), ()*(__p)->_p++))

	)

629 #ifde‡
__SCLE


630 
	#__•utc_r
(
__±r
, 
__c
, 
__p
) \

631 ((((
__p
)->
_Êags
 & 
__SCLE
Ë&& ((
__c
) == '\n')) \

632 ? 
	`__•utc_øw_r
(
__±r
, '\r', (
__p
)) : 0 , \

633 
	`__•utc_øw_r
((
__±r
), (
__c
), (
__p
)))

	)

635 
	#__•utc_r
(
__±r
, 
__c
, 
__p
Ë
	`__•utc_øw_r
(__±r, __c, __p)

	)

639 
	#__s„of
(
p
Ë((’)->
_Êags
 & 
__SEOF
Ë!0)

	)

640 
	#__s„º‹
(
p
Ë((’)->
_Êags
 & 
__SERR
Ë!0)

	)

641 
	#__s˛óªº
(
p
Ë(()(’)->
_Êags
 &~(
__SERR
|
__SEOF
)))

	)

642 
	#__sfûío
(
p
Ë(’)->
_fûe
)

	)

644 #i‚de‡
_REENT_SMALL


645 
	#„of
(
p
Ë
	`__s„of
’)

	)

646 
	#„º‹
(
p
Ë
	`__s„º‹
’)

	)

647 
	#˛óªº
(
p
Ë
	`__s˛óªº
’)

	)

651 
	#fûío
(
p
Ë
	`__sfûío
’)

	)

654 #i‚de‡
__CYGWIN__


655 #i‚de‡
löt


656 
	#gëc
(
Â
Ë
	`__sgëc_r
(
_REENT
, fp)

	)

657 
	#putc
(
x
, 
Â
Ë
	`__•utc_r
(
_REENT
, x, fp)

	)

661 #i‚de‡
__STRICT_ANSI__


663 
	#Á°_putc
(
x
,
p
Ë(--’)->
_w
 < 0 ? \

664 
	`__swbuf_r
(
_REENT
, ()(
x
), 
p
Ë=
EOF
 : (*’)->
_p
 = (x), (p)->_p++, 0))

	)

666 
	#L_cu£rid
 9

	)

667 #ifde‡
__CYGWIN__


668 
	#L_˘îmid
 16

	)

674 
	#gëch¨
(Ë
	`gëc
(
°dö
)

	)

675 
	#putch¨
(
x
Ë
	`putc
(x, 
°dout
)

	)

677 
	g_END_STD_C


	@/usr/include/stdlib.h

7 #i‚de‡
_STDLIB_H_


8 
	#_STDLIB_H_


	)

10 
	~<machöe/õìÂ.h
>

11 
	~"_™si.h
"

13 
	#__√ed_size_t


	)

14 
	#__√ed_wch¨_t


	)

15 
	#__√ed_NULL


	)

16 
	~<°ddef.h
>

18 
	~<sys/ªít.h
>

19 
	~<machöe/°dlib.h
>

20 #i‚de‡
__STRICT_ANSI__


21 
	~<Æloˇ.h
>

24 #ifde‡
__CYGWIN__


25 
	~<cygwö/°dlib.h
>

28 
_BEGIN_STD_C


32 
	mquŸ
;

33 
	mªm
;

34 } 
	tdiv_t
;

38 
	mquŸ
;

39 
	mªm
;

40 } 
	tldiv_t
;

42 #i‚de‡
__STRICT_ANSI__


45 
	mquŸ
;

46 
	mªm
;

47 } 
	tŒdiv_t
;

50 
	#EXIT_FAILURE
 1

	)

51 
	#EXIT_SUCCESS
 0

	)

53 
	#RAND_MAX
 
__RAND_MAX


	)

55 
_EXFUN
(
__loˇÀ_mb_cur_max
,(
_VOID
));

57 
	#MB_CUR_MAX
 
	`__loˇÀ_mb_cur_max
()

	)

59 
_VOID
 
_EXFUN
(
ab‹t
,(_VOIDË
_ATTRIBUTE
 ((
n‹ëu∫
)));

60 
_EXFUN
(
abs
,());

61 
_EXFUN
(
©exô
,(
	$_VOID
 (*
__func
)(
_VOID
)));

62 
	`_EXFUN
(
©of
,(c⁄° *
__≈å
));

63 #i‚de‡
__STRICT_ANSI__


64 
	`_EXFUN
(
©off
,(c⁄° *
__≈å
));

66 
	`_EXFUN
(
©oi
,(c⁄° *
__≈å
));

67 
	`_EXFUN
(
_©oi_r
,(
_ªít
 *, c⁄° *
__≈å
));

68 
	`_EXFUN
(
©ﬁ
,(c⁄° *
__≈å
));

69 
	`_EXFUN
(
_©ﬁ_r
,(
_ªít
 *, c⁄° *
__≈å
));

70 
_PTR
 
	`_EXFUN
(
b£¨ch
,(c⁄° _PTR 
__key
,

71 c⁄° 
_PTR
 
__ba£
,

72 
size_t
 
__nmemb
,

73 
size_t
 
__size
,

74 
	`_EXFNPTR
(
_com∑r
,(c⁄° 
_PTR
, const _PTR))));

75 
_PTR
 
	`_EXFUN_NOTHROW
(
ˇŒoc
,(
size_t
 
__nmemb
, size_à
__size
));

76 
div_t
 
	`_EXFUN
(
div
,(
__numî
, 
__díom
));

77 
_VOID
 
	`_EXFUN
(
exô
,(
__°©us
Ë
	`_ATTRIBUTE
 ((
n‹ëu∫
)));

78 
_VOID
 
	`_EXFUN_NOTHROW
(
‰ì
,(
_PTR
));

79 * 
	`_EXFUN
(
gëív
,(c⁄° *
__°rög
));

80 * 
	`_EXFUN
(
_gëív_r
,(
_ªít
 *, c⁄° *
__°rög
));

81 * 
	`_EXFUN
(
_födív
,(
_CONST
 *, *));

82 * 
	`_EXFUN
(
_födív_r
,(
_ªít
 *, 
_CONST
 *, *));

83 #i‚de‡
__STRICT_ANSI__


84 *
sub›èrg
;

85 
	`_EXFUN
(
gësub›t
,(**, * const *, **));

87 
	`_EXFUN
(
œbs
,());

88 
ldiv_t
 
	`_EXFUN
(
ldiv
,(
__numî
, 
__díom
));

89 
_PTR
 
	`_EXFUN_NOTHROW
(
mÆloc
,(
size_t
 
__size
));

90 
	`_EXFUN
(
mbÀn
,(c⁄° *, 
size_t
));

91 
	`_EXFUN
(
_mbÀn_r
,(
_ªít
 *, c⁄° *, 
size_t
, 
_mb°©e_t
 *));

92 
	`_EXFUN
(
mbtowc
,(
wch¨_t
 *, c⁄° *, 
size_t
));

93 
	`_EXFUN
(
_mbtowc_r
,(
_ªít
 *, 
wch¨_t
 *, c⁄° *, 
size_t
, 
_mb°©e_t
 *));

94 
	`_EXFUN
(
w˘omb
,(*, 
wch¨_t
));

95 
	`_EXFUN
(
_w˘omb_r
,(
_ªít
 *, *, 
wch¨_t
, 
_mb°©e_t
 *));

96 
size_t
 
	`_EXFUN
(
mb°owcs
,(
wch¨_t
 *, const *, size_t));

97 
size_t
 
	`_EXFUN
(
_mb°owcs_r
,(
_ªít
 *, 
wch¨_t
 *, c⁄° *, size_t, 
_mb°©e_t
 *));

98 
size_t
 
	`_EXFUN
(
wc°ombs
,(*, c⁄° 
wch¨_t
 *, size_t));

99 
size_t
 
	`_EXFUN
(
_wc°ombs_r
,(
_ªít
 *, *, c⁄° 
wch¨_t
 *, size_t, 
_mb°©e_t
 *));

100 #i‚de‡
__STRICT_ANSI__


101 #i‚de‡
_REENT_ONLY


102 * 
	`_EXFUN
(
mkdãmp
,(*));

103 
	`_EXFUN
(
mko°emp
,(*, ));

104 
	`_EXFUN
(
mko°emps
,(*, , ));

105 
	`_EXFUN
(
mk°emp
,(*));

106 
	`_EXFUN
(
mk°emps
,(*, ));

107 * 
	`_EXFUN
(
mkãmp
,(*Ë
	`_ATTRIBUTE
 ((
	`__w¨nög__
 ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));

109 * 
	`_EXFUN
(
_mkdãmp_r
, (
_ªít
 *, *));

110 
	`_EXFUN
(
_mko°emp_r
, (
_ªít
 *, *, ));

111 
	`_EXFUN
(
_mko°emps_r
, (
_ªít
 *, *, , ));

112 
	`_EXFUN
(
_mk°emp_r
, (
_ªít
 *, *));

113 
	`_EXFUN
(
_mk°emps_r
, (
_ªít
 *, *, ));

114 * 
	`_EXFUN
(
_mkãmp_r
, (
_ªít
 *, *Ë
	`_ATTRIBUTE
 ((
	`__w¨nög__
 ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));

116 
_VOID
 
	`_EXFUN
(
qs‹t
,(
_PTR
 
__ba£
, 
size_t
 
__nmemb
, size_à
__size
, (*
_com∑r
)(const _PTR, const _PTR)));

117 
	`_EXFUN
(
ønd
,(
_VOID
));

118 
_PTR
 
	`_EXFUN_NOTHROW
(
ªÆloc
,(_PTR 
__r
, 
size_t
 
__size
));

119 #i‚de‡
__STRICT_ANSI__


120 
_PTR
 
	`_EXFUN
(
ªÆlocf
,(_PTR 
__r
, 
size_t
 
__size
));

122 
_VOID
 
	`_EXFUN
(
§™d
,(
__£ed
));

123 
	`_EXFUN
(
°πod
,(c⁄° *
__n
, **
__íd_PTR
));

124 
	`_EXFUN
(
_°πod_r
,(
_ªít
 *,c⁄° *
__n
, **
__íd_PTR
));

125 #i‡!
	`deföed
(
__STRICT_ANSI__
Ë|| (
__STDC_VERSION__
 >199901LË|| (
__˝lu•lus
 >= 201103L)

126 
	`_EXFUN
(
°πof
,(c⁄° *
__n
, **
__íd_PTR
));

128 #i‚de‡
__STRICT_ANSI__


130 #i‚de‡
°πodf


131 
	#°πodf
 
°πof


	)

134 
	`_EXFUN
(
°πﬁ
,(c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

135 
	`_EXFUN
(
_°πﬁ_r
,(
_ªít
 *,c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

136 
	`_EXFUN
(
°πoul
,(c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

137 
	`_EXFUN
(
_°πoul_r
,(
_ªít
 *,c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

139 
	`_EXFUN
(
sy°em
,(c⁄° *
__°rög
));

141 #i‚de‡
__STRICT_ANSI__


142 
	`_EXFUN
(
a64l
,(c⁄° *
__öput
));

143 * 
	`_EXFUN
(
l64a
,(
__öput
));

144 * 
	`_EXFUN
(
_l64a_r
,(
_ªít
 *,
__öput
));

145 
	`_EXFUN
(
⁄_exô
,(
	$_VOID
 (*
__func
)(, 
_PTR
),_PTR 
__¨g
));

146 
_VOID
 
	`_EXFUN
(
_Exô
,(
__°©us
Ë
	`_ATTRIBUTE
 ((
n‹ëu∫
)));

147 
	`_EXFUN
(
puãnv
,(*
__°rög
));

148 
	`_EXFUN
(
_puãnv_r
,(
_ªít
 *, *
__°rög
));

149 
_PTR
 
	`_EXFUN
(
_ªÆlocf_r
,(
_ªít
 *, _PTR, 
size_t
));

150 
	`_EXFUN
(
£ãnv
,(c⁄° *
__°rög
, c⁄° *
__vÆue
, 
__ovîwrôe
));

151 
	`_EXFUN
(
_£ãnv_r
,(
_ªít
 *, c⁄° *
__°rög
, c⁄° *
__vÆue
, 
__ovîwrôe
));

153 * 
	`_EXFUN
(
gcvt
,(,,*));

154 * 
	`_EXFUN
(
gcvtf
,(,,*));

155 * 
	`_EXFUN
(
fcvt
,(,,*,*));

156 * 
	`_EXFUN
(
fcvtf
,(,,*,*));

157 * 
	`_EXFUN
(
ecvt
,(,,*,*));

158 * 
	`_EXFUN
(
ecvtbuf
,(, , *, *, *));

159 * 
	`_EXFUN
(
fcvtbuf
,(, , *, *, *));

160 * 
	`_EXFUN
(
ecvtf
,(,,*,*));

161 * 
	`_EXFUN
(
dtﬂ
,(, , , *, *, **));

162 
	`_EXFUN
(
ønd_r
,(*
__£ed
));

164 
	`_EXFUN
(
dønd48
,(
_VOID
));

165 
	`_EXFUN
(
_dønd48_r
,(
_ªít
 *));

166 
	`_EXFUN
(
î™d48
,([3]));

167 
	`_EXFUN
(
_î™d48_r
,(
_ªít
 *, [3]));

168 
	`_EXFUN
(
jønd48
,([3]));

169 
	`_EXFUN
(
_jønd48_r
,(
_ªít
 *, [3]));

170 
_VOID
 
	`_EXFUN
(
lc⁄g48
,([7]));

171 
_VOID
 
	`_EXFUN
(
_lc⁄g48_r
,(
_ªít
 *, [7]));

172 
	`_EXFUN
(
Ã™d48
,(
_VOID
));

173 
	`_EXFUN
(
_Ã™d48_r
,(
_ªít
 *));

174 
	`_EXFUN
(
mønd48
,(
_VOID
));

175 
	`_EXFUN
(
_mønd48_r
,(
_ªít
 *));

176 
	`_EXFUN
(
ƒ™d48
,([3]));

177 
	`_EXFUN
(
_ƒ™d48_r
,(
_ªít
 *, [3]));

179 
	`_EXFUN
(
£ed48
,([3]));

181 
	`_EXFUN
(
_£ed48_r
,(
_ªít
 *, [3]));

182 
_VOID
 
	`_EXFUN
(
§™d48
,());

183 
_VOID
 
	`_EXFUN
(
_§™d48_r
,(
_ªít
 *, ));

184 
	`_EXFUN
(
©ﬁl
,(c⁄° *
__≈å
));

185 
	`_EXFUN
(
_©ﬁl_r
,(
_ªít
 *, c⁄° *
__≈å
));

186 
	`_EXFUN
(
Œabs
,());

187 
Œdiv_t
 
	`_EXFUN
(
Œdiv
,(
__numî
, 
__díom
));

189 #i‡!
	`deföed
(
__STRICT_ANSI__
Ë|| (
__STDC_VERSION__
 >199901LË|| (
__˝lu•lus
 >= 201103L)

190 
	`_EXFUN
(
°πﬁl
,(c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

192 #i‚de‡
__STRICT_ANSI__


193 
	`_EXFUN
(
_°πﬁl_r
,(
_ªít
 *, c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

195 #i‡!
	`deföed
(
__STRICT_ANSI__
Ë|| (
__STDC_VERSION__
 >199901LË|| (
__˝lu•lus
 >= 201103L)

196 
	`_EXFUN
(
°πouŒ
,(c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

198 #i‚de‡
__STRICT_ANSI__


199 
	`_EXFUN
(
_°πouŒ_r
,(
_ªít
 *, c⁄° *
__n
, **
__íd_PTR
, 
__ba£
));

201 #i‚de‡
__CYGWIN__


202 
_VOID
 
	`_EXFUN
(
c‰ì
,(
_PTR
));

203 
	`_EXFUN
(
un£ãnv
,(c⁄° *
__°rög
));

204 
	`_EXFUN
(
_un£ãnv_r
,(
_ªít
 *, c⁄° *
__°rög
));

207 #ifde‡
__πems__


208 
	`_EXFUN
(
posix_memÆign
,(**, 
size_t
, size_t));

213 * 
	`_EXFUN
(
_dtﬂ_r
,(
_ªít
 *, , , , *, *, **));

214 #i‚de‡
__CYGWIN__


215 
_PTR
 
	`_EXFUN_NOTHROW
(
_mÆloc_r
,(
_ªít
 *, 
size_t
));

216 
_PTR
 
	`_EXFUN_NOTHROW
(
_ˇŒoc_r
,(
_ªít
 *, 
size_t
, size_t));

217 
_VOID
 
	`_EXFUN_NOTHROW
(
_‰ì_r
,(
_ªít
 *, 
_PTR
));

218 
_PTR
 
	`_EXFUN_NOTHROW
(
_ªÆloc_r
,(
_ªít
 *, _PTR, 
size_t
));

219 
_VOID
 
	`_EXFUN
(
_m°©s_r
,(
_ªít
 *, *));

221 
	`_EXFUN
(
_sy°em_r
,(
_ªít
 *, const *));

223 
_VOID
 
	`_EXFUN
(
__ïrötf
,(const *, const *, , const *));

226 #ifde‡
_LDBL_EQ_DBL


227 #i‡!
	`deföed
(
__STRICT_ANSI__
Ë|| (
__STDC_VERSION__
 >199901LË|| (
__˝lu•lus
 >= 201103L)

228 
	`°πﬁd
 (const *, **);

230 
	`wc°ﬁd
 (c⁄° 
wch¨_t
 *, wchar_t **);

233 
_END_STD_C


	@/usr/include/string.h

7 #i‚de‡
_STRING_H_


8 
	#_STRING_H_


	)

10 
	~"_™si.h
"

11 
	~<sys/ªít.h
>

12 
	~<sys/cdefs.h
>

13 
	~<sys/„©uªs.h
>

15 
	#__√ed_size_t


	)

16 
	#__√ed_NULL


	)

17 
	~<°ddef.h
>

19 
_BEGIN_STD_C


21 
_PTR
 
_EXFUN
(
memchr
,(c⁄° _PTR, , 
size_t
));

22 
_EXFUN
(
memcmp
,(c⁄° 
_PTR
, c⁄° _PTR, 
size_t
));

23 
_PTR
 
_EXFUN
(
mem˝y
,(_PTR, c⁄° _PTR, 
size_t
));

24 
_PTR
 
_EXFUN
(
memmove
,(_PTR, c⁄° _PTR, 
size_t
));

25 
_PTR
 
_EXFUN
(
mem£t
,(_PTR, , 
size_t
));

26 *
_EXFUN
(
°rˇt
,(*, const *));

27 *
_EXFUN
(
°rchr
,(const *, ));

28 
_EXFUN
(
°rcmp
,(const *, const *));

29 
_EXFUN
(
°rcﬁl
,(const *, const *));

30 *
_EXFUN
(
°r˝y
,(*, const *));

31 
size_t
 
_EXFUN
(
°rc•n
,(const *, const *));

32 *
_EXFUN
(
°ªº‹
,());

33 
size_t
 
_EXFUN
(
°æí
,(const *));

34 *
_EXFUN
(
°∫ˇt
,(*, c⁄° *, 
size_t
));

35 
_EXFUN
(
°∫cmp
,(c⁄° *, c⁄° *, 
size_t
));

36 *
_EXFUN
(
°∫˝y
,(*, c⁄° *, 
size_t
));

37 *
_EXFUN
(
°Ωbrk
,(const *, const *));

38 *
_EXFUN
(
°ºchr
,(const *, ));

39 
size_t
 
_EXFUN
(
°r•n
,(const *, const *));

40 *
_EXFUN
(
°r°r
,(const *, const *));

42 #i‚de‡
_REENT_ONLY


43 *
_EXFUN
(
°πok
,(*, const *));

46 
size_t
 
_EXFUN
(
°rx‰m
,(*, const *, size_t));

48 #i‚de‡
__STRICT_ANSI__


49 *
_EXFUN
(
°πok_r
,(*, const *, **));

51 
_EXFUN
(
bcmp
,(c⁄° *, c⁄° *, 
size_t
));

52 
_EXFUN
(
bc›y
,(c⁄° *, *, 
size_t
));

53 
_EXFUN
(
bzîo
,(*, 
size_t
));

54 
_EXFUN
(
ffs
,());

55 *
_EXFUN
(
ödex
,(const *, ));

56 
_PTR
 
_EXFUN
(
memc˝y
,(_PTR, c⁄° _PTR, , 
size_t
));

57 
_PTR
 
_EXFUN
(
memp˝y
,(_PTR, c⁄° _PTR, 
size_t
));

58 
_PTR
 
_EXFUN
(
memmem
, (c⁄° _PTR, 
size_t
, const _PTR, size_t));

59 
_PTR
 
_EXFUN
(
memrchr
,(c⁄° _PTR, , 
size_t
));

60 
_PTR
 
_EXFUN
(
øwmemchr
,(const _PTR, ));

61 *
_EXFUN
(
rödex
,(const *, ));

62 *
_EXFUN
(
°p˝y
,(*, const *));

63 *
_EXFUN
(
°≤˝y
,(*, c⁄° *, 
size_t
));

64 
_EXFUN
(
°rˇ£cmp
,(const *, const *));

65 *
_EXFUN
(
°rˇ£°r
,(const *, const *));

66 *
_EXFUN
(
°rch∫ul
,(const *, ));

68 #i‡!
deföed
(
__STRICT_ANSI__
Ë|| (
_XOPEN_SOURCE
 - 0) >= 500

69 *
_EXFUN
(
°rdup
,(const *));

71 #i‚de‡
__STRICT_ANSI__


72 *
_EXFUN
(
_°rdup_r
,(
_ªít
 *, const *));

74 #i‡!
deföed
(
__STRICT_ANSI__
Ë|| (
_XOPEN_SOURCE
 - 0) >= 700

75 *
_EXFUN
(
°∫dup
,(c⁄° *, 
size_t
));

77 #i‚de‡
__STRICT_ANSI__


78 *
_EXFUN
(
_°∫dup_r
,(
_ªít
 *, c⁄° *, 
size_t
));

83 #ifde‡
_GNU_SOURCE


84 *
_EXFUN
(
°ªº‹_r
,(, *, 
size_t
));

86 #ifde‡
__GNUC__


87 
_EXFUN
(
°ªº‹_r
,(, *, 
size_t
)Ë
__asm__
 (
__ASMNAME
 ("__xpg_strerror_r"));

89 
_EXFUN
(
__xpg_°ªº‹_r
,(, *, 
size_t
));

90 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

93 
size_t
 
_EXFUN
(
°æˇt
,(*, const *, size_t));

94 
size_t
 
_EXFUN
(
°æ˝y
,(*, const *, size_t));

95 
_EXFUN
(
°∫ˇ£cmp
,(c⁄° *, c⁄° *, 
size_t
));

96 
size_t
 
_EXFUN
(
°∫Àn
,(const *, size_t));

97 *
_EXFUN
(
°r£p
,(**, const *));

98 *
_EXFUN
(
°æwr
,(*));

99 *
_EXFUN
(
°ru¥
,(*));

100 #i‚de‡
DEFS_H


101 *
_EXFUN
(
°rsig«l
, (
__signo
));

103 #ifde‡
__CYGWIN__


104 
_EXFUN
(
°πosigno
, (c⁄° *
__«me
));

108 * 
_EXFUN
(
_°ªº‹_r
, (
_ªít
 *, , , *));

110 #i‡
deföed
 
_GNU_SOURCE
 && deföed 
__GNUC__


111 
	#°rdu∑
(
__s
) \

112 (
	`__exãnsi⁄__
 ({c⁄° *
__ö
 = (
__s
); \

113 
size_t
 
__Àn
 = 
	`°æí
 (
__ö
) + 1; \

114 * 
__out
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

115 (*Ë
	`mem˝y
 (
__out
, 
__ö
, 
__Àn
);}))

	)

116 
	#°∫du∑
(
__s
, 
__n
) \

117 (
	`__exãnsi⁄__
 ({c⁄° *
__ö
 = (
__s
); \

118 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ö
, (
__n
)) + 1; \

119 *
__out
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

120 
__out
[
__Àn
-1] = '\0'; \

121 (*Ë
	`mem˝y
 (
__out
, 
__ö
, 
__Àn
-1);}))

	)

125 #i‚de‡
°rcmpi


126 
	#°rcmpi
 
°rˇ£cmp


	)

128 #i‚de‡
°ricmp


129 
	#°ricmp
 
°rˇ£cmp


	)

131 #i‚de‡
°∫cmpi


132 
	#°∫cmpi
 
°∫ˇ£cmp


	)

134 #i‚de‡
°∫icmp


135 
	#°∫icmp
 
°∫ˇ£cmp


	)

140 
	~<sys/°rög.h
>

142 
	g_END_STD_C


	@/usr/include/_ansi.h

12 #i‚def 
_ANSIDECL_H_


13 
	#_ANSIDECL_H_


	)

15 
	~<√wlib.h
>

16 
	~<sys/c⁄fig.h
>

22 #ifde‡
__STDC__


23 
	#_HAVE_STDC


	)

28 #ifde‡
__˝lu•lus


29 #i‡!(
deföed
(
_BEGIN_STD_C
Ë&& deföed(
_END_STD_C
))

30 #ifde‡
_HAVE_STD_CXX


31 
	#_BEGIN_STD_C
 
«me•a˚
 
°d
 { "C" {

	)

32 
	#_END_STD_C
 } }

	)

34 
	#_BEGIN_STD_C
 "C" {

	)

35 
	#_END_STD_C
 }

	)

37 #i‡
__GNUC_PREREQ
 (3, 3)

38 
	#_NOTHROW
 
	`__©åibuã__
 ((
nŸhrow
))

	)

40 
	#_NOTHROW
 
	`throw
()

	)

44 
	#_BEGIN_STD_C


	)

45 
	#_END_STD_C


	)

46 
	#_NOTHROW


	)

49 #ifde‡
_HAVE_STDC


50 
	#_PTR
 *

	)

51 
	#_AND
 ,

	)

52 
	#_NOARGS
 

	)

53 
	#_CONST
 c⁄°

	)

54 
	#_VOLATILE
 vﬁ©ûe

	)

55 
	#_SIGNED
 sig√d

	)

56 
	#_DOTS
 , ...

	)

57 
	#_VOID
 

	)

58 #ifde‡
__CYGWIN__


59 
	#_EXFUN_NOTHROW
(
«me
, 
¥Ÿo
Ë
__cde˛
Çamê¥Ÿÿ
_NOTHROW


	)

60 
	#_EXFUN
(
«me
, 
¥Ÿo
Ë
__cde˛
Çamê
	)
proto

61 
	#_EXPARM
(
«me
, 
¥Ÿo
Ë(* 
__cde˛
ÇameË
	)
proto

62 
	#_EXFNPTR
(
«me
, 
¥Ÿo
Ë(
__cde˛
 *ÇameË
	)
proto

64 
	#_EXFUN_NOTHROW
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
_NOTHROW


	)

65 
	#_EXFUN
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

66 
	#_EXPARM
(
«me
, 
¥Ÿo
Ë(*ÇameË
	)
proto

67 
	#_EXFNPTR
(
«me
, 
¥Ÿo
Ë(*ÇameË
	)
proto

69 
	#_DEFUN
(
«me
, 
¨gli°
, 
¨gs
Ë
	`«me
◊rgs)

	)

70 
	#_DEFUN_VOID
(
«me
Ë
	`«me
(
_NOARGS
)

	)

71 
	#_CAST_VOID
 ()

	)

72 #i‚de‡
_LONG_DOUBLE


73 
	#_LONG_DOUBLE
 

	)

75 #i‚de‡
_LONG_LONG_TYPE


76 
	#_LONG_LONG_TYPE
 

	)

78 #i‚de‡
_PARAMS


79 
	#_PARAMS
(
∑ømli°
Ë
	)
paramlist

82 
	#_PTR
 *

	)

83 
	#_AND
 ;

	)

84 
	#_NOARGS


	)

85 
	#_CONST


	)

86 
	#_VOLATILE


	)

87 
	#_SIGNED


	)

88 
	#_DOTS


	)

89 
	#_VOID
 

	)

90 
	#_EXFUN
(
«me
, 
¥Ÿo
Ë
	`«me
()

	)

91 
	#_EXFUN_NOTHROW
(
«me
, 
¥Ÿo
Ë
	`«me
()

	)

92 
	#_DEFUN
(
«me
, 
¨gli°
, 
¨gs
Ë«mê¨gli°árgs;

	)

93 
	#_DEFUN_VOID
(
«me
Ë
	`«me
()

	)

94 
	#_CAST_VOID


	)

95 
	#_LONG_DOUBLE
 

	)

96 
	#_LONG_LONG_TYPE
 

	)

97 #i‚de‡
_PARAMS


98 
	#_PARAMS
(
∑ømli°
Ë()

	)

104 #ifde‡
__GNUC__


105 
	#_ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
 (©ås)

	)

107 
	#_ATTRIBUTE
(
©ås
)

	)

125 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__GNUC_STDC_INLINE__
)

127 
	#_ELIDABLE_INLINE
 
__ölöe__
 
	`_ATTRIBUTE
 ((
__Æways_ölöe__
))

	)

131 
	#_ELIDABLE_INLINE
 
__ölöe__


	)

134 #i‡
__GNUC_PREREQ
 (3, 1)

135 
	#_NOINLINE
 
	`__©åibuã__
 ((
__noölöe__
))

	)

136 
	#_NOINLINE_STATIC
 
_NOINLINE
 

	)

140 
	#_NOINLINE


	)

141 
	#_NOINLINE_STATIC


	)

	@/usr/include/alloca.h

7 #i‚de‡
_NEWLIB_ALLOCA_H


8 
	#_NEWLIB_ALLOCA_H


	)

10 
	~"_™si.h
"

11 
	~<sys/ªít.h
>

13 #unde‡
Æloˇ


15 #ifde‡
__GNUC__


16 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
(size)

	)

18 * 
_EXFUN
(
Æloˇ
,(
size_t
));

	@/usr/include/cygwin/stdlib.h

11 #i‚de‡
_CYGWIN_STDLIB_H


12 
	#_CYGWIN_STDLIB_H


	)

14 
	~<cygwö/waô.h
>

16 #ifde‡
__˝lu•lus


21 
__uöt32_t
 
¨c4øndom
();

22 
¨c4øndom_addøndom
(*, );

23 
¨c4øndom_buf
(*, 
size_t
);

24 
¨c4øndom_°ú
();

25 
__uöt32_t
 
¨c4øndom_unif‹m
(__uint32_t);

27 c⁄° *
gë¥og«me
 ();

28 
£çrog«me
 (const *);

30 #i‚de‡
__STRICT_ANSI__


31 *
ªÆ∑th
 (const *, *);

32 *
ˇn⁄iˇlize_fûe_«me
 (const *);

33 
un£ãnv
 (const *);

34 *
öô°©e
 (
£ed
, *
°©e
, 
size_t
 
size
);

35 
øndom
 ();

36 *
£t°©e
 (c⁄° *
°©e
);

37 
§™dom
 ();

38 *
±¢ame
 ();

39 
±¢ame_r
(, *, 
size_t
);

40 
gë±
 ();

41 
gø¡±
 ();

42 
u∆ock±
 ();

45 
posix_›í±
 ();

46 
posix_memÆign
 (**, 
size_t
, size_t);

48 #ifde‡
_COMPILING_NEWLIB


49 
	#un£ãnv
 
UNUSED_un£ãnv


	)

50 
	#_un£ãnv_r
 
UNUSED__un£ãnv_r


	)

53 
_PTR
 
memÆign
 
_PARAMS
 ((
size_t
, size_t));

54 
_PTR
 
vÆloc
 
_PARAMS
 ((
size_t
));

56 #unde‡
_mÆloc_r


57 
	#_mÆloc_r
(
r
, 
s
Ë
	`mÆloc
 (s)

	)

58 #unde‡
_‰ì_r


59 
	#_‰ì_r
(
r
, 
p
Ë
	`‰ì
 (p)

	)

60 #unde‡
_ªÆloc_r


61 
	#_ªÆloc_r
(
r
, 
p
, 
s
Ë
	`ªÆloc
 (p, s)

	)

62 #unde‡
_ˇŒoc_r


63 
	#_ˇŒoc_r
(
r
, 
s1
, 
s2
Ë
	`ˇŒoc
 (s1, s2);

	)

64 #unde‡
_memÆign_r


65 
	#_memÆign_r
(
r
, 
s1
, 
s2
Ë
	`memÆign
 (s1, s2);

	)

66 #unde‡
_mÆlöfo_r


67 
	#_mÆlöfo_r
(
r
Ë
	`mÆlöfo
 ()

	)

68 #unde‡
_mÆloc_°©s_r


69 
	#_mÆloc_°©s_r
(
r
Ë
	`mÆloc_°©s
 ()

	)

70 #unde‡
_mÆl›t_r


71 
	#_mÆl›t_r
(
i1
, 
i2
Ë
	`mÆl›t
 (i1, i2)

	)

72 #unde‡
_mÆloc_ußbÀ_size_r


73 
	#_mÆloc_ußbÀ_size_r
(
r
, 
p
Ë
	`mÆloc_ußbÀ_size
 (p)

	)

74 #unde‡
_vÆloc_r


75 
	#_vÆloc_r
(
r
, 
s
Ë
	`vÆloc
 (s)

	)

76 #unde‡
_pvÆloc_r


77 
	#_pvÆloc_r
(
r
, 
s
Ë
	`pvÆloc
 (s)

	)

78 #unde‡
_mÆloc_åim_r


79 
	#_mÆloc_åim_r
(
r
, 
s
Ë
	`mÆloc_åim
 (s)

	)

80 #unde‡
_m°©s_r


81 
	#_m°©s_r
(
r
, 
p
Ë
	`m°©s
 (p)

	)

83 #ifde‡
__˝lu•lus


	@/usr/include/machine/ieeefp.h

1 #i‚de‡
__IEEE_BIG_ENDIAN


2 #i‚de‡
__IEEE_LITTLE_ENDIAN


53 #i‡(
deföed
(
__¨m__
Ë|| deföed(
__thumb__
)Ë&& !deföed(
__MAVERICK__
)

58 #ifde‡
__VFP_FP__


59 #ifde‡
__ARMEL__


60 
	#__IEEE_LITTLE_ENDIAN


	)

62 
	#__IEEE_BIG_ENDIAN


	)

65 
	#__IEEE_BIG_ENDIAN


	)

66 #ifde‡
__ARMEL__


67 
	#__IEEE_BYTES_LITTLE_ENDIAN


	)

72 #i‡
deföed
 (
__Ørch64__
)

73 #i‡
deföed
 (
__AARCH64EL__
)

74 
	#__IEEE_LITTLE_ENDIAN


	)

76 
	#__IEEE_BIG_ENDIAN


	)

80 #ifde‡
__ïùh™y__


81 
	#__IEEE_LITTLE_ENDIAN


	)

82 
	#Suddí_UndîÊow
 1

	)

85 #ifde‡
__hµa__


86 
	#__IEEE_BIG_ENDIAN


	)

89 #ifde‡
__nds32__


90 #ifde‡
__big_ídün__


91 
	#__IEEE_BIG_ENDIAN


	)

93 
	#__IEEE_LITTLE_ENDIAN


	)

97 #ifde‡
__SPU__


98 
	#__IEEE_BIG_ENDIAN


	)

100 
	#isföôe
(
__y
) \

101 (
	`__exãnsi⁄__
 ({
__cy
; \

102 ( (
__y
) ==  ()) ? (1) : \

103 (
__cy
 = 
	`Â˛assify
(
__y
)Ë!
FP_INFINITE
 && __cy !
FP_NAN
;}))

	)

105 
	#isöf
(
__x
Ë(( (__xË= ()Ë? (0Ë: 
	`__isöfd
(__x))

	)

106 
	#i¢™
(
__x
Ë(( (__xË= ()Ë? (0Ë: 
	`__i¢™d
(__x))

	)

113 
	#__õìÂ_i¢™f
(
x
Ë0

	)

114 
	#__õìÂ_isöff
(
x
Ë0

	)

115 
	#__õìÂ_föôef
(
x
Ë1

	)

118 #ifde‡
__•¨c__


119 #ifde‡
__LITTLE_ENDIAN_DATA__


120 
	#__IEEE_LITTLE_ENDIAN


	)

122 
	#__IEEE_BIG_ENDIAN


	)

126 #i‡
deföed
(
__m68k__
Ë|| deföed(
__mc68000__
)

127 
	#__IEEE_BIG_ENDIAN


	)

130 #i‡
deföed
(
__mc68hc11__
Ë|| deföed(
__mc68hc12__
Ë|| deföed(
__mc68hc1x__
)

131 
	#__IEEE_BIG_ENDIAN


	)

132 #ifde‡
__HAVE_SHORT_DOUBLE__


133 
	#_DOUBLE_IS_32BITS


	)

137 #i‡
deföed
 (
__H8300__
Ë|| deföed (
__H8300H__
Ë|| deföed (
__H8300S__
Ë|| deföed (
__H8500__
Ë|| deföed (
__H8300SX__
)

138 
	#__IEEE_BIG_ENDIAN


	)

139 
	#_FLOAT_ARG
 

	)

140 
	#_DOUBLE_IS_32BITS


	)

143 #i‡
deföed
 (
__xc16x__
Ë|| deföed (
__xc16xL__
Ë|| deföed (
__xc16xS__
)

144 
	#__IEEE_LITTLE_ENDIAN


	)

145 
	#_FLOAT_ARG
 

	)

146 
	#_DOUBLE_IS_32BITS


	)

150 #ifde‡
__sh__


151 #ifde‡
__LITTLE_ENDIAN__


152 
	#__IEEE_LITTLE_ENDIAN


	)

154 
	#__IEEE_BIG_ENDIAN


	)

156 #i‡
deföed
(
__SH2E__
Ë|| deföed(
__SH3E__
Ë|| deföed(
__SH4_SINGLE_ONLY__
Ë|| deföed(
__SH2A_SINGLE_ONLY__
)

157 
	#_DOUBLE_IS_32BITS


	)

161 #ifde‡
_AM29K


162 
	#__IEEE_BIG_ENDIAN


	)

165 #ifde‡
_WIN32


166 
	#__IEEE_LITTLE_ENDIAN


	)

169 #ifde‡
__i386__


170 
	#__IEEE_LITTLE_ENDIAN


	)

173 #ifde‡
__i960__


174 
	#__IEEE_LITTLE_ENDIAN


	)

177 #ifde‡
__lm32__


178 
	#__IEEE_BIG_ENDIAN


	)

181 #ifde‡
__M32R__


182 
	#__IEEE_BIG_ENDIAN


	)

185 #i‡
deföed
(
_C4x
Ë|| deföed(
_C3x
)

186 
	#__IEEE_BIG_ENDIAN


	)

187 
	#_DOUBLE_IS_32BITS


	)

190 #ifde‡
__TMS320C6X__


191 #ifde‡
_BIG_ENDIAN


192 
	#__IEEE_BIG_ENDIAN


	)

194 
	#__IEEE_LITTLE_ENDIAN


	)

198 #ifde‡
__TIC80__


199 
	#__IEEE_LITTLE_ENDIAN


	)

202 #ifde‡
__MIPSEL__


203 
	#__IEEE_LITTLE_ENDIAN


	)

205 #ifde‡
__MIPSEB__


206 
	#__IEEE_BIG_ENDIAN


	)

209 #ifde‡
__MMIX__


210 
	#__IEEE_BIG_ENDIAN


	)

213 #ifde‡
__D30V__


214 
	#__IEEE_BIG_ENDIAN


	)

219 #ifde‡
__W65__


220 
	#__IEEE_LITTLE_ENDIAN


	)

221 
	#_DOUBLE_IS_32BITS


	)

224 #i‡
deföed
(
__Z8001__
Ë|| deföed(
__Z8002__
)

225 
	#__IEEE_BIG_ENDIAN


	)

228 #ifde‡
__m88k__


229 
	#__IEEE_BIG_ENDIAN


	)

232 #ifde‡
__mn10300__


233 
	#__IEEE_LITTLE_ENDIAN


	)

236 #ifde‡
__mn10200__


237 
	#__IEEE_LITTLE_ENDIAN


	)

238 
	#_DOUBLE_IS_32BITS


	)

241 #ifde‡
__v800


242 
	#__IEEE_LITTLE_ENDIAN


	)

245 #ifde‡
__v850


246 
	#__IEEE_LITTLE_ENDIAN


	)

249 #ifde‡
__D10V__


250 
	#__IEEE_BIG_ENDIAN


	)

251 #i‡
__DOUBLE__
 == 32

252 
	#_DOUBLE_IS_32BITS


	)

256 #ifde‡
__PPC__


257 #i‡(
deföed
(
_BIG_ENDIAN
Ë&& _BIG_ENDIANË|| (deföed(
_AIX
) && _AIX)

258 
	#__IEEE_BIG_ENDIAN


	)

260 #i‡(
deföed
(
_LITTLE_ENDIAN
Ë&& _LITTLE_ENDIANË|| (deföed(
__sun__
Ë&& __sun__Ë|| (deföed(
_WIN32
) && _WIN32)

261 
	#__IEEE_LITTLE_ENDIAN


	)

266 #ifde‡
__x°‹my16__


267 
	#__IEEE_LITTLE_ENDIAN


	)

270 #ifde‡
__¨c__


271 #ifde‡
__big_ídün__


272 
	#__IEEE_BIG_ENDIAN


	)

274 
	#__IEEE_LITTLE_ENDIAN


	)

278 #ifde‡
__CRX__


279 
	#__IEEE_LITTLE_ENDIAN


	)

282 #ifde‡
__‰30__


283 
	#__IEEE_BIG_ENDIAN


	)

286 #ifde‡
__mc‹e__


287 
	#__IEEE_BIG_ENDIAN


	)

290 #ifde‡
__mt__


291 
	#__IEEE_BIG_ENDIAN


	)

294 #ifde‡
__‰v__


295 
	#__IEEE_BIG_ENDIAN


	)

298 #ifde‡
__moxõ__


299 #ifde‡
__MOXIE_BIG_ENDIAN__


300 
	#__IEEE_BIG_ENDIAN


	)

302 
	#__IEEE_LITTLE_ENDIAN


	)

306 #ifde‡
__ü64__


307 #ifde‡
__BIG_ENDIAN__


308 
	#__IEEE_BIG_ENDIAN


	)

310 
	#__IEEE_LITTLE_ENDIAN


	)

314 #ifde‡
__AVR__


315 
	#__IEEE_LITTLE_ENDIAN


	)

316 
	#_DOUBLE_IS_32BITS


	)

319 #i‡
deföed
(
__‹32__
Ë|| deföed(
__‹1k__
Ë|| deföed(
__‹16__
)

320 
	#__IEEE_BIG_ENDIAN


	)

323 #ifde‡
__IP2K__


324 
	#__IEEE_BIG_ENDIAN


	)

325 
	#__SMALL_BITFIELDS


	)

326 
	#_DOUBLE_IS_32BITS


	)

329 #ifde‡
__iq2000__


330 
	#__IEEE_BIG_ENDIAN


	)

333 #ifde‡
__MAVERICK__


334 #ifde‡
__ARMEL__


335 
	#__IEEE_LITTLE_ENDIAN


	)

337 
	#__IEEE_BIG_ENDIAN


	)

341 #ifde‡
__m32c__


342 
	#__IEEE_LITTLE_ENDIAN


	)

343 
	#__SMALL_BITFIELDS


	)

346 #ifde‡
__CRIS__


347 
	#__IEEE_LITTLE_ENDIAN


	)

350 #ifde‡
__BFIN__


351 
	#__IEEE_LITTLE_ENDIAN


	)

354 #ifde‡
__x86_64__


355 
	#__IEEE_LITTLE_ENDIAN


	)

358 #ifde‡
__mï__


359 #ifde‡
__LITTLE_ENDIAN__


360 
	#__IEEE_LITTLE_ENDIAN


	)

362 
	#__IEEE_BIG_ENDIAN


	)

366 #ifde‡
__MICROBLAZE__


367 #i‚de‡
__MICROBLAZEEL__


368 
	#__IEEE_BIG_ENDIAN


	)

370 
	#__IEEE_LITTLE_ENDIAN


	)

374 #ifde‡
__MSP430__


375 
	#__IEEE_LITTLE_ENDIAN


	)

376 
	#__SMALL_BITFIELDS


	)

379 #ifde‡
__RL78__


380 
	#__IEEE_LITTLE_ENDIAN


	)

381 
	#__SMALL_BITFIELDS


	)

382 
	#_DOUBLE_IS_32BITS


	)

385 #ifde‡
__RX__


387 #ifde‡
__RX_BIG_ENDIAN__


388 
	#__IEEE_BIG_ENDIAN


	)

390 
	#__IEEE_LITTLE_ENDIAN


	)

393 #i‚de‡
__RX_64BIT_DOUBLES__


394 
	#_DOUBLE_IS_32BITS


	)

397 #ifde‡
__RX_16BIT_INTS__


398 
	#__SMALL_BITFIELDS


	)

403 #i‡(
deföed
(
__CR16__
Ë|| deföed(
__CR16C__
Ë||deföed(
__CR16CP__
))

404 
	#__IEEE_LITTLE_ENDIAN


	)

405 
	#__SMALL_BITFIELDS


	)

408 #ifde‡
__NIOS2__


409 #ifde‡
__nios2_big_ídün__


410 
	#__IEEE_BIG_ENDIAN


	)

412 
	#__IEEE_LITTLE_ENDIAN


	)

416 #i‚de‡
__IEEE_BIG_ENDIAN


417 #i‚de‡
__IEEE_LITTLE_ENDIAN


418 #îr‹ 
Endü√ss
 
nŸ
 
de˛¨ed
!!

	@/usr/include/machine/stdlib.h

11 #i‚de‡
_MACHSTDLIB_H_


12 
	#_MACHSTDLIB_H_


	)

13 #ifde‡
__˝lu•lus


17 *
mkdãmp
 (*);

19 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

20 #i‚de‡
_SCHED_H_


21 
	#_SCHED_H_


	)

23 
	~<sys/ty≥s.h
>

24 
	~<sys/sched.h
>

26 #ifde‡
__˝lu•lus


30 #i‡
deföed
(
_POSIX_PRIORITY_SCHEDULING
)

34 
sched_£ç¨am
(

35 
pid_t
 
__pid
,

36 c⁄° 
sched_∑øm
 *
__∑øm


42 
sched_gë∑øm
(

43 
pid_t
 
__pid
,

44 
sched_∑øm
 *
__∑øm


51 
sched_£tscheduÀr
(

52 
pid_t
 
__pid
,

53 
__pﬁicy
,

54 c⁄° 
sched_∑øm
 *
__∑øm


60 
sched_gëscheduÀr
(

61 
pid_t
 
__pid


67 
sched_gë_¥i‹ôy_max
(

68 
__pﬁicy


71 
sched_gë_¥i‹ôy_mö
(

72 
__pﬁicy


78 
sched_º_gë_öãrvÆ
(

79 
pid_t
 
__pid
,

80 
time•ec
 *
__öãrvÆ


84 #i‡
deföed
(
_POSIX_THREADS
Ë|| deföed(
_POSIX_PRIORITY_SCHEDULING
)

89 
sched_yõld
( );

93 #ifde‡
__˝lu•lus


	@/usr/include/sys/cdefs.h

40 #i‚def 
_SYS_CDEFS_H_


41 
	#_SYS_CDEFS_H_


	)

43 
	~<sys/„©uªs.h
>

44 
	~<°ddef.h
>

45 
	~<°döt.h
>

47 
	#__PMT
(
¨gs
Ë
	)
args

48 
	#__DOTS
 , ...

	)

49 
	#__THROW


	)

51 #ifde‡
__GNUC__


52 
	#__ASMNAME
(
˙ame
Ë
	`__XSTRING
 (
__USER_LABEL_PREFIX__
Ë
	)
cname

55 
	#__±r_t
 *

	)

56 
	#__l⁄g_doubÀ_t
 

	)

58 
	#__©åibuã_mÆloc__


	)

59 
	#__©åibuã_puª__


	)

60 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
)

	)

61 
	#__Êex¨r
 [0]

	)

63 #i‚de‡
__BOUNDED_POINTERS__


64 
	#__bounded


	)

65 
	#__unbounded


	)

66 
	#__±rvÆue


	)

69 #i‡
deföed
(
__˝lu•lus
)

70 
	#__BEGIN_DECLS
 "C" {

	)

71 
	#__END_DECLS
 }

	)

73 
	#__BEGIN_DECLS


	)

74 
	#__END_DECLS


	)

83 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__INTEL_COMPILER
)

85 #i‡
__GNUC__
 >3 || 
deföed
(
__INTEL_COMPILER
)

86 
	#__GNUCLIKE_ASM
 3

	)

87 
	#__GNUCLIKE_MATH_BUILTIN_CONSTANTS


	)

89 
	#__GNUCLIKE_ASM
 2

	)

91 
	#__GNUCLIKE___TYPEOF
 1

	)

92 
	#__GNUCLIKE___OFFSETOF
 1

	)

93 
	#__GNUCLIKE___SECTION
 1

	)

95 #i‚de‡
__INTEL_COMPILER


96 
	#__GNUCLIKE_CTOR_SECTION_HANDLING
 1

	)

99 
	#__GNUCLIKE_BUILTIN_CONSTANT_P
 1

	)

100 #i‡
deföed
(
__INTEL_COMPILER
Ë&& deföed(
__˝lu•lus
) \

101 && 
__INTEL_COMPILER
 < 800

102 #unde‡
__GNUCLIKE_BUILTIN_CONSTANT_P


105 #i‡(
__GNUC_MINOR__
 > 95 || 
__GNUC__
 >3Ë&& !
deföed
(
__INTEL_COMPILER
)

106 
	#__GNUCLIKE_BUILTIN_VARARGS
 1

	)

107 
	#__GNUCLIKE_BUILTIN_STDARG
 1

	)

108 
	#__GNUCLIKE_BUILTIN_VAALIST
 1

	)

111 #i‡
deföed
(
__GNUC__
)

112 
	#__GNUC_VA_LIST_COMPATIBILITY
 1

	)

118 #i‡
deföed
(
__GNUC__
)

119 
	#__compûî_memb¨
(Ë
__asm
 
	`__vﬁ©ûe
(" " : : : "mem‹y")

	)

122 #i‚de‡
__INTEL_COMPILER


123 
	#__GNUCLIKE_BUILTIN_NEXT_ARG
 1

	)

124 
	#__GNUCLIKE_MATH_BUILTIN_RELOPS


	)

127 
	#__GNUCLIKE_BUILTIN_MEMCPY
 1

	)

130 
	#__CC_SUPPORTS_INLINE
 1

	)

131 
	#__CC_SUPPORTS___INLINE
 1

	)

132 
	#__CC_SUPPORTS___INLINE__
 1

	)

134 
	#__CC_SUPPORTS___FUNC__
 1

	)

135 
	#__CC_SUPPORTS_WARNING
 1

	)

137 
	#__CC_SUPPORTS_VARADIC_XXX
 1

	)

139 
	#__CC_SUPPORTS_DYNAMIC_ARRAY_INIT
 1

	)

155 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

156 
	#__P
(
¥Ÿos
Ë¥Ÿo†

	)

157 
	#__CONCAT1
(
x
,
y
Ëx ## 
	)
y

158 
	#__CONCAT
(
x
,
y
Ë
	`__CONCAT1
(x,y)

	)

159 
	#__STRING
(
x
Ë#x

	)

160 
	#__XSTRING
(
x
Ë
	`__STRING
(xË

	)

162 
	#__c⁄°
 c⁄°

	)

163 
	#__sig√d
 sig√d

	)

164 
	#__vﬁ©ûe
 vﬁ©ûe

	)

165 #i‡
deföed
(
__˝lu•lus
)

166 
	#__ölöe
 
ölöe


	)

168 #i‡!(
deföed
(
__CC_SUPPORTS___INLINE
))

169 
	#__ölöe


	)

174 
	#__P
(
¥Ÿos
Ë(Ë

	)

175 
	#__CONCAT
(
x
,
y
Ëx 
	)
y

176 
	#__STRING
(
x
Ë"x"

	)

178 #i‡!
deföed
(
__CC_SUPPORTS___INLINE
)

179 
	#__c⁄°


	)

180 
	#__ölöe


	)

181 
	#__sig√d


	)

182 
	#__vﬁ©ûe


	)

191 #i‚def 
NO_ANSI_KEYWORDS


192 c⁄°

	)

193 
	#ölöe


	)

194 sig√d

	)

195 vﬁ©ûe

	)

209 #ifde‡
löt


210 
	#__dód2


	)

211 
	#__puª2


	)

212 
	#__unu£d


	)

213 
	#__∑cked


	)

214 
	#__Æig√d
(
x
)

	)

215 
	#__£˘i⁄
(
x
)

	)

217 #i‡!
__GNUC_PREREQ__
(2, 5Ë&& !
deföed
(
__INTEL_COMPILER
)

218 
	#__dód2


	)

219 
	#__puª2


	)

220 
	#__unu£d


	)

222 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 >5 && __GNUC_MINOR__ < 7 && !
deföed
(
__INTEL_COMPILER
)

223 
	#__dód2
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

224 
	#__puª2
 
	`__©åibuã__
((
__c⁄°__
))

	)

225 
	#__unu£d


	)

228 #i‡
__GNUC_PREREQ__
(2, 7)

229 
	#__dód2
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

230 
	#__puª2
 
	`__©åibuã__
((
__c⁄°__
))

	)

231 
	#__unu£d
 
	`__©åibuã__
((
__unu£d__
))

	)

232 
	#__u£d
 
	`__©åibuã__
((
__u£d__
))

	)

233 
	#__∑cked
 
	`__©åibuã__
((
__∑cked__
))

	)

234 
	#__Æig√d
(
x
Ë
	`__©åibuã__
((
	`__Æig√d__
(x)))

	)

235 
	#__£˘i⁄
(
x
Ë
	`__©åibuã__
((
	`__£˘i⁄__
(x)))

	)

237 #i‡
deföed
(
__INTEL_COMPILER
)

238 
	#__dód2
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

239 
	#__puª2
 
	`__©åibuã__
((
__c⁄°__
))

	)

240 
	#__unu£d
 
	`__©åibuã__
((
__unu£d__
))

	)

241 
	#__u£d
 
	`__©åibuã__
((
__u£d__
))

	)

242 
	#__∑cked
 
	`__©åibuã__
((
__∑cked__
))

	)

243 
	#__Æig√d
(
x
Ë
	`__©åibuã__
((
	`__Æig√d__
(x)))

	)

244 
	#__£˘i⁄
(
x
Ë
	`__©åibuã__
((
	`__£˘i⁄__
(x)))

	)

248 #i‡!
__GNUC_PREREQ__
(2, 95)

249 
	#__Æignof
(
x
Ë
	`__off£tof
(°ru˘ { 
__a
; x 
__b
; }, __b)

	)

255 #i‡
deföed
(
__˝lu•lus
) && __cplusplus >= 201103L

256 
	#_Alig«s
(
e
Ë
	`Æig«s
”)

	)

257 
	#_Alignof
(
e
Ë
	`Æignof
”)

	)

258 
	#_N‹ëu∫
 [[
n‹ëu∫
]]

	)

259 
	#_Sètic_as£π
(
e
, 
s
Ë
	`°©ic_as£π
”, s)

	)

261 
	#_Thªad_loˇl
 
__thªad


	)

262 #ñi‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 201112L

266 
	#_Alig«s
(
x
Ë
	`__Æig√d
(x)

	)

267 
	#_Alignof
(
x
Ë
	`__Æignof
(x)

	)

268 
	#_N‹ëu∫
 
__dód2


	)

269 
	#_Thªad_loˇl
 
__thªad


	)

270 #i‡
__GNUC_PREREQ__
(4, 6Ë&& !
deföed
(
__˝lu•lus
)

272 #ñi‡
deföed
(
__COUNTER__
)

273 
	#_Sètic_as£π
(
x
, 
y
Ë
	`__Sètic_as£π
(x, 
__COUNTER__
)

	)

274 
	#__Sètic_as£π
(
x
, 
y
Ë
	`___Sètic_as£π
(x, y)

	)

275 
	#___Sètic_as£π
(
x
, 
y
Ë
	t__as£π_
 ## 
	ty
[(xË? 1 : -1]

	)

277 
	t_Sètic_as£π
(
	tx
, 
	ty
Ë
	t__hack


	)

290 #i‡
	tdeföed
(
	t__STDC_VERSION__
) && __STDC_VERSION__ >= 201112L

291 
	t__gíîic
(
	tex¥
, 
	tt
, 
	tyes
, 
	tno
) \

292 
	t_Gíîic
(
	tex¥
, 
	tt
: 
	tyes
, : 
	tno
)

	)

293 #ñi‡
	t__GNUC_PREREQ__
(3, 1Ë&& !
	tdeföed
(
	t__˝lu•lus
)

294 
	t__gíîic
(
	tex¥
, 
	tt
, 
	tyes
, 
	tno
) \

295 
	t__buûtö_choo£_ex¥
( \

296 
	t__buûtö_ty≥s_com∑tibÀ_p
(
	t__ty≥of
(
	tex¥
), 
	tt
), 
	tyes
, 
	tno
)

	)

299 #i‡
	t__GNUC_PREREQ__
(2, 96)

300 
	t__mÆloc_like
 
	t__©åibuã__
((
	t__mÆloc__
))

	)

301 
	t__puª
 
	t__©åibuã__
((
	t__puª__
))

	)

303 
	t__mÆloc_like


	)

304 
	t__puª


	)

307 #i‡
	t__GNUC_PREREQ__
(3, 1Ë|| (
	tdeföed
(
	t__INTEL_COMPILER
) && __INTEL_COMPILER >= 800)

308 
	t__Æways_ölöe
 
	t__©åibuã__
((
	t__Æways_ölöe__
))

	)

310 
	t__Æways_ölöe


	)

313 #i‡
	t__GNUC_PREREQ__
(3, 1)

314 
	t__noölöe
 
	t__©åibuã__
 ((
	t__noölöe__
))

	)

316 
	t__noölöe


	)

319 #i‡
	t__GNUC_PREREQ__
(3, 3)

320 
	t__n⁄nuŒ
(
	tx
Ë
	t__©åibuã__
((
	t__n⁄nuŒ__
(x)))

	)

322 
	t__n⁄nuŒ
(
	tx
)

	)

325 #i‡
	t__GNUC_PREREQ__
(3, 4)

326 
	t__Á°ˇŒ
 
	t__©åibuã__
((
	t__Á°ˇŒ__
))

	)

328 
	t__Á°ˇŒ


	)

331 #i‡
	t__GNUC_PREREQ__
(4, 1)

332 
	t__ªtu∫s_twi˚
 
	t__©åibuã__
((
	t__ªtu∫s_twi˚__
))

	)

334 
	t__ªtu∫s_twi˚


	)

338 #i‡!
	t__GNUC_PREREQ__
(2, 7Ë&& !
	tdeföed
(
	t__INTEL_COMPILER
)

339 
	t__func__
 
	tNULL


	)

348 #i‡!(
	t__GNUC__
 =2 && 
	t__GNUC_MINOR__
 == 95)

349 #i‡!
	tdeföed
(
	t__STDC_VERSION__
Ë|| __STDC_VERSION__ < 199901 || deföed(
	tlöt
)

350 
	t__ª°ri˘


	)

352 
	t__ª°ri˘
 
	tª°ri˘


	)

384 #i‡
	t__GNUC_PREREQ__
(2, 96)

385 
	t__¥edi˘_åue
(
	texp
Ë
	t__buûtö_ex≥˘
(”xp), 1)

	)

386 
	t__¥edi˘_Ál£
(
	texp
Ë
	t__buûtö_ex≥˘
(”xp), 0)

	)

388 
	t__¥edi˘_åue
(
	texp
Ë”xp)

	)

389 
	t__¥edi˘_Ál£
(
	texp
Ë”xp)

	)

392 #i‡
	t__GNUC_PREREQ__
(4, 2)

393 
	t__hiddí
 
	t__©åibuã__
((
	t__visibûôy__
("hiddí")))

	)

394 
	t__exp‹ãd
 
	t__©åibuã__
((
	t__visibûôy__
("deÁu…")))

	)

396 
	t__hiddí


	)

397 
	t__exp‹ãd


	)

400 
	t__off£tof
(
	tty≥
, 
	tfõld
Ë
	toff£tof
—y≥, fõld)

	)

401 
	t__øngeof
(
	tty≥
, 
	t°¨t
, 
	tíd
) \

402 (
	t__off£tof
(
	tty≥
, 
	tíd
Ë- __off£tof—y≥, 
	t°¨t
))

	)

410 #i‡
	t__GNUC_PREREQ__
(3, 1)

411 
	t__c⁄èöîof
(
	tx
, 
	ts
, 
	tm
) ({ \

412 c⁄° vﬁ©ûê
	`__ty≥of__
(((
s
 *)0)->
m
Ë*
__x
 = (
x
); \

413 
	`__DEQUALIFY
(
s
 *, (c⁄° vﬁ©ûê*)
__x
 - 
	`__off£tof
(s, 
m
));\

414 })

	)

416 
	t__c⁄èöîof
(
	tx
, 
	ts
, 
	tm
) \

417 
	t__DEQUALIFY
(
	ts
 *, (c⁄° vﬁ©ûê*)(
	tx
Ë- 
	t__off£tof
(s, 
	tm
))

	)

426 #i‡!
	t__GNUC_PREREQ__
(2, 7Ë&& !
	tdeföed
(
	t__INTEL_COMPILER
)

427 
	t__¥ötÊike
(
	tfmèrg
, 
	tfú°v¨¨g
)

	)

428 
	t__sˇnÊike
(
	tfmèrg
, 
	tfú°v¨¨g
)

	)

429 
	t__f‹m©_¨g
(
	tfmèrg
)

	)

430 
	t__°rfm⁄like
(
	tfmèrg
, 
	tfú°v¨¨g
)

	)

431 
	t__°r·imñike
(
	tfmèrg
, 
	tfú°v¨¨g
)

	)

433 
	t__¥ötÊike
(
	tfmèrg
, 
	tfú°v¨¨g
) \

434 
	t__©åibuã__
((
	t__f‹m©__
 (
	t__¥ötf__
, 
	tfmèrg
, 
	tfú°v¨¨g
)))

	)

435 
	t__sˇnÊike
(
	tfmèrg
, 
	tfú°v¨¨g
) \

436 
	t__©åibuã__
((
	t__f‹m©__
 (
	t__sˇnf__
, 
	tfmèrg
, 
	tfú°v¨¨g
)))

	)

437 
	t__f‹m©_¨g
(
	tfmèrg
Ë
	t__©åibuã__
((
	t__f‹m©_¨g__
 (fmèrg)))

	)

438 
	t__°rfm⁄like
(
	tfmèrg
, 
	tfú°v¨¨g
) \

439 
	t__©åibuã__
((
	t__f‹m©__
 (
	t__°rfm⁄__
, 
	tfmèrg
, 
	tfú°v¨¨g
)))

	)

440 
	t__°r·imñike
(
	tfmèrg
, 
	tfú°v¨¨g
) \

441 
	t__©åibuã__
((
	t__f‹m©__
 (
	t__°r·ime__
, 
	tfmèrg
, 
	tfú°v¨¨g
)))

	)

445 #i‡
	tdeföed
(
	t__FªeBSD_cc_vîsi⁄
) && __FreeBSD_cc_version >= 300001 && \

446 
	tdeföed
(
	t__GNUC__
Ë&& !deföed(
	t__INTEL_COMPILER
)

447 
	t__¥ötf0like
(
	tfmèrg
, 
	tfú°v¨¨g
) \

448 
	t__©åibuã__
((
	t__f‹m©__
 (
	t__¥ötf0__
, 
	tfmèrg
, 
	tfú°v¨¨g
)))

	)

450 
	t__¥ötf0like
(
	tfmèrg
, 
	tfú°v¨¨g
)

	)

453 #i‡
	tdeföed
(
	t__GNUC__
Ë|| deföed(
	t__INTEL_COMPILER
)

454 #i‚de‡
	t__INTEL_COMPILER


455 
	t__°r⁄g_ª„ªn˚
(
	tsym
,
	tÆüssym
) \

456 
	t__ty≥of
 (
	tsym
Ë
	tÆüssym
 
	t__©åibuã__
 ((
	t__Æüs__
 (#sym)))

	)

458 #ifde‡
	t__ELF__


459 #ifde‡
	t__STDC__


460 
	t__wók_ª„ªn˚
(
	tsym
,
	tÆüs
) \

461 
	t__asm__
(".weak " #alias); \

462 
	`__asm__
(".equ " #Æü†", " #sym)

	)

463 
	#__w¨n_ª„ªn˚s
(
sym
,
msg
) \

464 
	`__asm__
(".section .gnu.warning." #sym); \

465 
	`__asm__
(".asciz \"" 
msg
 "\""); \

466 
	`__asm__
(".¥evious")

	)

467 
	#__sym_com∑t
(
sym
,
im∂
,
vîid
) \

468 
	`__asm__
(".symvî " #im∂ ", " #sym "@" #vîid)

	)

469 
	#__sym_deÁu…
(
sym
,
im∂
,
vîid
) \

470 
	`__asm__
(".symvî " #im∂ ", " #sym "@@" #vîid)

	)

472 
	#__wók_ª„ªn˚
(
sym
,
Æüs
) \

473 
	`__asm__
(".weakálias"); \

474 
	`__asm__
(".equálüs, sym")

	)

475 
	#__w¨n_ª„ªn˚s
(
sym
,
msg
) \

476 
	`__asm__
(".section .gnu.warning.sym"); \

477 
	`__asm__
(".asciz \"msg\""); \

478 
	`__asm__
(".¥evious")

	)

479 
	#__sym_com∑t
(
sym
,
im∂
,
vîid
) \

480 
	`__asm__
(".symvî im∂, sym@vîid")

	)

481 
	#__sym_deÁu…
(
im∂
,
sym
,
vîid
) \

482 
	`__asm__
(".symvî im∂, sym@@vîid")

	)

485 #ifde‡
__STDC__


486 
	#__wók_ª„ªn˚
(
sym
,
Æüs
) \

487 
	`__asm__
(".stabs \"_" #alias "\",11,0,0,0"); \

488 
	`__asm__
(".°ab†\"_" #sym "\",1,0,0,0")

	)

489 
	#__w¨n_ª„ªn˚s
(
sym
,
msg
) \

490 
	`__asm__
(".°ab†\"" 
msg
 "\",30,0,0,0"); \

491 
	`__asm__
(".°ab†\"_" #sym "\",1,0,0,0")

	)

493 
	#__wók_ª„ªn˚
(
sym
,
Æüs
) \

494 
	`__asm__
(".stabs \"_/**/alias\",11,0,0,0"); \

495 
	`__asm__
(".°ab†\"_/**/sym\",1,0,0,0")

	)

496 
	#__w¨n_ª„ªn˚s
(
sym
,
msg
) \

497 
	`__asm__
(".stabs msg,30,0,0,0"); \

498 
	`__asm__
(".°ab†\"_/**/sym\",1,0,0,0")

	)

503 #i‚def 
__FBSDID


504 
	#__FBSDID
(
s
Ë
__hack


	)

507 #i‚def 
__RCSID


508 
	#__RCSID
(
s
Ë
__hack


	)

511 #i‚def 
__RCSID_SOURCE


512 
	#__RCSID_SOURCE
(
s
Ë
__hack


	)

515 #i‚def 
__SCCSID


516 
	#__SCCSID
(
s
Ë
__hack


	)

519 #i‚def 
__COPYRIGHT


520 
	#__COPYRIGHT
(
s
Ë
__hack


	)

523 #i‚def 
__DECONST


524 
	#__DECONST
(
ty≥
, 
v¨
Ë(—y≥)(
uöçå_t
)(c⁄° *)(v¨))

	)

527 #i‚def 
__DEVOLATILE


528 
	#__DEVOLATILE
(
ty≥
, 
v¨
Ë(—y≥)(
uöçå_t
)(vﬁ©ûê*)(v¨))

	)

531 #i‚def 
__DEQUALIFY


532 
	#__DEQUALIFY
(
ty≥
, 
v¨
Ë(—y≥)(
uöçå_t
)(c⁄° vﬁ©ûê*)(v¨))

	)

559 #i‡
	`deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 1

560 #unde‡
_POSIX_C_SOURCE


561 
	#_POSIX_C_SOURCE
 199009

	)

565 #i‡
	`deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 2

566 #unde‡
_POSIX_C_SOURCE


567 
	#_POSIX_C_SOURCE
 199209

	)

571 #ifde‡
_XOPEN_SOURCE


572 #i‡
_XOPEN_SOURCE
 - 0 >= 700

573 
	#__XSI_VISIBLE
 700

	)

574 #unde‡
_POSIX_C_SOURCE


575 
	#_POSIX_C_SOURCE
 200809

	)

576 #ñi‡
_XOPEN_SOURCE
 - 0 >= 600

577 
	#__XSI_VISIBLE
 600

	)

578 #unde‡
_POSIX_C_SOURCE


579 
	#_POSIX_C_SOURCE
 200112

	)

580 #ñi‡
_XOPEN_SOURCE
 - 0 >= 500

581 
	#__XSI_VISIBLE
 500

	)

582 #unde‡
_POSIX_C_SOURCE


583 
	#_POSIX_C_SOURCE
 199506

	)

591 #i‡
	`deföed
(
_POSIX_SOURCE
Ë&& !deföed(
_POSIX_C_SOURCE
)

592 
	#_POSIX_C_SOURCE
 198808

	)

594 #ifde‡
_POSIX_C_SOURCE


595 #i‡
_POSIX_C_SOURCE
 >= 200809

596 
	#__POSIX_VISIBLE
 200809

	)

597 
	#__ISO_C_VISIBLE
 1999

	)

598 #ñi‡
_POSIX_C_SOURCE
 >= 200112

599 
	#__POSIX_VISIBLE
 200112

	)

600 
	#__ISO_C_VISIBLE
 1999

	)

601 #ñi‡
_POSIX_C_SOURCE
 >= 199506

602 
	#__POSIX_VISIBLE
 199506

	)

603 
	#__ISO_C_VISIBLE
 1990

	)

604 #ñi‡
_POSIX_C_SOURCE
 >= 199309

605 
	#__POSIX_VISIBLE
 199309

	)

606 
	#__ISO_C_VISIBLE
 1990

	)

607 #ñi‡
_POSIX_C_SOURCE
 >= 199209

608 
	#__POSIX_VISIBLE
 199209

	)

609 
	#__ISO_C_VISIBLE
 1990

	)

610 #ñi‡
_POSIX_C_SOURCE
 >= 199009

611 
	#__POSIX_VISIBLE
 199009

	)

612 
	#__ISO_C_VISIBLE
 1990

	)

614 
	#__POSIX_VISIBLE
 198808

	)

615 
	#__ISO_C_VISIBLE
 0

	)

630 #i‡
	`deföed
(
_ANSI_SOURCE
)

631 
	#__POSIX_VISIBLE
 0

	)

632 
	#__XSI_VISIBLE
 0

	)

633 
	#__BSD_VISIBLE
 0

	)

634 
	#__ISO_C_VISIBLE
 1990

	)

635 #ñi‡
	`deföed
(
_C99_SOURCE
)

636 
	#__POSIX_VISIBLE
 0

	)

637 
	#__XSI_VISIBLE
 0

	)

638 
	#__BSD_VISIBLE
 0

	)

639 
	#__ISO_C_VISIBLE
 1999

	)

640 #ñi‡
	`deföed
(
_C11_SOURCE
)

641 
	#__POSIX_VISIBLE
 0

	)

642 
	#__XSI_VISIBLE
 0

	)

643 
	#__BSD_VISIBLE
 0

	)

644 
	#__ISO_C_VISIBLE
 2011

	)

646 
	#__POSIX_VISIBLE
 200809

	)

647 
	#__XSI_VISIBLE
 700

	)

648 
	#__BSD_VISIBLE
 1

	)

649 
	#__ISO_C_VISIBLE
 2011

	)

653 #i‚def 
__has_exãnsi⁄


654 
	#__has_exãnsi⁄
 
__has_„©uª


	)

656 #i‚def 
__has_„©uª


657 
	#__has_„©uª
(
x
Ë0

	)

659 #i‚def 
__has_ö˛ude


660 
	#__has_ö˛ude
(
x
Ë0

	)

662 #i‚def 
__has_buûtö


663 
	#__has_buûtö
(
x
Ë0

	)

	@/usr/include/sys/features.h

21 #i‚de‡
_SYS_FEATURES_H


22 
	#_SYS_FEATURES_H


	)

24 #ifde‡
__˝lu•lus


29 #i‚de‡
__GNUC_PREREQ


30 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


31 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

32 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

34 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

38 
	#__GNUC_PREREQ__
(
ma
, 
mi
Ë
	`__GNUC_PREREQ
(ma, mi)

	)

42 #ifde‡
__πems__


43 
	#_POSIX_JOB_CONTROL
 1

	)

44 
	#_POSIX_SAVED_IDS
 1

	)

45 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_ASYNCHRONOUS_IO
 1

	)

47 
	#_POSIX_FSYNC
 1

	)

48 
	#_POSIX_MAPPED_FILES
 1

	)

49 
	#_POSIX_MEMLOCK
 1

	)

50 
	#_POSIX_MEMLOCK_RANGE
 1

	)

51 
	#_POSIX_MEMORY_PROTECTION
 1

	)

52 
	#_POSIX_MESSAGE_PASSING
 1

	)

53 
	#_POSIX_MONOTONIC_CLOCK
 200112L

	)

54 
	#_POSIX_PRIORITIZED_IO
 1

	)

55 
	#_POSIX_PRIORITY_SCHEDULING
 1

	)

56 
	#_POSIX_REALTIME_SIGNALS
 1

	)

57 
	#_POSIX_SEMAPHORES
 1

	)

59 
	#_POSIX_SYNCHRONIZED_IO
 1

	)

60 
	#_POSIX_TIMERS
 1

	)

61 
	#_POSIX_BARRIERS
 200112L

	)

62 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

63 
	#_POSIX_SPIN_LOCKS
 200112L

	)

67 
	#_POSIX_THREADS
 1

	)

68 
	#_POSIX_THREAD_ATTR_STACKADDR
 1

	)

69 
	#_POSIX_THREAD_ATTR_STACKSIZE
 1

	)

70 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 1

	)

71 
	#_POSIX_THREAD_PRIO_INHERIT
 1

	)

72 
	#_POSIX_THREAD_PRIO_PROTECT
 1

	)

73 
	#_POSIX_THREAD_PROCESS_SHARED
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 1

	)

77 
	#_POSIX_SPAWN
 1

	)

78 
	#_POSIX_TIMEOUTS
 1

	)

79 
	#_POSIX_CPUTIME
 1

	)

80 
	#_POSIX_THREAD_CPUTIME
 1

	)

81 
	#_POSIX_SPORADIC_SERVER
 1

	)

82 
	#_POSIX_THREAD_SPORADIC_SERVER
 1

	)

83 
	#_POSIX_DEVICE_CONTROL
 1

	)

84 
	#_POSIX_DEVCTL_DIRECTION
 1

	)

85 
	#_POSIX_INTERRUPT_CONTROL
 1

	)

86 
	#_POSIX_ADVISORY_INFO
 1

	)

89 
	#_UNIX98_THREAD_MUTEX_ATTRIBUTES
 1

	)

94 #ifde‡
__XMK__


95 
	#_POSIX_THREADS
 1

	)

96 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 1

	)

100 #ifde‡
__svr4__


101 
	#_POSIX_JOB_CONTROL
 1

	)

102 
	#_POSIX_SAVED_IDS
 1

	)

103 
	#_POSIX_VERSION
 199009L

	)

106 #ifde‡
__CYGWIN__


108 #i‡!
deföed
(
__STRICT_ANSI__
Ë|| deföed(
__˝lu•lus
Ë|| 
__STDC_VERSION__
 >= 199901L

109 
	#_POSIX_VERSION
 200112L

	)

110 
	#_POSIX2_VERSION
 200112L

	)

111 
	#_XOPEN_VERSION
 600

	)

113 
	#_POSIX_ADVISORY_INFO
 200112L

	)

116 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

117 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

118 
	#_POSIX_CPUTIME
 200112L

	)

119 
	#_POSIX_FSYNC
 200112L

	)

120 
	#_POSIX_IPV6
 200112L

	)

121 
	#_POSIX_JOB_CONTROL
 1

	)

122 
	#_POSIX_MAPPED_FILES
 200112L

	)

124 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

125 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

126 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

127 
	#_POSIX_MONOTONIC_CLOCK
 200112L

	)

128 
	#_POSIX_NO_TRUNC
 1

	)

130 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

131 
	#_POSIX_RAW_SOCKETS
 200112L

	)

132 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

133 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

134 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_SAVED_IDS
 1

	)

136 
	#_POSIX_SEMAPHORES
 200112L

	)

137 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

138 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_SPIN_LOCKS
 200112L

	)

142 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

143 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

144 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

145 
	#_POSIX_THREAD_CPUTIME
 200112L

	)

148 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

149 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

150 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

152 
	#_POSIX_THREADS
 200112L

	)

154 
	#_POSIX_TIMERS
 1

	)

160 
	#_POSIX_VDISABLE
 '\0'

	)

161 
	#_POSIX2_C_BIND
 200112L

	)

162 
	#_POSIX2_C_DEV
 200112L

	)

163 
	#_POSIX2_CHAR_TERM
 200112L

	)

173 
	#_POSIX2_SW_DEV
 200112L

	)

174 
	#_POSIX2_UPE
 200112L

	)

175 
	#_POSIX_V6_ILP32_OFF32
 -1

	)

176 #ifde‡
__LP64__


177 
	#_POSIX_V6_ILP32_OFFBIG
 -1

	)

178 
	#_POSIX_V6_LP64_OFF64
 1

	)

179 
	#_POSIX_V6_LPBIG_OFFBIG
 1

	)

181 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

182 
	#_POSIX_V6_LP64_OFF64
 -1

	)

183 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

185 
	#_XBS5_ILP32_OFF32
 
_POSIX_V6_ILP32_OFF32


	)

186 
	#_XBS5_ILP32_OFFBIG
 
_POSIX_V6_ILP32_OFFBIG


	)

187 
	#_XBS5_LP64_OFF64
 
_POSIX_V6_LP64_OFF64


	)

188 
	#_XBS5_LPBIG_OFFBIG
 
_POSIX_V6_LPBIG_OFFBIG


	)

189 
	#_XOPEN_CRYPT
 1

	)

190 
	#_XOPEN_ENH_I18N
 1

	)

194 
	#_XOPEN_SHM
 1

	)

203 
	#__STDC_ISO_10646__
 200305L

	)

214 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë&& deföed(
_XOPEN_SOURCE
)

215 #i‡(
_XOPEN_SOURCE
 - 0) == 700

216 
	#_POSIX_C_SOURCE
 200809L

	)

217 #ñi‡(
_XOPEN_SOURCE
 - 0) == 600

218 
	#_POSIX_C_SOURCE
 200112L

	)

219 #ñi‡(
_XOPEN_SOURCE
 - 0) == 500

220 
	#_POSIX_C_SOURCE
 199506L

	)

221 #ñi‡(
_XOPEN_SOURCE
 - 0) < 500

222 
	#_POSIX_C_SOURCE
 2

	)

226 #ifde‡
__˝lu•lus


	@/usr/include/sys/reent.h

7 #i‚de‡
_SYS_REENT_H_


8 #ifde‡
__˝lu•lus


11 
	#_SYS_REENT_H_


	)

13 
	~<_™si.h
>

14 
	~<sys/_ty≥s.h
>

16 
	#_NULL
 0

	)

18 #i‚de‡
__L⁄g


19 #i‡
__LONG_MAX__
 == 2147483647L

20 
	#__L⁄g
 

	)

21 
	t__L⁄g
 
	t__UL⁄g
;

22 #ñi‡
__INT_MAX__
 == 2147483647

23 
	#__L⁄g
 

	)

24 
	t__L⁄g
 
	t__UL⁄g
;

28 #i‡!
deföed
–
__L⁄g
)

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__L⁄g


33 
	#__L⁄g
 
__öt32_t


	)

34 
__uöt32_t
 
	t__UL⁄g
;

37 
_ªít
;

44 
	s_Bigöt


46 
_Bigöt
 *
_√xt
;

47 
_k
, 
_maxwds
, 
_sign
, 
_wds
;

48 
__UL⁄g
 
_x
[1];

52 
	s__tm


54 
__tm_£c
;

55 
__tm_mö
;

56 
__tm_hour
;

57 
__tm_mday
;

58 
__tm_m⁄
;

59 
__tm_yór
;

60 
__tm_wday
;

61 
__tm_yday
;

62 
__tm_isd°
;

69 
	#_ATEXIT_SIZE
 32

	)

71 
	s_⁄_exô_¨gs
 {

72 * 
_‚¨gs
[
_ATEXIT_SIZE
];

73 * 
_dso_h™dÀ
[
_ATEXIT_SIZE
];

75 
__UL⁄g
 
_‚ty≥s
;

78 
__UL⁄g
 
_is_cxa
;

81 #ifde‡
_REENT_SMALL


82 
	s_©exô
 {

83 
_©exô
 *
_√xt
;

84 
_öd
;

85 (*
_‚s
[
_ATEXIT_SIZE
])();

86 
_⁄_exô_¨gs
 * 
_⁄_exô_¨gs_±r
;

88 
	#_ATEXIT_INIT
 {
_NULL
, 0, {_NULL}, _NULL}

	)

90 
	s_©exô
 {

91 
_©exô
 *
_√xt
;

92 
_öd
;

94 (*
_‚s
[
_ATEXIT_SIZE
])();

95 
_⁄_exô_¨gs
 _on_exit_args;

97 
	#_ATEXIT_INIT
 {
_NULL
, 0, {_NULL}, {{_NULL}, {_NULL}, 0, 0}}

	)

100 #ifde‡
_REENT_GLOBAL_ATEXIT


101 
	#_REENT_INIT_ATEXIT


	)

103 
	#_REENT_INIT_ATEXIT
 \

104 
_NULL
, 
_ATEXIT_INIT
,

	)

114 
	s__sbuf
 {

115 *
_ba£
;

116 
_size
;

144 #ifde‡
_REENT_SMALL


150 
	s__sFILE_Áke
 {

151 *
_p
;

152 
_r
;

153 
_w
;

154 
_Êags
;

155 
_fûe
;

156 
__sbuf
 
_bf
;

157 
_lbfsize
;

159 
_ªít
 *
_d©a
;

165 
_VOID
 
_EXFUN
(
__söô
,(
_ªít
 *));

167 
	#_REENT_SMALL_CHECK_INIT
(
±r
) \

170 i‡((
±r
Ë&& !’å)->
__sdidöô
) \

171 
	`__söô
 (
±r
); \

173 0)

	)

175 
	#_REENT_SMALL_CHECK_INIT
(
±r
Ë

	)

178 
	s__sFILE
 {

179 *
	g_p
;

180 
	g_r
;

181 
	g_w
;

182 
	g_Êags
;

183 
	g_fûe
;

184 
__sbuf
 
	g_bf
;

185 
	g_lbfsize
;

187 #ifde‡
_REENT_SMALL


188 
_ªít
 *
	g_d©a
;

192 
_PTR
 
	g_cookõ
;

194 
_READ_WRITE_RETURN_TYPE
 
_EXFNPTR
(
_ªad
, (
_ªít
 *, 
_PTR
,

196 
_READ_WRITE_RETURN_TYPE
 
_EXFNPTR
(
_wrôe
, (
_ªít
 *, 
_PTR
,

198 
_Âos_t
 
_EXFNPTR
(
_£ek
, (
_ªít
 *, 
_PTR
, _fpos_t, ));

199 
_EXFNPTR
(
_˛o£
, (
_ªít
 *, 
_PTR
));

202 
__sbuf
 
	g_ub
;

203 *
	g_up
;

204 
	g_ur
;

207 
	g_ubuf
[3];

208 
	g_nbuf
[1];

211 
__sbuf
 
	g_lb
;

214 
	g_blksize
;

215 
_off_t
 
	g_off£t
;

217 #i‚de‡
_REENT_SMALL


218 
_ªít
 *
	g_d©a
;

221 #i‚de‡
__SINGLE_THREAD__


222 
_Êock_t
 
	g_lock
;

224 
_mb°©e_t
 
	g_mb°©e
;

225 
	g_Êags2
;

228 #ifde‡
__CUSTOM_FILE_IO__


231 
	~<sys/cu°om_fûe.h
>

234 #ifde‡
__LARGE64_FILES


235 
	s__sFILE64
 {

236 *
	g_p
;

237 
	g_r
;

238 
	g_w
;

239 
	g_Êags
;

240 
	g_fûe
;

241 
__sbuf
 
	g_bf
;

242 
	g_lbfsize
;

244 
_ªít
 *
	g_d©a
;

247 
_PTR
 
	g_cookõ
;

249 
_READ_WRITE_RETURN_TYPE
 
_EXFNPTR
(
_ªad
, (
_ªít
 *, 
_PTR
,

251 
_READ_WRITE_RETURN_TYPE
 
_EXFNPTR
(
_wrôe
, (
_ªít
 *, 
_PTR
,

253 
_Âos_t
 
_EXFNPTR
(
_£ek
, (
_ªít
 *, 
_PTR
, _fpos_t, ));

254 
_EXFNPTR
(
_˛o£
, (
_ªít
 *, 
_PTR
));

257 
__sbuf
 
	g_ub
;

258 *
	g_up
;

259 
	g_ur
;

262 
	g_ubuf
[3];

263 
	g_nbuf
[1];

266 
__sbuf
 
	g_lb
;

269 
	g_blksize
;

270 
	g_Êags2
;

272 
_off64_t
 
	g_off£t
;

273 
_Âos64_t
 
_EXFNPTR
(
_£ek64
, (
_ªít
 *, 
_PTR
, _fpos64_t, ));

275 #i‚de‡
__SINGLE_THREAD__


276 
_Êock_t
 
	g_lock
;

278 
_mb°©e_t
 
	g_mb°©e
;

280 
__sFILE64
 
	t__FILE
;

282 
__sFILE
 
	t__FILE
;

286 
	s_glue


288 
_glue
 *
	g_√xt
;

289 
	g_niobs
;

290 
__FILE
 *
	g_iobs
;

307 
	#_RAND48_SEED_0
 (0x330e)

	)

308 
	#_RAND48_SEED_1
 (0xabcd)

	)

309 
	#_RAND48_SEED_2
 (0x1234)

	)

310 
	#_RAND48_MULT_0
 (0xe66d)

	)

311 
	#_RAND48_MULT_1
 (0xdìc)

	)

312 
	#_RAND48_MULT_2
 (0x0005)

	)

313 
	#_RAND48_ADD
 (0x000b)

	)

314 
	s_ønd48
 {

315 
	g_£ed
[3];

316 
	g_mu…
[3];

317 
	g_add
;

318 #ifde‡
_REENT_SMALL


320 
__exãnsi⁄__
 
	g_ønd_√xt
;

325 
	#_REENT_EMERGENCY_SIZE
 25

	)

326 
	#_REENT_ASCTIME_SIZE
 26

	)

327 
	#_REENT_SIGNAL_SIZE
 24

	)

337 #ifde‡
_REENT_SMALL


339 
	s_m¥ec


342 
_Bigöt
 *
	g_ªsu…
;

343 
	g_ªsu…_k
;

344 
_Bigöt
 *
	g_p5s
;

345 
_Bigöt
 **
	g_‰ìli°
;

349 
	s_misc_ªít


352 *
	g_°πok_œ°
;

353 
_mb°©e_t
 
	g_mbÀn_°©e
;

354 
_mb°©e_t
 
	g_w˘omb_°©e
;

355 
_mb°©e_t
 
	g_mbtowc_°©e
;

356 
	g_l64a_buf
[8];

357 
	g_gëd©e_îr
;

358 
_mb°©e_t
 
	g_mbæí_°©e
;

359 
_mb°©e_t
 
	g_mbπowc_°©e
;

360 
_mb°©e_t
 
	g_mb§towcs_°©e
;

361 
_mb°©e_t
 
	g_w¸tomb_°©e
;

362 
_mb°©e_t
 
	g_wc§tombs_°©e
;

367 
	s_ªít


371 
	g_î∫o
;

376 
__FILE
 *
	g_°dö
, *
	g_°dout
, *
	g_°dîr
;

378 
	g_öc
;

380 *
	g_emîgícy
;

382 
	g__sdidöô
;

384 
	g_cuºít_ˇãg‹y
;

385 
_CONST
 *
	g_cuºít_loˇÀ
;

387 
_m¥ec
 *
	g_mp
;

389 
_EXFNPTR
(
__˛ónup
, (
_ªít
 *));

391 
	g_gamma_signgam
;

394 
	g_cvéí
;

395 *
	g_cvtbuf
;

397 
_ønd48
 *
	g_r48
;

398 
__tm
 *
	g_loˇ…ime_buf
;

399 *
	g_as˘ime_buf
;

402 (**(
	g_sig_func
))();

404 #i‚de‡
_REENT_GLOBAL_ATEXIT


406 
_©exô
 *
	g_©exô
;

407 
_©exô
 
	g_©exô0
;

410 
_glue
 
	g__sglue
;

411 
__FILE
 *
	g__sf
;

412 
_misc_ªít
 *
	g_misc
;

413 *
	g_sig«l_buf
;

416 c⁄° 
__sFILE_Áke
 
__sf_Áke_°dö
;

417 c⁄° 
__sFILE_Áke
 
__sf_Áke_°dout
;

418 c⁄° 
__sFILE_Áke
 
__sf_Áke_°dîr
;

420 
	#_REENT_INIT
(
v¨
) \

422 (
__FILE
 *)&
__sf_Áke_°dö
, \

423 (
__FILE
 *)&
__sf_Áke_°dout
, \

424 (
__FILE
 *)&
__sf_Áke_°dîr
, \

426 
_NULL
, \

430 
_NULL
, \

431 
_NULL
, \

434 
_NULL
, \

435 
_NULL
, \

436 
_NULL
, \

437 
_NULL
, \

438 
_NULL
, \

439 
_REENT_INIT_ATEXIT
 \

440 {
_NULL
, 0, _NULL}, \

441 
_NULL
, \

442 
_NULL
, \

443 
_NULL
 \

444 }

	)

446 
	#_REENT_INIT_PTR
(
v¨
) \

447 { 
	`mem£t
((
v¨
), 0, (*(var))); \

448 (
v¨
)->
_°dö
 = (
__FILE
 *)&
__sf_Áke_°dö
; \

449 (
v¨
)->
_°dout
 = (
__FILE
 *)&
__sf_Áke_°dout
; \

450 (
v¨
)->
_°dîr
 = (
__FILE
 *)&
__sf_Áke_°dîr
; \

451 (
v¨
)->
_cuºít_loˇÀ
 = "C"; \

452 }

	)

455 #i‡
DEBUG


456 
	~<as£π.h
>

457 
	#__ªít_as£π
(
x
Ë
	`as£π
(x)

	)

459 
	#__ªít_as£π
(
x
Ë(()0)

	)

462 #ifde‡
__CUSTOM_FILE_IO__


463 #îr‹ 
Cu°om
 
FILE
 
I
/
O
 
™d
 
_REENT_SMALL
 
nŸ
 
cuºíéy
 
suµ‹ãd
.

467 
	#_REENT_CHECK
(
v¨
, 
wh©
, 
ty≥
, 
size
, 
öô
) do { \

468 
_ªít
 *
_r
 = (
v¨
); \

469 i‡(
_r
->
wh©
 =
NULL
) { \

470 
_r
->
wh©
 = (
ty≥
)
	`mÆloc
(
size
); \

471 
	`__ªít_as£π
(
_r
->
wh©
); \

472 
öô
; \

474 } 0)

	)

476 
	#_REENT_CHECK_TM
(
v¨
) \

477 
	`_REENT_CHECK
(
v¨
, 
_loˇ…ime_buf
, 
__tm
 *,  *((var)->_localtime_buf), \

478  )

	)

480 
	#_REENT_CHECK_ASCTIME_BUF
(
v¨
) \

481 
	`_REENT_CHECK
(
v¨
, 
_as˘ime_buf
, *, 
_REENT_ASCTIME_SIZE
, \

482 
	`mem£t
((
v¨
)->
_as˘ime_buf
, 0, 
_REENT_ASCTIME_SIZE
))

	)

485 
	#_REENT_INIT_RAND48
(
v¨
) do { \

486 
_ªít
 *
_r
 = (
v¨
); \

487 
_r
->
_r48
->
_£ed
[0] = 
_RAND48_SEED_0
; \

488 
_r
->
_r48
->
_£ed
[1] = 
_RAND48_SEED_1
; \

489 
_r
->
_r48
->
_£ed
[2] = 
_RAND48_SEED_2
; \

490 
_r
->
_r48
->
_mu…
[0] = 
_RAND48_MULT_0
; \

491 
_r
->
_r48
->
_mu…
[1] = 
_RAND48_MULT_1
; \

492 
_r
->
_r48
->
_mu…
[2] = 
_RAND48_MULT_2
; \

493 
_r
->
_r48
->
_add
 = 
_RAND48_ADD
; \

494 
_r
->
_r48
->
_ønd_√xt
 = 1; \

495 } 0)

	)

496 
	#_REENT_CHECK_RAND48
(
v¨
) \

497 
	`_REENT_CHECK
(
v¨
, 
_r48
, 
_ønd48
 *,  *((v¨)->_r48), 
	`_REENT_INIT_RAND48
((v¨)))

	)

499 
	#_REENT_INIT_MP
(
v¨
) do { \

500 
_ªít
 *
_r
 = (
v¨
); \

501 
_r
->
_mp
->
_ªsu…_k
 = 0; \

502 
_r
->
_mp
->
_ªsu…
 = _r->_mp->
_p5s
 = 
_NULL
; \

503 
_r
->
_mp
->
_‰ìli°
 = 
_NULL
; \

504 } 0)

	)

505 
	#_REENT_CHECK_MP
(
v¨
) \

506 
	`_REENT_CHECK
(
v¨
, 
_mp
, 
_m¥ec
 *,  *((v¨)->_mp), 
	`_REENT_INIT_MP
(v¨))

	)

508 
	#_REENT_CHECK_EMERGENCY
(
v¨
) \

509 
	`_REENT_CHECK
(
v¨
, 
_emîgícy
, *, 
_REENT_EMERGENCY_SIZE
, )

	)

511 
	#_REENT_INIT_MISC
(
v¨
) do { \

512 
_ªít
 *
_r
 = (
v¨
); \

513 
_r
->
_misc
->
_°πok_œ°
 = 
_NULL
; \

514 
_r
->
_misc
->
_mbÀn_°©e
.
__cou¡
 = 0; \

515 
_r
->
_misc
->
_mbÀn_°©e
.
__vÆue
.
__wch
 = 0; \

516 
_r
->
_misc
->
_w˘omb_°©e
.
__cou¡
 = 0; \

517 
_r
->
_misc
->
_w˘omb_°©e
.
__vÆue
.
__wch
 = 0; \

518 
_r
->
_misc
->
_mbtowc_°©e
.
__cou¡
 = 0; \

519 
_r
->
_misc
->
_mbtowc_°©e
.
__vÆue
.
__wch
 = 0; \

520 
_r
->
_misc
->
_mbæí_°©e
.
__cou¡
 = 0; \

521 
_r
->
_misc
->
_mbæí_°©e
.
__vÆue
.
__wch
 = 0; \

522 
_r
->
_misc
->
_mbπowc_°©e
.
__cou¡
 = 0; \

523 
_r
->
_misc
->
_mbπowc_°©e
.
__vÆue
.
__wch
 = 0; \

524 
_r
->
_misc
->
_mb§towcs_°©e
.
__cou¡
 = 0; \

525 
_r
->
_misc
->
_mb§towcs_°©e
.
__vÆue
.
__wch
 = 0; \

526 
_r
->
_misc
->
_w¸tomb_°©e
.
__cou¡
 = 0; \

527 
_r
->
_misc
->
_w¸tomb_°©e
.
__vÆue
.
__wch
 = 0; \

528 
_r
->
_misc
->
_wc§tombs_°©e
.
__cou¡
 = 0; \

529 
_r
->
_misc
->
_wc§tombs_°©e
.
__vÆue
.
__wch
 = 0; \

530 
_r
->
_misc
->
_l64a_buf
[0] = '\0'; \

531 
_r
->
_misc
->
_gëd©e_îr
 = 0; \

532 } 0)

	)

533 
	#_REENT_CHECK_MISC
(
v¨
) \

534 
	`_REENT_CHECK
(
v¨
, 
_misc
, 
_misc_ªít
 *,  *((v¨)->_misc), 
	`_REENT_INIT_MISC
(v¨))

	)

536 
	#_REENT_CHECK_SIGNAL_BUF
(
v¨
) \

537 
	`_REENT_CHECK
(
v¨
, 
_sig«l_buf
, *, 
_REENT_SIGNAL_SIZE
, )

	)

539 
	#_REENT_SIGNGAM
(
±r
Ë(’å)->
_gamma_signgam
)

	)

540 
	#_REENT_RAND_NEXT
(
±r
Ë(’å)->
_r48
->
_ønd_√xt
)

	)

541 
	#_REENT_RAND48_SEED
(
±r
Ë(’å)->
_r48
->
_£ed
)

	)

542 
	#_REENT_RAND48_MULT
(
±r
Ë(’å)->
_r48
->
_mu…
)

	)

543 
	#_REENT_RAND48_ADD
(
±r
Ë(’å)->
_r48
->
_add
)

	)

544 
	#_REENT_MP_RESULT
(
±r
Ë(’å)->
_mp
->
_ªsu…
)

	)

545 
	#_REENT_MP_RESULT_K
(
±r
Ë(’å)->
_mp
->
_ªsu…_k
)

	)

546 
	#_REENT_MP_P5S
(
±r
Ë(’å)->
_mp
->
_p5s
)

	)

547 
	#_REENT_MP_FREELIST
(
±r
Ë(’å)->
_mp
->
_‰ìli°
)

	)

548 
	#_REENT_ASCTIME_BUF
(
±r
Ë(’å)->
_as˘ime_buf
)

	)

549 
	#_REENT_TM
(
±r
Ë(’å)->
_loˇ…ime_buf
)

	)

550 
	#_REENT_EMERGENCY
(
±r
Ë(’å)->
_emîgícy
)

	)

551 
	#_REENT_STRTOK_LAST
(
±r
Ë(’å)->
_misc
->
_°πok_œ°
)

	)

552 
	#_REENT_MBLEN_STATE
(
±r
Ë(’å)->
_misc
->
_mbÀn_°©e
)

	)

553 
	#_REENT_MBTOWC_STATE
(
±r
)(’å)->
_misc
->
_mbtowc_°©e
)

	)

554 
	#_REENT_WCTOMB_STATE
(
±r
)(’å)->
_misc
->
_w˘omb_°©e
)

	)

555 
	#_REENT_MBRLEN_STATE
(
±r
Ë(’å)->
_misc
->
_mbæí_°©e
)

	)

556 
	#_REENT_MBRTOWC_STATE
(
±r
Ë(’å)->
_misc
->
_mbπowc_°©e
)

	)

557 
	#_REENT_MBSRTOWCS_STATE
(
±r
Ë(’å)->
_misc
->
_mb§towcs_°©e
)

	)

558 
	#_REENT_WCRTOMB_STATE
(
±r
Ë(’å)->
_misc
->
_w¸tomb_°©e
)

	)

559 
	#_REENT_WCSRTOMBS_STATE
(
±r
Ë(’å)->
_misc
->
_wc§tombs_°©e
)

	)

560 
	#_REENT_L64A_BUF
(
±r
Ë(’å)->
_misc
->
_l64a_buf
)

	)

561 
	#_REENT_GETDATE_ERR_P
(
±r
Ë(&(’å)->
_misc
->
_gëd©e_îr
))

	)

562 
	#_REENT_SIGNAL_BUF
(
±r
Ë(’å)->
_sig«l_buf
)

	)

566 
	s_ªít


568 
	g_î∫o
;

573 
__FILE
 *
	g_°dö
, *
	g_°dout
, *
	g_°dîr
;

575 
	g_öc
;

576 
	g_emîgícy
[
_REENT_EMERGENCY_SIZE
];

578 
	g_cuºít_ˇãg‹y
;

579 
_CONST
 *
	g_cuºít_loˇÀ
;

581 
	g__sdidöô
;

583 
_EXFNPTR
(
__˛ónup
, (
_ªít
 *));

586 
_Bigöt
 *
	g_ªsu…
;

587 
	g_ªsu…_k
;

588 
_Bigöt
 *
	g_p5s
;

589 
_Bigöt
 **
	g_‰ìli°
;

592 
	g_cvéí
;

593 *
	g_cvtbuf
;

599 
	g_unu£d_ønd
;

600 * 
	g_°πok_œ°
;

601 
	g_as˘ime_buf
[
_REENT_ASCTIME_SIZE
];

602 
__tm
 
	g_loˇ…ime_buf
;

603 
	g_gamma_signgam
;

604 
__exãnsi⁄__
 
	g_ønd_√xt
;

605 
_ønd48
 
	g_r48
;

606 
_mb°©e_t
 
	g_mbÀn_°©e
;

607 
_mb°©e_t
 
	g_mbtowc_°©e
;

608 
_mb°©e_t
 
	g_w˘omb_°©e
;

609 
	g_l64a_buf
[8];

610 
	g_sig«l_buf
[
_REENT_SIGNAL_SIZE
];

611 
	g_gëd©e_îr
;

612 
_mb°©e_t
 
	g_mbæí_°©e
;

613 
_mb°©e_t
 
	g_mbπowc_°©e
;

614 
_mb°©e_t
 
	g_mb§towcs_°©e
;

615 
_mb°©e_t
 
	g_w¸tomb_°©e
;

616 
_mb°©e_t
 
	g_wc§tombs_°©e
;

617 
	g_h_î∫o
;

618 } 
	g_ªít
;

624 
	#_N_LISTS
 30

	)

625 * 
	g_√xtf
[
_N_LISTS
];

626 
	g_nmÆloc
[
_N_LISTS
];

627 } 
	g_unu£d
;

628 } 
	g_√w
;

630 #i‚de‡
_REENT_GLOBAL_ATEXIT


632 
_©exô
 *
	g_©exô
;

633 
_©exô
 
	g_©exô0
;

637 (**(
	g_sig_func
))();

642 
_glue
 
	g__sglue
;

643 
__FILE
 
	g__sf
[3];

646 
	#_REENT_INIT
(
v¨
) \

648 &(
v¨
).
__sf
[0], \

649 &(
v¨
).
__sf
[1], \

650 &(
v¨
).
__sf
[2], \

656 
_NULL
, \

657 
_NULL
, \

659 
_NULL
, \

660 
_NULL
, \

662 
_NULL
, \

666 
_NULL
, \

672 {
_RAND48_SEED_0
, 
_RAND48_SEED_1
, 
_RAND48_SEED_2
}, \

673 {
_RAND48_MULT_0
, 
_RAND48_MULT_1
, 
_RAND48_MULT_2
}, \

674 
_RAND48_ADD
 \

689 
_REENT_INIT_ATEXIT
 \

690 
_NULL
, \

691 {
_NULL
, 0, _NULL} \

692 }

	)

694 
	#_REENT_INIT_PTR
(
v¨
) \

695 { 
	`mem£t
((
v¨
), 0, (*(var))); \

696 (
v¨
)->
_°dö
 = &(v¨)->
__sf
[0]; \

697 (
v¨
)->
_°dout
 = &(v¨)->
__sf
[1]; \

698 (
v¨
)->
_°dîr
 = &(v¨)->
__sf
[2]; \

699 (
v¨
)->
_cuºít_loˇÀ
 = "C"; \

700 (
v¨
)->
_√w
.
_ªít
.
_ønd_√xt
 = 1; \

701 (
v¨
)->
_√w
.
_ªít
.
_r48
.
_£ed
[0] = 
_RAND48_SEED_0
; \

702 (
v¨
)->
_√w
.
_ªít
.
_r48
.
_£ed
[1] = 
_RAND48_SEED_1
; \

703 (
v¨
)->
_√w
.
_ªít
.
_r48
.
_£ed
[2] = 
_RAND48_SEED_2
; \

704 (
v¨
)->
_√w
.
_ªít
.
_r48
.
_mu…
[0] = 
_RAND48_MULT_0
; \

705 (
v¨
)->
_√w
.
_ªít
.
_r48
.
_mu…
[1] = 
_RAND48_MULT_1
; \

706 (
v¨
)->
_√w
.
_ªít
.
_r48
.
_mu…
[2] = 
_RAND48_MULT_2
; \

707 (
v¨
)->
_√w
.
_ªít
.
_r48
.
_add
 = 
_RAND48_ADD
; \

708 }

	)

710 
	#_REENT_CHECK_RAND48
(
±r
Ë

	)

711 
	#_REENT_CHECK_MP
(
±r
Ë

	)

712 
	#_REENT_CHECK_TM
(
±r
Ë

	)

713 
	#_REENT_CHECK_ASCTIME_BUF
(
±r
Ë

	)

714 
	#_REENT_CHECK_EMERGENCY
(
±r
Ë

	)

715 
	#_REENT_CHECK_MISC
(
±r
Ë

	)

716 
	#_REENT_CHECK_SIGNAL_BUF
(
±r
Ë

	)

718 
	#_REENT_SIGNGAM
(
±r
Ë(’å)->
_√w
.
_ªít
.
_gamma_signgam
)

	)

719 
	#_REENT_RAND_NEXT
(
±r
Ë(’å)->
_√w
.
_ªít
.
_ønd_√xt
)

	)

720 
	#_REENT_RAND48_SEED
(
±r
Ë(’å)->
_√w
.
_ªít
.
_r48
.
_£ed
)

	)

721 
	#_REENT_RAND48_MULT
(
±r
Ë(’å)->
_√w
.
_ªít
.
_r48
.
_mu…
)

	)

722 
	#_REENT_RAND48_ADD
(
±r
Ë(’å)->
_√w
.
_ªít
.
_r48
.
_add
)

	)

723 
	#_REENT_MP_RESULT
(
±r
Ë(’å)->
_ªsu…
)

	)

724 
	#_REENT_MP_RESULT_K
(
±r
Ë(’å)->
_ªsu…_k
)

	)

725 
	#_REENT_MP_P5S
(
±r
Ë(’å)->
_p5s
)

	)

726 
	#_REENT_MP_FREELIST
(
±r
Ë(’å)->
_‰ìli°
)

	)

727 
	#_REENT_ASCTIME_BUF
(
±r
Ë(’å)->
_√w
.
_ªít
.
_as˘ime_buf
)

	)

728 
	#_REENT_TM
(
±r
Ë(&’å)->
_√w
.
_ªít
.
_loˇ…ime_buf
)

	)

729 
	#_REENT_EMERGENCY
(
±r
Ë(’å)->
_emîgícy
)

	)

730 
	#_REENT_STRTOK_LAST
(
±r
Ë(’å)->
_√w
.
_ªít
.
_°πok_œ°
)

	)

731 
	#_REENT_MBLEN_STATE
(
±r
Ë(’å)->
_√w
.
_ªít
.
_mbÀn_°©e
)

	)

732 
	#_REENT_MBTOWC_STATE
(
±r
)(’å)->
_√w
.
_ªít
.
_mbtowc_°©e
)

	)

733 
	#_REENT_WCTOMB_STATE
(
±r
)(’å)->
_√w
.
_ªít
.
_w˘omb_°©e
)

	)

734 
	#_REENT_MBRLEN_STATE
(
±r
)(’å)->
_√w
.
_ªít
.
_mbæí_°©e
)

	)

735 
	#_REENT_MBRTOWC_STATE
(
±r
)(’å)->
_√w
.
_ªít
.
_mbπowc_°©e
)

	)

736 
	#_REENT_MBSRTOWCS_STATE
(
±r
)(’å)->
_√w
.
_ªít
.
_mb§towcs_°©e
)

	)

737 
	#_REENT_WCRTOMB_STATE
(
±r
)(’å)->
_√w
.
_ªít
.
_w¸tomb_°©e
)

	)

738 
	#_REENT_WCSRTOMBS_STATE
(
±r
)(’å)->
_√w
.
_ªít
.
_wc§tombs_°©e
)

	)

739 
	#_REENT_L64A_BUF
(
±r
Ë(’å)->
_√w
.
_ªít
.
_l64a_buf
)

	)

740 
	#_REENT_SIGNAL_BUF
(
±r
Ë(’å)->
_√w
.
_ªít
.
_sig«l_buf
)

	)

741 
	#_REENT_GETDATE_ERR_P
(
±r
Ë(&(’å)->
_√w
.
_ªít
.
_gëd©e_îr
))

	)

748 
	#_Kmax
 ( (
size_t
Ë<< 3)

	)

755 #i‚de‡
__ATTRIBUTE_IMPURE_PTR__


756 
	#__ATTRIBUTE_IMPURE_PTR__


	)

759 
_ªít
 *
_impuª_±r
 
__ATTRIBUTE_IMPURE_PTR__
;

760 
_ªít
 *
_CONST
 
_globÆ_impuª_±r
 
__ATTRIBUTE_IMPURE_PTR__
;

762 
_ª˛aim_ªít
 
_PARAMS
 ((
_ªít
 *));

766 #i‡
deföed
(
__DYNAMIC_REENT__
Ë&& !deföed(
__SINGLE_THREAD__
)

767 #i‚de‡
__gëªít


768 
_ªít
 * 
_EXFUN
(
__gëªít
, ());

770 
	#_REENT
 (
	`__gëªít
())

	)

772 
	#_REENT
 
_impuª_±r


	)

775 
	#_GLOBAL_REENT
 
_globÆ_impuª_±r


	)

777 #ifde‡
_REENT_GLOBAL_ATEXIT


778 
_©exô
 *
_globÆ_©exô
;

779 
	#_GLOBAL_ATEXIT
 
_globÆ_©exô


	)

781 
	#_GLOBAL_ATEXIT
 (
_GLOBAL_REENT
->
_©exô
)

	)

784 #ifde‡
__˝lu•lus


	@/usr/include/sys/signal.h

3 #i‚de‡
_SYS_SIGNAL_H


4 
	#_SYS_SIGNAL_H


	)

5 #ifde‡
__˝lu•lus


9 
	~"_™si.h
"

10 
	~<sys/„©uªs.h
>

11 
	~<sys/ty≥s.h
>

16 #i‚de‡
__CYGWIN__


17 
	tsig£t_t
;

20 #i‡
deföed
(
__πems__
)

22 #i‡
deföed
(
_POSIX_REALTIME_SIGNALS
)

27 
	#SIGEV_NONE
 1

	)

29 
	#SIGEV_SIGNAL
 2

	)

32 
	#SIGEV_THREAD
 3

	)

39 
	usigvÆ
 {

40 
sivÆ_öt
;

41 *
sivÆ_±r
;

44 
	ssigevít
 {

45 
sigev_nŸify
;

46 
sigev_signo
;

47 
sigvÆ
 
sigev_vÆue
;

49 #i‡
deföed
(
_POSIX_THREADS
)

50 (*
sigev_nŸify_fun˘i⁄
)–
sigvÆ
 );

52 
±hªad_©å_t
 *
sigev_nŸify_©åibuãs
;

59 
	#SI_USER
 1

	)

60 
	#SI_QUEUE
 2

	)

61 
	#SI_TIMER
 3

	)

62 
	#SI_ASYNCIO
 4

	)

63 
	#SI_MESGQ
 5

	)

66 
si_signo
;

67 
si_code
;

68 
sigvÆ
 
si_vÆue
;

69 } 
	tsigöfo_t
;

74 
	#SA_NOCLDSTOP
 1

	)

75 
	#SA_SIGINFO
 2

	)

87 (*
_sig_func_±r
)();

89 
	ssiga˘i⁄
 {

90 
ß_Êags
;

91 
sig£t_t
 
ß_mask
;

95 
_sig_func_±r
 
_h™dÀr
;

96 #i‡
deföed
(
_POSIX_REALTIME_SIGNALS
)

97 (*
_siga˘i⁄
)–, 
sigöfo_t
 *, * );

99 } 
_sig«l_h™dÀrs
;

102 
	#ß_h™dÀr
 
_sig«l_h™dÀrs
.
_h™dÀr


	)

103 #i‡
deföed
(
_POSIX_REALTIME_SIGNALS
)

104 
	#ß_siga˘i⁄
 
_sig«l_h™dÀrs
.
_siga˘i⁄


	)

107 #ñi‡
deföed
(
__CYGWIN__
)

108 
	~<cygwö/sig«l.h
>

110 
	#SA_NOCLDSTOP
 1

	)

112 (*
_sig_func_±r
)();

114 
	ssiga˘i⁄


116 
_sig_func_±r
 
ß_h™dÀr
;

117 
sig£t_t
 
ß_mask
;

118 
ß_Êags
;

122 
	#SIG_SETMASK
 0

	)

123 
	#SIG_BLOCK
 1

	)

124 
	#SIG_UNBLOCK
 2

	)

129 
	#sigadd£t
(
wh©
,
sig
Ë(*(wh©Ë|(1<<(sig)), 0)

	)

130 
	#sigdñ£t
(
wh©
,
sig
Ë(*(wh©Ë&~(1<<(sig)), 0)

	)

131 
	#sigem±y£t
(
wh©
Ë(*(wh©Ë0, 0)

	)

132 
	#sigfûl£t
(
wh©
Ë(*(wh©Ë~(0), 0)

	)

133 
	#sigismembî
(
wh©
,
sig
Ë(((*(wh©)Ë& (1<<(sig))Ë!0)

	)

135 
_EXFUN
(
sig¥ocmask
, (
how
, c⁄° 
sig£t_t
 *
£t
, sig£t_à*
o£t
));

137 #i‡
deföed
(
_POSIX_THREADS
)

138 
_EXFUN
(
±hªad_sigmask
, (
how
, c⁄° 
sig£t_t
 *
£t
, sig£t_à*
o£t
));

142 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
__πems__
)

143 #unde‡
sigadd£t


144 #unde‡
sigdñ£t


145 #unde‡
sigem±y£t


146 #unde‡
sigfûl£t


147 #unde‡
sigismembî


149 #ifde‡
_COMPILING_NEWLIB


150 
_EXFUN
(
_kûl
, (
pid_t
, ));

152 
_EXFUN
(
kûl
, (
pid_t
, ));

153 
_EXFUN
(
kûÕg
, (
pid_t
, ));

154 
_EXFUN
(
siga˘i⁄
, (, const sigaction *, sigaction *));

155 
_EXFUN
(
sigadd£t
, (
sig£t_t
 *, const ));

156 
_EXFUN
(
sigdñ£t
, (
sig£t_t
 *, const ));

157 
_EXFUN
(
sigismembî
, (c⁄° 
sig£t_t
 *, ));

158 
_EXFUN
(
sigfûl£t
, (
sig£t_t
 *));

159 
_EXFUN
(
sigem±y£t
, (
sig£t_t
 *));

160 
_EXFUN
(
sig≥ndög
, (
sig£t_t
 *));

161 
_EXFUN
(
sigsu•íd
, (c⁄° 
sig£t_t
 *));

162 
_EXFUN
(
sig∑u£
, ());

164 #i‡
deföed
(
_POSIX_THREADS
)

165 #ifde‡
__CYGWIN__


166 #i‚de‡
_CYGWIN_TYPES_H


167 #îr‹ 
You
 
√ed
 
the
 
wösup
 
sour˚s
 
‹
 
a
 
cygwö
 
ö°Æœti⁄
 
to
 
compûe
Åhêcygwö 
vîsi⁄
 
of
 
√wlib
.

170 
_EXFUN
(
±hªad_kûl
, (
±hªad_t
 
thªad
, 
sig
));

173 #i‡
deföed
(
_POSIX_REALTIME_SIGNALS
)

178 
_EXFUN
(
sigwaôöfo
, (c⁄° 
sig£t_t
 *
£t
, 
sigöfo_t
 *
öfo
));

179 
_EXFUN
(
sigtimedwaô
,

180 (c⁄° 
sig£t_t
 *
£t
, 
sigöfo_t
 *
öfo
, c⁄° 
time•ec
 *
timeout
)

182 
_EXFUN
(
sigwaô
, (c⁄° 
sig£t_t
 *
£t
, *
sig
));

185 
_EXFUN
(
sigqueue
, (
pid_t
 
pid
, 
signo
, c⁄° 
sigvÆ
 
vÆue
));

193 #i‡
deföed
(
___AM29K__
)

196 
	#SIGABRT
 1

	)

197 
	#SIGFPE
 1

	)

198 
	#SIGILL
 1

	)

199 
	#SIGINT
 1

	)

200 
	#SIGSEGV
 1

	)

201 
	#SIGTERM
 1

	)

203 
	#SIGHUP
 1

	)

204 
	#SIGQUIT
 1

	)

205 
	#NSIG
 2

	)

206 #ñi‡
deföed
(
__GO32__
)

207 
	#SIGINT
 1

	)

208 
	#SIGKILL
 2

	)

209 
	#SIGPIPE
 3

	)

210 
	#SIGFPE
 4

	)

211 
	#SIGHUP
 5

	)

212 
	#SIGTERM
 6

	)

213 
	#SIGSEGV
 7

	)

214 
	#SIGTSTP
 8

	)

215 
	#SIGQUIT
 9

	)

216 
	#SIGTRAP
 10

	)

217 
	#SIGILL
 11

	)

218 
	#SIGEMT
 12

	)

219 
	#SIGALRM
 13

	)

220 
	#SIGBUS
 14

	)

221 
	#SIGLOST
 15

	)

222 
	#SIGSTOP
 16

	)

223 
	#SIGABRT
 17

	)

224 
	#SIGUSR1
 18

	)

225 
	#SIGUSR2
 19

	)

226 
	#NSIG
 20

	)

227 #ñi‡!
deföed
(
SIGTRAP
)

228 
	#SIGHUP
 1

	)

229 
	#SIGINT
 2

	)

230 
	#SIGQUIT
 3

	)

231 
	#SIGILL
 4

	)

232 
	#SIGTRAP
 5

	)

233 
	#SIGIOT
 6

	)

234 
	#SIGABRT
 6

	)

235 
	#SIGEMT
 7

	)

236 
	#SIGFPE
 8

	)

237 
	#SIGKILL
 9

	)

238 
	#SIGBUS
 10

	)

239 
	#SIGSEGV
 11

	)

240 
	#SIGSYS
 12

	)

241 
	#SIGPIPE
 13

	)

242 
	#SIGALRM
 14

	)

243 
	#SIGTERM
 15

	)

245 #i‡
deföed
(
__πems__
)

246 
	#SIGURG
 16

	)

247 
	#SIGSTOP
 17

	)

248 
	#SIGTSTP
 18

	)

249 
	#SIGCONT
 19

	)

250 
	#SIGCHLD
 20

	)

251 
	#SIGCLD
 20

	)

252 
	#SIGTTIN
 21

	)

253 
	#SIGTTOU
 22

	)

254 
	#SIGIO
 23

	)

255 
	#SIGPOLL
 
SIGIO


	)

256 
	#SIGWINCH
 24

	)

257 
	#SIGUSR1
 25

	)

258 
	#SIGUSR2
 26

	)

264 
	#SIGRTMIN
 27

	)

265 
	#SIGRTMAX
 31

	)

266 
	#__SIGFIRSTNOTRT
 
SIGHUP


	)

267 
	#__SIGLASTNOTRT
 
SIGUSR2


	)

269 
	#NSIG
 32

	)

271 #ñi‡
deföed
(
__svr4__
)

273 
	#SIGUSR1
 16

	)

274 
	#SIGUSR2
 17

	)

275 
	#SIGCLD
 18

	)

276 
	#SIGPWR
 19

	)

277 
	#SIGWINCH
 20

	)

278 
	#SIGPOLL
 22

	)

279 
	#SIGSTOP
 23

	)

280 
	#SIGTSTP
 24

	)

281 
	#SIGCONT
 25

	)

282 
	#SIGTTIN
 26

	)

283 
	#SIGTTOU
 27

	)

284 
	#NSIG
 28

	)

286 
	#SIGURG
 16

	)

287 
	#SIGSTOP
 17

	)

288 
	#SIGTSTP
 18

	)

289 
	#SIGCONT
 19

	)

290 
	#SIGCHLD
 20

	)

291 
	#SIGCLD
 20

	)

292 
	#SIGTTIN
 21

	)

293 
	#SIGTTOU
 22

	)

294 
	#SIGIO
 23

	)

295 
	#SIGPOLL
 
SIGIO


	)

296 
	#SIGXCPU
 24

	)

297 
	#SIGXFSZ
 25

	)

298 
	#SIGVTALRM
 26

	)

299 
	#SIGPROF
 27

	)

300 
	#SIGWINCH
 28

	)

301 
	#SIGLOST
 29

	)

302 
	#SIGUSR1
 30

	)

303 
	#SIGUSR2
 31

	)

304 
	#NSIG
 32

	)

308 #ifde‡
__˝lu•lus


312 #i‚de‡
_SIGNAL_H_


315 
	~<sig«l.h
>

	@/usr/include/sys/stdio.h

11 #i‚de‡
_SYS_STDIO_H_


12 
	#_SYS_STDIO_H_


	)

14 
	~<sys/cdefs.h
>

15 
	~<sys/lock.h
>

20 #i‡!
deföed
(
__SINGLE_THREAD__
)

21 #i‡!
deföed
(
_Êockfûe
)

22 
	#_Êockfûe
(
Â
Ë({ i‡(!((Â)->
_Êags
 & 
__SSTR
)) \

23 
	`__cygwö_lock_lock
 ((
_LOCK_T
 *)&(
Â
)->
_lock
); })

	)

25 #i‡!
deföed
(
_·rylockfûe
)

26 
	#_·rylockfûe
(
Â
Ë(((Â)->
_Êags
 & 
__SSTR
) ? 0 : \

27 
	`__cygwö_lock_åylock
 ((
_LOCK_T
 *)&(
Â
)->
_lock
))

	)

29 #i‡!
deföed
(
_fu∆ockfûe
)

30 
	#_fu∆ockfûe
(
Â
Ë({ i‡(!((Â)->
_Êags
 & 
__SSTR
)) \

31 
	`__cygwö_lock_u∆ock
 ((
_LOCK_T
 *)&(
Â
)->
_lock
); })

	)

35 
__BEGIN_DECLS


37 
ssize_t
 
_EXFUN
(
gëlöe
, (**, 
size_t
 *, 
FILE
 *));

38 
ssize_t
 
_EXFUN
(
gëdñim
, (**, 
size_t
 *, , 
FILE
 *));

40 
	g__END_DECLS


	@/usr/include/sys/string.h

	@/usr/include/sys/types.h

18 #i‚de‡
_SYS_TYPES_H


20 
	~<_™si.h
>

22 #i‚de‡
__INTTYPES_DEFINED__


23 
	#__INTTYPES_DEFINED__


	)

25 
	~<machöe/_ty≥s.h
>

27 #i‡
deföed
(
__πems__
Ë|| deföed(
__XMK__
)

35 #i‡
___öt8_t_deföed


36 
__uöt8_t
 
	tu_öt8_t
;

38 #i‡
___öt16_t_deföed


39 
__uöt16_t
 
	tu_öt16_t
;

41 #i‡
___öt32_t_deföed


42 
__uöt32_t
 
	tu_öt32_t
;

45 #i‡
___öt64_t_deföed


46 
__uöt64_t
 
	tu_öt64_t
;

49 
__uöt64_t
 
	tu_quad_t
;

50 
__öt64_t
 
	tquad_t
;

51 
quad_t
 * 
	tqaddr_t
;

58 #i‚de‡
__√ed_öây≥s


60 
	#_SYS_TYPES_H


	)

61 
	~<sys/_ty≥s.h
>

63 #ifde‡
__i386__


64 #i‡
deföed
 (
GO32
Ë|| deföed (
__MSDOS__
)

65 
	#__MS_ty≥s__


	)

69 
	~<°ddef.h
>

70 
	~<machöe/ty≥s.h
>

79 #ifde‡
__GNUC__


80 
	#_ST_INT32
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
)))

	)

82 
	#_ST_INT32


	)

85 #i‚def 
_POSIX_SOURCE


87 
	#phyßdr
 
phyßdr_t


	)

88 
	#quad
 
quad_t


	)

90 #i‚de‡
_BSDTYPES_DEFINED


92 #i‚de‡
__u_ch¨_deföed


93 
	tu_ch¨
;

94 
	#__u_ch¨_deföed


	)

96 #i‚de‡
__u_sh‹t_deföed


97 
	tu_sh‹t
;

98 
	#__u_sh‹t_deföed


	)

100 #i‚de‡
__u_öt_deföed


101 
	tu_öt
;

102 
	#__u_öt_deföed


	)

104 #i‚de‡
__u_l⁄g_deföed


105 
	tu_l⁄g
;

106 
	#__u_l⁄g_deföed


	)

108 
	#_BSDTYPES_DEFINED


	)

111 
	tush‹t
;

112 
	tuöt
;

113 
	tul⁄g
;

116 #i‚de‡
__˛ock_t_deföed


117 
_CLOCK_T_
 
	t˛ock_t
;

118 
	#__˛ock_t_deföed


	)

121 #i‚de‡
__time_t_deföed


122 
_TIME_T_
 
	ttime_t
;

123 
	#__time_t_deföed


	)

126 #i‚de‡
__time•ec_deföed


127 
	#__time•ec_deföed


	)

130 
	stime•ec
 {

131 
time_t
 
	mtv_£c
;

132 
	mtv_n£c
;

136 
	sôimî•ec
 {

137 
time•ec
 
	mô_öãrvÆ
;

138 
time•ec
 
	mô_vÆue
;

141 #i‚de‡
__daddr_t_deföed


142 
	tdaddr_t
;

143 
	#__daddr_t_deföed


	)

145 #i‚de‡
__ˇddr_t_deföed


146 * 
	tˇddr_t
;

147 
	#__ˇddr_t_deföed


	)

150 #i‚de‡
__CYGWIN__


151 #i‡
deföed
(
__MS_ty≥s__
Ë|| deföed(
__πems__
) || \

152 
deföed
(
__•¨c__
Ë|| 
	$deföed
(
__SPU__
)

153 
	töo_t
;

155 
	töo_t
;

159 #ifde‡
__MS_ty≥s__


160 
	tvm_off£t_t
;

161 
	tvm_size_t
;

163 
	#__BIT_TYPES_DEFINED__


	)

165 sig√d 
	töt8_t
;

166 
	tu_öt8_t
;

167 
	töt16_t
;

168 
	tu_öt16_t
;

169 
	töt32_t
;

170 
	tu_öt32_t
;

171 
	töt64_t
;

172 
	tu_öt64_t
;

173 
öt32_t
 
	tªgi°î_t
;

183 #i‚de‡
__CYGWIN__


184 
_off_t
 
	toff_t
;

185 
__dev_t
 
	tdev_t
;

186 
__uid_t
 
	tuid_t
;

187 
__gid_t
 
	tgid_t
;

190 #i‡
	`deföed
(
__XMK__
)

191 sig√d 
	tpid_t
;

193 
	tpid_t
;

196 #i‡
	`deföed
(
__πems__
)

197 
_mode_t
 
	tmode_t
;

200 #i‚de‡
__CYGWIN__


201 
	tkey_t
;

203 
_ssize_t
 
	tssize_t
;

205 #i‡!
	`deföed
(
__CYGWIN__
Ë&& !deföed(
__πems__
)

206 #ifde‡
__MS_ty≥s__


207 * 
	taddr_t
;

208 
	tmode_t
;

210 #i‡
	`deföed
 (
__•¨c__
Ë&& !deföed (
__•¨c_v9__
)

211 #ifde‡
__svr4__


212 
	tmode_t
;

214 
	tmode_t
;

217 
	tmode_t
 
	t_ST_INT32
;

222 
	t∆ök_t
;

231 #i‡!(
	`deföed
 (
_POSIX_SOURCE
Ë|| deföed (
_WINSOCK_H
Ë|| deföed (
_WINSOCKAPI_
Ë|| deföed (
__USE_W32_SOCKETS
))

232 
	#_SYS_TYPES_FD_SET


	)

233 
	#NBBY
 8

	)

240 #i‚def 
FD_SETSIZE


241 
	#FD_SETSIZE
 64

	)

244 
	tfd_mask
;

245 
	#NFDBITS
 ( (
fd_mask
Ë* 
NBBY
Ë

	)

246 #i‚def 
howm™y


247 
	#howm™y
(
x
,
y
Ë(((x)+((y)-1))/(y))

	)

252 
	s_ty≥s_fd_£t
 {

253 
fd_mask
 
fds_bôs
[
	`howm™y
(
FD_SETSIZE
, 
NFDBITS
)];

254 } 
	t_ty≥s_fd_£t
;

256 
	#fd_£t
 
_ty≥s_fd_£t


	)

258 
	#FD_SET
(
n
, 
p
Ë(’)->
fds_bôs
[“)/
NFDBITS
] |(1L << (“Ë% NFDBITS)))

	)

259 
	#FD_CLR
(
n
, 
p
Ë(’)->
fds_bôs
[“)/
NFDBITS
] &~(1L << (“Ë% NFDBITS)))

	)

260 
	#FD_ISSET
(
n
, 
p
Ë(’)->
fds_bôs
[“)/
NFDBITS
] & (1L << (“Ë% NFDBITS)))

	)

261 
	#FD_ZERO
(
p
Ë(
	`__exãnsi⁄__
 ()({ \

262 
size_t
 
__i
; \

263 *
__tmp
 = (*)
p
; \

264 
__i
 = 0; __ò<  (*(
p
)); ++__i) \

265 *
__tmp
++ = 0; \

266 
	}
}))

	)

270 #unde‡
__MS_ty≥s__


271 #unde‡
_ST_INT32


274 #i‚de‡
__˛ockid_t_deföed


275 
_CLOCKID_T_
 
	t˛ockid_t
;

276 
	#__˛ockid_t_deföed


	)

279 #i‚de‡
__timî_t_deföed


280 
_TIMER_T_
 
	ttimî_t
;

281 
	#__timî_t_deföed


	)

284 
	tu£c⁄ds_t
;

285 
	tsu£c⁄ds_t
;

287 
	~<sys/„©uªs.h
>

297 #i‡
deföed
(
_POSIX_THREADS
Ë&& !deföed(
__CYGWIN__
)

299 
	~<sys/sched.h
>

305 #i‡
deföed
(
__XMK__
)

306 
	t±hªad_t
;

308 
__uöt32_t
 
	t±hªad_t
;

312 
	#PTHREAD_SCOPE_PROCESS
 0

	)

313 
	#PTHREAD_SCOPE_SYSTEM
 1

	)

316 
	#PTHREAD_INHERIT_SCHED
 1

	)

319 
	#PTHREAD_EXPLICIT_SCHED
 2

	)

322 
	#PTHREAD_CREATE_DETACHED
 0

	)

323 
	#PTHREAD_CREATE_JOINABLE
 1

	)

325 #i‡
deföed
(
__XMK__
)

326 
	s±hªad_©å_s
 {

327 
	mc⁄ã¡i⁄sc›e
;

328 
sched_∑øm
 
	msched∑øm
;

329 
	mdëach°©e
;

330 *
	m°ackaddr
;

331 
size_t
 
	m°acksize
;

332 } 
	t±hªad_©å_t
;

334 
	#PTHREAD_STACK_MIN
 200

	)

338 
	mis_öôülized
;

339 *
	m°ackaddr
;

340 
	m°acksize
;

341 
	mc⁄ã¡i⁄sc›e
;

342 
	möhîôsched
;

343 
	mschedpﬁicy
;

344 
sched_∑øm
 
	msched∑øm
;

345 #i‡
deföed
(
__πems__
)

346 
size_t
 
	mgu¨dsize
;

350 #i‡
deföed
(
_POSIX_THREAD_CPUTIME
)

351 
	m˝utime_˛ock_Ælowed
;

353 
	mdëach°©e
;

355 } 
	t±hªad_©å_t
;

359 #i‡
deföed
(
_POSIX_THREAD_PROCESS_SHARED
)

362 
	#PTHREAD_PROCESS_PRIVATE
 0

	)

363 
	#PTHREAD_PROCESS_SHARED
 1

	)

368 #i‡
deföed
(
_POSIX_THREAD_PRIO_PROTECT
)

373 
	#PTHREAD_PRIO_NONE
 0

	)

374 
	#PTHREAD_PRIO_INHERIT
 1

	)

375 
	#PTHREAD_PRIO_PROTECT
 2

	)

378 #i‡
deföed
(
_UNIX98_THREAD_MUTEX_ATTRIBUTES
)

391 
	#PTHREAD_MUTEX_NORMAL
 0

	)

403 
	#PTHREAD_MUTEX_RECURSIVE
 1

	)

412 
	#PTHREAD_MUTEX_ERRORCHECK
 2

	)

422 
	#PTHREAD_MUTEX_DEFAULT
 3

	)

426 #i‡
deföed
(
__XMK__
)

427 
	t±hªad_muãx_t
;

430 
	mty≥
;

431 } 
	t±hªad_muãx©å_t
;

434 
__uöt32_t
 
	t±hªad_muãx_t
;

437 
	mis_öôülized
;

438 #i‡
deföed
(
_POSIX_THREAD_PROCESS_SHARED
)

439 
	m¥o˚ss_sh¨ed
;

441 #i‡
deföed
(
_POSIX_THREAD_PRIO_PROTECT
)

442 
	m¥io_˚ûög
;

443 
	m¥Ÿocﬁ
;

445 #i‡
deföed
(
_UNIX98_THREAD_MUTEX_ATTRIBUTES
)

446 
	mty≥
;

448 
	mªcursive
;

449 } 
	t±hªad_muãx©å_t
;

454 
__uöt32_t
 
	t±hªad_c⁄d_t
;

457 
	mis_öôülized
;

458 #i‡
deföed
(
_POSIX_THREAD_PROCESS_SHARED
)

459 
	m¥o˚ss_sh¨ed
;

461 } 
	t±hªad_c⁄d©å_t
;

465 
__uöt32_t
 
	t±hªad_key_t
;

468 
	mis_öôülized
;

469 
	möô_execuãd
;

470 } 
	t±hªad_⁄˚_t
;

472 #i‡
deföed
 (
__CYGWIN__
)

473 
	~<cygwö/ty≥s.h
>

479 #i‡
deföed
(
_POSIX_BARRIERS
)

480 
__uöt32_t
 
	t±hªad_b¨rõr_t
;

482 
	mis_öôülized
;

483 #i‡
deföed
(
_POSIX_THREAD_PROCESS_SHARED
)

484 
	m¥o˚ss_sh¨ed
;

486 } 
	t±hªad_b¨rõøâr_t
;

491 #i‡!
deföed
 (
__CYGWIN__
)

492 #i‡
deföed
(
_POSIX_SPIN_LOCKS
)

493 
__uöt32_t
 
	t±hªad_•ölock_t
;

498 #i‡
deföed
(
_POSIX_READER_WRITER_LOCKS
)

499 
__uöt32_t
 
	t±hªad_rwlock_t
;

501 
	mis_öôülized
;

502 #i‡
deföed
(
_POSIX_THREAD_PROCESS_SHARED
)

503 
	m¥o˚ss_sh¨ed
;

505 } 
	t±hªad_rwlock©å_t
;

511 #unde‡
__√ed_öây≥s


	@/usr/include/time.h

7 #i‚de‡
_TIME_H_


8 
	#_TIME_H_


	)

10 
	~"_™si.h
"

11 
	~<sys/ªít.h
>

13 
	#__√ed_size_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

18 
	~<machöe/time.h
>

20 #i‚de‡
_CLOCKS_PER_SEC_


21 
	#_CLOCKS_PER_SEC_
 1000

	)

24 
	#CLOCKS_PER_SEC
 
_CLOCKS_PER_SEC_


	)

25 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

27 
	~<sys/ty≥s.h
>

29 
_BEGIN_STD_C


31 
	stm


33 
	mtm_£c
;

34 
	mtm_mö
;

35 
	mtm_hour
;

36 
	mtm_mday
;

37 
	mtm_m⁄
;

38 
	mtm_yór
;

39 
	mtm_wday
;

40 
	mtm_yday
;

41 
	mtm_isd°
;

44 
˛ock_t
 
_EXFUN
(
˛ock
, ());

45 
_EXFUN
(
dif·ime
, (
time_t
 
_time2
,Åime_à
_time1
));

46 
time_t
 
_EXFUN
(
mktime
, (
tm
 *
_timïå
));

47 
time_t
 
_EXFUN
(
time
, (time_à*
_timî
));

48 #i‚de‡
_REENT_ONLY


49 *
_EXFUN
(
as˘ime
, (c⁄° 
tm
 *
_tblock
));

50 *
_EXFUN
(
˘ime
, (c⁄° 
time_t
 *
_time
));

51 
tm
 *
_EXFUN
(
gmtime
, (c⁄° 
time_t
 *
_timî
));

52 
tm
 *
_EXFUN
(
loˇ…ime
,(c⁄° 
time_t
 *
_timî
));

54 
size_t
 
_EXFUN
(
°r·ime
, (*
_s
, size_à
_maxsize
, c⁄° *
_fmt
, c⁄° 
tm
 *
_t
));

56 *
_EXFUN
(
as˘ime_r
, (c⁄° 
tm
 *, *));

57 *
_EXFUN
(
˘ime_r
, (c⁄° 
time_t
 *, *));

58 
tm
 *
_EXFUN
(
gmtime_r
, (c⁄° 
time_t
 *, tm *));

59 
tm
 *
_EXFUN
(
loˇ…ime_r
, (c⁄° 
time_t
 *, tm *));

61 
	g_END_STD_C


63 #ifde‡
__˝lu•lus


67 #i‚de‡
__STRICT_ANSI__


68 *
_EXFUN
(
°Ωtime
, (c⁄° *, c⁄° *, 
tm
 *));

69 
_VOID
 
_EXFUN
(
tz£t
, (_VOID));

70 
_VOID
 
_EXFUN
(
_tz£t_r
, (
_ªít
 *));

72 
	s__tzruÀ_°ru˘


74 
	mch
;

75 
	mm
;

76 
	mn
;

77 
	md
;

78 
	ms
;

79 
time_t
 
	mch™ge
;

80 
	moff£t
;

81 } 
	t__tzruÀ_ty≥
;

83 
	s__tzöfo_°ru˘


85 
	m__tzn‹th
;

86 
	m__tzyór
;

87 
__tzruÀ_ty≥
 
	m__tzruÀ
[2];

88 } 
	t__tzöfo_ty≥
;

90 
__tzöfo_ty≥
 *
_EXFUN
 (
__gëtzöfo
, (
_VOID
));

94 #ifde‡
HAVE_GETDATE


95 #i‚de‡
_REENT_ONLY


96 
	#gëd©e_îr
 (*
	`__gëd©e_îr
())

	)

97 *
_EXFUN
(
__gëd©e_îr
,(
_VOID
));

99 
tm
 * 
_EXFUN
(
gëd©e
, (const *));

112 
_EXFUN
(
gëd©e_r
, (c⁄° *, 
tm
 *));

116 
__IMPORT
 
_timez⁄e
;

117 
__IMPORT
 
_daylight
;

118 
__IMPORT
 *
_tz«me
[2];

121 #i‚de‡
tz«me


122 
	#tz«me
 
_tz«me


	)

126 #ifde‡
__˝lu•lus


130 
	~<sys/„©uªs.h
>

132 #ifde‡
__CYGWIN__


133 
	~<cygwö/time.h
>

136 #i‡
deföed
(
_POSIX_TIMERS
)

138 
	~<sig«l.h
>

140 #ifde‡
__˝lu•lus


146 
_EXFUN
(
˛ock_£âime
, (
˛ockid_t
 
˛ock_id
, c⁄° 
time•ec
 *
ç
));

147 
_EXFUN
(
˛ock_gëtime
, (
˛ockid_t
 
˛ock_id
, 
time•ec
 *
ç
));

148 
_EXFUN
(
˛ock_gëªs
, (
˛ockid_t
 
˛ock_id
, 
time•ec
 *
ªs
));

152 
_EXFUN
(
timî_¸óã
,

153 (
˛ockid_t
 
˛ock_id
, 
sigevít
 *
evp
, 
timî_t
 *
timîid
));

157 
_EXFUN
(
timî_dñëe
, (
timî_t
 
timîid
));

161 
_EXFUN
(
timî_£âime
,

162 (
timî_t
 
timîid
, 
Êags
, c⁄° 
ôimî•ec
 *
vÆue
,

163 
ôimî•ec
 *
ovÆue
));

164 
_EXFUN
(
timî_gëtime
, (
timî_t
 
timîid
, 
ôimî•ec
 *
vÆue
));

165 
_EXFUN
(
timî_gëovîrun
, (
timî_t
 
timîid
));

169 
_EXFUN
(
«no¶ìp
, (c⁄° 
time•ec
 *
rqç
, time•e¯*
rmç
));

171 #ifde‡
__˝lu•lus


176 #i‡
deföed
(
_POSIX_CLOCK_SELECTION
)

178 #ifde‡
__˝lu•lus


182 
_EXFUN
(
˛ock_«no¶ìp
,

183 (
˛ockid_t
 
˛ock_id
, 
Êags
, c⁄° 
time•ec
 *
rqç
,

184 
time•ec
 *
rmç
));

186 #ifde‡
__˝lu•lus


192 #ifde‡
__˝lu•lus


200 
	#CLOCK_ENABLED
 1

	)

201 
	#CLOCK_DISABLED
 0

	)

205 
	#CLOCK_ALLOWED
 1

	)

208 
	#CLOCK_DISALLOWED
 0

	)

214 
	#CLOCK_REALTIME
 (
˛ockid_t
)1

	)

219 
	#TIMER_ABSTIME
 4

	)

223 #i‡
deföed
(
_POSIX_CPUTIME
)

229 
	#CLOCK_PROCESS_CPUTIME_ID
 (
˛ockid_t
)2

	)

233 #i‡
deföed
(
_POSIX_THREAD_CPUTIME
)

239 
	#CLOCK_THREAD_CPUTIME_ID
 (
˛ockid_t
)3

	)

243 #i‡
deföed
(
_POSIX_MONOTONIC_CLOCK
)

249 
	#CLOCK_MONOTONIC
 (
˛ockid_t
)4

	)

253 #i‡
deföed
(
_POSIX_CPUTIME
)

257 
_EXFUN
(
˛ock_gë˝u˛ockid
, (
pid_t
 
pid
, 
˛ockid_t
 *
˛ock_id
));

261 #i‡
deföed
(
_POSIX_CPUTIME
Ë|| deföed(
_POSIX_THREAD_CPUTIME
)

265 
_EXFUN
(
˛ock_£ã«bÀ_©å
, (
˛ockid_t
 
˛ock_id
, 
©å
));

266 
_EXFUN
(
˛ock_gëíabÀ_©å
, (
˛ockid_t
 
˛ock_id
, *
©å
));

270 #ifde‡
__˝lu•lus


	@/usr/include/assert.h

5 #ifde‡
__˝lu•lus


9 
	~"_™si.h
"

11 #unde‡
as£π


13 #ifde‡
NDEBUG


14 
	#as£π
(
__e
Ë(()0)

	)

16 
	#as£π
(
__e
Ë((__eË? ()0 : 
	`__as£π_func
 (
__FILE__
, 
__LINE__
, \

17 
__ASSERT_FUNC
, #__e))

	)

19 #i‚de‡
__ASSERT_FUNC


21 #i‡
deföed
 
__˝lu•lus
 && deföed 
__GNUC__


22 
	#__ASSERT_FUNC
 
__PRETTY_FUNCTION__


	)

25 #ñi‡
__STDC_VERSION__
 >= 199901L

26 
	#__ASSERT_FUNC
 
__func__


	)

29 #ñi‡
__GNUC__
 >= 2

30 
	#__ASSERT_FUNC
 
__FUNCTION__


	)

34 
	#__ASSERT_FUNC
 ((*Ë0)

	)

39 
_EXFUN
(
__as£π
, (const *, , const *)

40 
_ATTRIBUTE
 ((
__n‹ëu∫__
)));

41 
_EXFUN
(
__as£π_func
, (const *, , const *, const *)

42 
_ATTRIBUTE
 ((
__n‹ëu∫__
)));

44 #i‡
__STDC_VERSION__
 >201112L && !
deföed
 
__˝lu•lus


45 
	#°©ic_as£π
 
_Sètic_as£π


	)

48 #ifde‡
__˝lu•lus


	@/usr/include/cygwin/signal.h

12 #i‚de‡
_CYGWIN_SIGNAL_H


13 
	#_CYGWIN_SIGNAL_H


	)

15 
	~<bôs/w‹dsize.h
>

17 #ifde‡
__˝lu•lus


21 #ifde‡
__x86_64__


23 
	s_uc_Âxªg
 {

24 
__uöt16_t
 
signifiˇnd
[4];

25 
__uöt16_t
 
exp⁄ít
;

26 
__uöt16_t
 
∑ddög
[3];

29 
	s_uc_xmmªg
 {

30 
__uöt32_t
 
	mñemít
[4];

33 
	s_Â°©e


35 
__uöt16_t
 
	mcwd
;

36 
__uöt16_t
 
	mswd
;

37 
__uöt16_t
 
	m·w
;

38 
__uöt16_t
 
	mf›
;

39 
__uöt64_t
 
	mrù
;

40 
__uöt64_t
 
	mrdp
;

41 
__uöt32_t
 
	mmxc§
;

42 
__uöt32_t
 
	mmx¸_mask
;

43 
_uc_Âxªg
 
	m°
[8];

44 
_uc_xmmªg
 
	mxmm
[16];

45 
__uöt32_t
 
	m∑ddög
[24];

48 
	suc⁄ãxt


50 
__uöt64_t
 
	mp1home
;

51 
__uöt64_t
 
	mp2home
;

52 
__uöt64_t
 
	mp3home
;

53 
__uöt64_t
 
	mp4home
;

54 
__uöt64_t
 
	mp5home
;

55 
__uöt64_t
 
	mp6home
;

56 
__uöt32_t
 
	m¸2
;

57 
__uöt32_t
 
	mmxc§
;

58 
__uöt16_t
 
	mcs
;

59 
__uöt16_t
 
	mds
;

60 
__uöt16_t
 
	mes
;

61 
__uöt16_t
 
	mfs
;

62 
__uöt16_t
 
	mgs
;

63 
__uöt16_t
 
	mss
;

64 
__uöt32_t
 
	meÊags
;

65 
__uöt64_t
 
	mdr0
;

66 
__uöt64_t
 
	mdr1
;

67 
__uöt64_t
 
	mdr2
;

68 
__uöt64_t
 
	mdr3
;

69 
__uöt64_t
 
	mdr6
;

70 
__uöt64_t
 
	mdr7
;

71 
__uöt64_t
 
	møx
;

72 
__uöt64_t
 
	mrcx
;

73 
__uöt64_t
 
	mrdx
;

74 
__uöt64_t
 
	mrbx
;

75 
__uöt64_t
 
	mr•
;

76 
__uöt64_t
 
	mrbp
;

77 
__uöt64_t
 
	mrsi
;

78 
__uöt64_t
 
	mrdi
;

79 
__uöt64_t
 
	mr8
;

80 
__uöt64_t
 
	mr9
;

81 
__uöt64_t
 
	mr10
;

82 
__uöt64_t
 
	mr11
;

83 
__uöt64_t
 
	mr12
;

84 
__uöt64_t
 
	mr13
;

85 
__uöt64_t
 
	mr14
;

86 
__uöt64_t
 
	mr15
;

87 
__uöt64_t
 
	mrù
;

88 
_Â°©e
 
	mÂªgs
;

89 
__uöt64_t
 
	mvcx
;

90 
__uöt64_t
 
	mdbc
;

91 
__uöt64_t
 
	mbå
;

92 
__uöt64_t
 
	mb‰
;

93 
__uöt64_t
 
	mër
;

94 
__uöt64_t
 
	me‰
;

95 
__uöt8_t
 
	m_öã∫Æ
;

96 
__uöt64_t
 
	mﬁdmask
;

101 
	s_uc_Âªg


103 
__uöt16_t
 
	msignifiˇnd
[4];

104 
__uöt16_t
 
	mexp⁄ít
;

107 
	s_Â°©e


109 
__uöt32_t
 
	mcw
;

110 
__uöt32_t
 
	msw
;

111 
__uöt32_t
 
	mèg
;

112 
__uöt32_t
 
	mùoff
;

113 
__uöt32_t
 
	mcs£l
;

114 
__uöt32_t
 
	md©aoff
;

115 
__uöt32_t
 
	md©a£l
;

116 
_uc_Âªg
 
	m_°
[8];

117 
__uöt32_t
 
	mnx°
;

120 
	suc⁄ãxt


122 
__uöt32_t
 
	m¸2
;

123 
__uöt32_t
 
	mdr0
;

124 
__uöt32_t
 
	mdr1
;

125 
__uöt32_t
 
	mdr2
;

126 
__uöt32_t
 
	mdr3
;

127 
__uöt32_t
 
	mdr6
;

128 
__uöt32_t
 
	mdr7
;

129 
_Â°©e
 
	mÂ°©e
;

130 
__uöt32_t
 
	mgs
;

131 
__uöt32_t
 
	mfs
;

132 
__uöt32_t
 
	mes
;

133 
__uöt32_t
 
	mds
;

134 
__uöt32_t
 
	medi
;

135 
__uöt32_t
 
	mesi
;

136 
__uöt32_t
 
	mebx
;

137 
__uöt32_t
 
	medx
;

138 
__uöt32_t
 
	mecx
;

139 
__uöt32_t
 
	móx
;

140 
__uöt32_t
 
	mebp
;

141 
__uöt32_t
 
	meù
;

142 
__uöt32_t
 
	mcs
;

143 
__uöt32_t
 
	meÊags
;

144 
__uöt32_t
 
	me•
;

145 
__uöt32_t
 
	mss
;

146 
__uöt8_t
 
	m_öã∫Æ
;

147 
__uöt32_t
 
	mﬁdmask
;

152 
	#__COPY_CONTEXT_SIZE
 ((
size_t
Ë(
uöçå_t
Ë&((
uc⁄ãxt
 *Ë0)->
_öã∫Æ
)

	)

154 
	usigvÆ


156 
	gsivÆ_öt
;

157 *
	gsivÆ_±r
;

158 } 
	tsigvÆ_t
;

160 
	ssigevít


162 
sigvÆ_t
 
	gsigev_vÆue
;

163 
	gsigev_signo
;

164 
	gsigev_nŸify
;

165 (*
	gsigev_nŸify_fun˘i⁄
Ë(
	gsigvÆ_t
);

166 
±hªad_©å_t
 *
	gsigev_nŸify_©åibuãs
;

167 } 
	tsigevít_t
;

169 #¥agm®
∑ck
(
push
,4)

170 
	s_sigcommu√


172 
__uöt32_t
 
	g_si_code
;

173 *
	g_si_ªad_h™dÀ
;

174 *
	g_si_wrôe_h™dÀ
;

175 *
	g_si_¥o˚ss_h™dÀ
;

176 
__exãnsi⁄__
 union

178 
	g_si_fd
;

179 *
	g_si_pùe_fh™dÀr
;

180 *
	g_si_°r
;

184 
	#__SI_PAD_SIZE
 32

	)

185 #ifde‡
__INSIDE_CYGWIN__


186 #i‚de‡
max


187 
	#max
(
a
,
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

189 
	#__uöt32_size
(
__x
Ë(
	`max
( (__xË/  (
uöt32_t
), 1))

	)

194 
	#__SI_CYG_PAD
 (
__SI_PAD_SIZE
 - 
	`__uöt32_size
 (*))

	)

199 
	gsi_signo
;

200 
	gsi_code
;

201 
pid_t
 
	gsi_pid
;

202 
uid_t
 
	gsi_uid
;

203 
	gsi_î∫o
;

205 
__exãnsi⁄__
 union

207 
__uöt32_t
 
	g__∑d
[
__SI_PAD_SIZE
];

208 
_sigcommu√
 
	g_si_commu√
;

209 
__exãnsi⁄__
 struct

211 
__exãnsi⁄__
 union

213 
sigvÆ_t
 
	gsi_sigvÆ
;

214 
sigvÆ_t
 
	gsi_vÆue
;

216 
__exãnsi⁄__
 struct

218 
timî_t
 
	gsi_tid
;

219 
	gsi_ovîrun
;

223 
__exãnsi⁄__
 struct

225 
	gsi_°©us
;

226 
˛ock_t
 
	gsi_utime
;

227 
˛ock_t
 
	gsi_°ime
;

230 *
	gsi_addr
;

233 #ifde‡
__INSIDE_CYGWIN__


234 
__exãnsi⁄__
 struct

236 
__uöt32_t
 
	g__∑d2
[
__SI_CYG_PAD
];

237 *
	gsi_cyg
;

242 } 
	tsigöfo_t
;

243 #¥agm®
∑ck
(
p›
)

247 
	gSI_USER
 = 0,

248 
	gSI_ASYNCIO
 = 2,

250 
	gSI_MESGQ
,

252 
	gSI_TIMER
,

253 
	gSI_QUEUE
,

255 
	gSI_KERNEL
,

257 
	gILL_ILLOPC
,

258 
	gILL_ILLOPN
,

259 
	gILL_ILLADR
,

260 
	gILL_ILLTRP
,

261 
	gILL_PRVOPC
,

262 
	gILL_PRVREG
,

263 
	gILL_COPROC
,

264 
	gILL_BADSTK
,

266 
	gFPE_INTDIV
,

267 
	gFPE_INTOVF
,

268 
	gFPE_FLTDIV
,

269 
	gFPE_FLTOVF
,

270 
	gFPE_FLTUND
,

271 
	gFPE_FLTRES
,

272 
	gFPE_FLTINV
,

273 
	gFPE_FLTSUB
,

275 
	gSEGV_MAPERR
,

276 
	gSEGV_ACCERR
,

278 
	gBUS_ADRALN
,

279 
	gBUS_ADRERR
,

280 
	gBUS_OBJERR
,

282 
	gCLD_EXITED
,

283 
	gCLD_KILLED
,

284 
	gCLD_DUMPED
,

285 
	gCLD_TRAPPED
,

286 
	gCLD_STOPPED
,

287 
	gCLD_CONTINUED


292 
	gSIGEV_SIGNAL
 = 0,

295 
	gSIGEV_NONE
,

298 
	gSIGEV_THREAD


302 #i‡
__WORDSIZE
 == 64

303 
__uöt64_t
 
	tsig£t_t
;

307 
__uöt32_t
 
	tsig£t_t
;

310 (*
	g_sig_func_±r
)();

312 
	ssiga˘i⁄


314 
__exãnsi⁄__
 union

316 
_sig_func_±r
 
	gß_h™dÀr
;

317 (*
	gß_siga˘i⁄
Ë–, 
	gsigöfo_t
 *, * );

319 
sig£t_t
 
	gß_mask
;

320 
	gß_Êags
;

323 
	#SA_NOCLDSTOP
 1

	)

325 
	#SA_SIGINFO
 2

	)

328 
	#SA_RESTART
 0x10000000

	)

329 
	#SA_NODEFER
 0x40000000

	)

331 
	#SA_RESETHAND
 0x80000000

	)

332 
	#SA_ONESHOT
 
SA_RESETHAND


	)

333 
	#SA_NOMASK
 
SA_NODEFER


	)

337 
	#_SA_INTERNAL_MASK
 0xf000

	)

339 
	#SIGHUP
 1

	)

340 
	#SIGINT
 2

	)

341 
	#SIGQUIT
 3

	)

342 
	#SIGILL
 4

	)

343 
	#SIGTRAP
 5

	)

344 
	#SIGABRT
 6

	)

345 
	#SIGEMT
 7

	)

346 
	#SIGFPE
 8

	)

347 
	#SIGKILL
 9

	)

348 
	#SIGBUS
 10

	)

349 
	#SIGSEGV
 11

	)

350 
	#SIGSYS
 12

	)

351 
	#SIGPIPE
 13

	)

352 
	#SIGALRM
 14

	)

353 
	#SIGTERM
 15

	)

354 
	#SIGURG
 16

	)

355 
	#SIGSTOP
 17

	)

356 
	#SIGTSTP
 18

	)

357 
	#SIGCONT
 19

	)

358 
	#SIGCHLD
 20

	)

359 
	#SIGCLD
 20

	)

360 
	#SIGTTIN
 21

	)

361 
	#SIGTTOU
 22

	)

362 
	#SIGIO
 23

	)

363 
	#SIGPOLL
 
SIGIO


	)

364 
	#SIGXCPU
 24

	)

365 
	#SIGXFSZ
 25

	)

366 
	#SIGVTALRM
 26

	)

367 
	#SIGPROF
 27

	)

368 
	#SIGWINCH
 28

	)

369 
	#SIGLOST
 29

	)

370 
	#SIGPWR
 
SIGLOST


	)

371 
	#SIGUSR1
 30

	)

372 
	#SIGUSR2
 31

	)

374 #i‡
__WORDSIZE
 == 64

375 
	#NSIG
 65

	)

377 
	#NSIG
 33

	)

381 
	#SIGRTMIN
 32

	)

382 
	#SIGRTMAX
 (
NSIG
 - 1)

	)

384 
	#SIG_HOLD
 ((
_sig_func_±r
)2Ë

	)

386 
psigöfo
 (c⁄° 
sigöfo_t
 *, const *);

387 
sigwaô
 (c⁄° 
sig£t_t
 *, *);

388 
sigwaôöfo
 (c⁄° 
sig£t_t
 *, 
sigöfo_t
 *);

389 
sighﬁd
 ();

390 
sigign‹e
 ();

391 
sigªl£
 ();

392 
_sig_func_±r
 
sig£t
 (, _sig_func_ptr);

394 
sigqueue
(
pid_t
, , c⁄° 
sigvÆ
);

395 
sigöãºu±
 (, );

396 #ifde‡
__INSIDE_CYGWIN__


397 c⁄° *
sys_sigabbªv
[];

398 c⁄° *
sys_sigli°
[];

400 c⁄° 
__de˛•ec
(
dŒimp‹t
Ë*
sys_sigabbªv
[];

401 c⁄° 
__de˛•ec
(
dŒimp‹t
Ë*
sys_sigli°
[];

404 #ifde‡
__˝lu•lus


	@/usr/include/cygwin/time.h

11 #i‚de‡
_CYGWIN_TIME_H


12 
	#_CYGWIN_TIME_H


	)

13 #ifde‡
__˝lu•lus


19 
__cde˛
 
˛ock_£åes
 (
˛ockid_t
, 
time•ec
 *);

22 
time_t
 
__cde˛
 
timñoˇl
 (
tm
 *);

23 
time_t
 
__cde˛
 
timegm
 (
tm
 *);

25 
	#TIMER_RELTIME
 0

	)

27 #i‚de‡
__STRICT_ANSI__


29 
daylight
 
__asm__
 (
_SYMSTR
 (
_daylight
));

31 #i‚de‡
__timez⁄efunc__


32 
timez⁄e
 
__asm__
 (
_SYMSTR
 (
_timez⁄e
));

37 #ifde‡
__˝lu•lus


	@/usr/include/cygwin/types.h

12 #i‚de‡
_CYGWIN_TYPES_H


13 
	#_CYGWIN_TYPES_H


	)

15 #ifde‡
__˝lu•lus


20 
	~<°döt.h
>

21 
	~<ídün.h
>

22 
	~<bôs/w‹dsize.h
>

24 #i‚de‡
__time•ec_t_deföed


25 
	#__time•ec_t_deföed


	)

26 
time•ec
 
	ttime•ec_t
;

29 #i‚de‡
__time°ruc_t_deföed


30 
	#__time°ruc_t_deföed


	)

31 
time•ec
 
	ttime°ruc_t
;

34 #i‚de‡
__off_t_deföed


35 
	#__off_t_deföed


	)

37 #i‡
__WORDSIZE
 == 64

38 
_off_t
 
	toff_t
;

40 
_off64_t
 
	toff_t
;

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__dev_t_deföed


47 
	#__dev_t_deföed


	)

48 
__öt16_t
 
	t__dev16_t
;

49 
__uöt32_t
 
	tdev_t
;

52 #i‚de‡
__blksize_t_deföed


53 
	#__blksize_t_deföed


	)

54 
__öt32_t
 
	tblksize_t
;

57 #i‚de‡
__blk˙t_t_deföed


58 
	#__blk˙t_t_deföed


	)

59 
__öt32_t
 
	t__blk˙t32_t
;

60 
__öt64_t
 
	tblk˙t_t
;

63 #i‚de‡
__fsblk˙t_t_deföed


64 
	#__fsblk˙t_t_deföed


	)

66 
	tfsblk˙t_t
;

69 #i‚de‡
__fsfû˙t_t_deföed


70 
	#__fsfû˙t_t_deföed


	)

72 
	tfsfû˙t_t
;

75 #i‚de‡
__uid_t_deföed


76 
	#__uid_t_deföed


	)

77 
	t__uid16_t
;

78 
__uöt32_t
 
	tuid_t
;

81 #i‚de‡
__gid_t_deföed


82 
	#__gid_t_deföed


	)

83 
	t__gid16_t
;

84 
__uöt32_t
 
	tgid_t
;

87 #i‚de‡
__öo_t_deföed


88 
	#__öo_t_deföed


	)

89 #i‚de‡
__x86_64__


90 
__uöt32_t
 
	t__öo32_t
;

92 
__uöt64_t
 
	töo_t
;

96 #i‚de‡
__id_t_deföed


97 
	#__id_t_deföed


	)

98 
__uöt32_t
 
	tid_t
;

101 #i‡
deföed
 (
__INSIDE_CYGWIN__
Ë&& !deföed (
__x86_64__
)

102 
	s__Êock32
 {

103 
l_ty≥
;

104 
l_whí˚
;

105 
_off_t
 
l_°¨t
;

106 
_off_t
 
l_Àn
;

107 
l_pid
;

108 
l_xxx
;

112 
	sÊock
 {

113 
l_ty≥
;

114 
l_whí˚
;

115 
off_t
 
l_°¨t
;

116 
off_t
 
l_Àn
;

117 
pid_t
 
l_pid
;

120 #i‚de‡
__key_t_deföed


121 
	#__key_t_deföed


	)

122 
	tkey_t
;

125 #i‚de‡
__BIT_TYPES_DEFINED


126 
	#__BIT_TYPES_DEFINED__
 1

	)

128 #i‚de‡
__vm_off£t_t_deföed


129 
	#__vm_off£t_t_deföed


	)

130 
	tvm_off£t_t
;

133 #i‚de‡
__vm_size_t_deföed


134 
	#__vm_size_t_deföed


	)

135 
	tvm_size_t
;

138 #i‚de‡
__vm_obje˘_t_deföed


139 
	#__vm_obje˘_t_deföed


	)

140 *
	tvm_obje˘_t
;

143 #i‚de‡
__u_öt8_t_deföed


144 
	#__u_öt8_t_deföed


	)

145 
	tu_öt8_t
;

147 #i‚de‡
__u_öt16_t_deföed


148 
	#__u_öt16_t_deföed


	)

149 
__uöt16_t
 
	tu_öt16_t
;

151 #i‚de‡
__u_öt32_t_deföed


152 
	#__u_öt32_t_deföed


	)

153 
__uöt32_t
 
	tu_öt32_t
;

155 #i‚de‡
__u_öt64_t_deföed


156 
	#__u_öt64_t_deföed


	)

157 
__uöt64_t
 
	tu_öt64_t
;

160 #i‚de‡
__ªgi°î_t_deföed


161 
	#__ªgi°î_t_deföed


	)

162 
__öt32_t
 
	tªgi°î_t
;

165 #i‚de‡
__addr_t_deföed


166 
	#__addr_t_deföed


	)

167 *
	taddr_t
;

170 #i‚de‡
__mode_t_deföed


171 
	#__mode_t_deföed


	)

172 
	tmode_t
;

176 #i‡!
deföed
(
__INSIDE_CYGWIN__
Ë|| !deföed(
__˝lu•lus
)

178 
	s__±hªad_t
 {
__dummy
;} *
	t±hªad_t
;

179 
	s__±hªad_muãx_t
 {
__dummy
;} *
	t±hªad_muãx_t
;

181 
	s__±hªad_key_t
 {
__dummy
;} *
	t±hªad_key_t
;

182 
	s__±hªad_©å_t
 {
__dummy
;} *
	t±hªad_©å_t
;

183 
	s__±hªad_muãx©å_t
 {
__dummy
;} *
	t±hªad_muãx©å_t
;

184 
	s__±hªad_c⁄d©å_t
 {
__dummy
;} *
	t±hªad_c⁄d©å_t
;

185 
	s__±hªad_c⁄d_t
 {
__dummy
;} *
	t±hªad_c⁄d_t
;

190 
±hªad_muãx_t
 
muãx
;

191 
°©e
;

193 
	t±hªad_⁄˚_t
;

194 
	s__±hªad_•ölock_t
 {
__dummy
;} *
	t±hªad_•ölock_t
;

195 
	s__±hªad_rwlock_t
 {
__dummy
;} *
	t±hªad_rwlock_t
;

196 
	s__±hªad_rwlock©å_t
 {
__dummy
;} *
	t±hªad_rwlock©å_t
;

202 
˛ass
 
	t±hªad
 *
	t±hªad_t
;

203 
˛ass
 
	t±hªad_muãx
 *
	t±hªad_muãx_t
;

204 
˛ass
 
	t±hªad_key
 *
	t±hªad_key_t
;

205 
˛ass
 
	t±hªad_©å
 *
	t±hªad_©å_t
;

206 
˛ass
 
	t±hªad_muãx©å
 *
	t±hªad_muãx©å_t
;

207 
˛ass
 
	t±hªad_c⁄d©å
 *
	t±hªad_c⁄d©å_t
;

208 
˛ass
 
	t±hªad_c⁄d
 *
	t±hªad_c⁄d_t
;

209 
˛ass
 
	t±hªad_⁄˚
 
	t±hªad_⁄˚_t
;

210 
˛ass
 
	t±hªad_•ölock
 *
	t±hªad_•ölock_t
;

211 
˛ass
 
	t±hªad_rwlock
 *
	t±hªad_rwlock_t
;

212 
˛ass
 
	t±hªad_rwlock©å
 *
	t±hªad_rwlock©å_t
;

215 
˛ass
 
	t£m≠h‹e
 *
	t£m_t
;

219 
	~<sys/sysma¸os.h
>

221 #ifde‡
__˝lu•lus


	@/usr/include/cygwin/wait.h

11 #i‚de‡
_CYGWIN_WAIT_H


12 
	#_CYGWIN_WAIT_H


	)

14 
	#WAIT_ANY
 (
pid_t
)-1

	)

15 
	#WAIT_MYPGRP
 (
pid_t
)0

	)

17 
	#WNOHANG
 1

	)

18 
	#WUNTRACED
 2

	)

19 
	#WCONTINUED
 8

	)

20 
	#__W_CONTINUED
 0xffff

	)

23 
	#__waô_°©us_to_öt
(
w
Ë(w)

	)

34 
	#WIFEXITED
(
w
Ë((
	`__waô_°©us_to_öt
(wË& 0xffË=0)

	)

35 
	#WIFSIGNALED
(
w
Ë((
	`__waô_°©us_to_öt
(w) & 0x7f) > 0 \

36 && ((
	`__waô_°©us_to_öt
(
w
Ë& 0x7fË< 0x7f))

	)

37 
	#WIFSTOPPED
(
w
Ë((
	`__waô_°©us_to_öt
(wË& 0xffË=0x7f)

	)

38 
	#WIFCONTINUED
(
w
Ë((
	`__waô_°©us_to_öt
(wË& 0xffffË=
__W_CONTINUED
)

	)

39 
	#WEXITSTATUS
(
w
Ë((
	`__waô_°©us_to_öt
(wË>> 8Ë& 0xff)

	)

40 
	#WTERMSIG
(
w
Ë(
	`__waô_°©us_to_öt
(wË& 0x7f)

	)

41 
	#WSTOPSIG
 
WEXITSTATUS


	)

42 
	#WCOREDUMP
(
w
Ë(
	`WIFSIGNALED
(wË&& (
	`__waô_°©us_to_öt
(wË& 0x80))

	)

	@/usr/include/machine/_types.h

5 #i‚de‡
_MACHINE__TYPES_H


6 
	#_MACHINE__TYPES_H


	)

7 
	~<machöe/_deÁu…_ty≥s.h
>

	@/usr/include/machine/time.h

1 #i‚def 
_MACHTIME_H_


2 
	#_MACHTIME_H_


	)

4 #i‡
deföed
(
__πems__
)

5 
	#_CLOCKS_PER_SEC_
 
	`sysc⁄f
(
_SC_CLK_TCK
)

	)

7 #i‡
deföed
(
__Ørch64__
Ë|| deföed(
__¨m__
Ë|| deföed(
__thumb__
)

8 
	#_CLOCKS_PER_SEC_
 100

	)

12 #ifde‡
__SPU__


13 
	~<sys/ty≥s.h
>

14 
«no¶ìp
 (c⁄° 
time•ec
 *, timespec *);

	@/usr/include/machine/types.h

1 #i‚def 
_MACHTYPES_H_


2 
	#_MACHTYPES_H_


	)

9 #i‡
deföed
(
__πems__
)

10 
	~<machöe/_ty≥s.h
>

13 
	#_CLOCK_T_
 

	)

14 
	#_TIME_T_
 

	)

15 
	#_CLOCKID_T_
 

	)

16 
	#_TIMER_T_
 

	)

18 #i‚de‡
_HAVE_SYSTYPES


19 
	t__off_t
;

20 
	t__pid_t
;

21 #ifde‡
__GNUC__


22 
__exãnsi⁄__
 
	t__loff_t
;

24 
	t__loff_t
;

	@/usr/include/newlib.h

6 #i‚de‡
__NEWLIB_H__


8 
	#__NEWLIB_H__
 1

	)

14 
	#_NEWLIB_VERSION
 "2.0.0"

	)

18 
	#_WANT_IO_C99_FORMATS
 1

	)

21 
	#_WANT_IO_LONG_LONG
 1

	)

27 
	#_WANT_IO_LONG_DOUBLE
 1

	)

30 
	#_WANT_IO_POS_ARGS
 1

	)

37 
	#_MB_CAPABLE
 1

	)

40 
	#_MB_LEN_MAX
 8

	)

54 
	#_ATEXIT_DYNAMIC_ALLOC
 1

	)

57 
	#_HAVE_LONG_DOUBLE
 1

	)

63 
	#_FVWRITE_IN_STREAMIO
 1

	)

66 
	#_FSEEK_OPTIMIZATION
 1

	)

69 
	#_WIDE_ORIENT
 1

	)

72 
	#_UNBUF_STREAM_OPT
 1

	)

	@/usr/include/stdint.h

11 #i‚de‡
_STDINT_H


12 
	#_STDINT_H


	)

14 
	~<bôs/w‹dsize.h
>

18 #i‚de‡
__öt8_t_deföed


19 
	#__öt8_t_deföed


	)

20 sig√d 
	töt8_t
;

21 
	töt16_t
;

22 
	töt32_t
;

23 #i‡
__WORDSIZE
 == 64

24 
	töt64_t
;

26 
	töt64_t
;

30 
	tuöt8_t
;

31 
	tuöt16_t
;

32 #i‚de‡
__uöt32_t_deföed


33 
	#__uöt32_t_deföed


	)

34 
	tuöt32_t
;

36 #i‡
__WORDSIZE
 == 64

37 
	tuöt64_t
;

39 
	tuöt64_t
;

44 sig√d 
	töt_Àa°8_t
;

45 
	töt_Àa°16_t
;

46 
	töt_Àa°32_t
;

47 #i‡
__WORDSIZE
 == 64

48 
	töt_Àa°64_t
;

50 
	töt_Àa°64_t
;

53 
	tuöt_Àa°8_t
;

54 
	tuöt_Àa°16_t
;

55 
	tuöt_Àa°32_t
;

56 #i‡
__WORDSIZE
 == 64

57 
	tuöt_Àa°64_t
;

59 
	tuöt_Àa°64_t
;

64 sig√d 
	töt_Á°8_t
;

65 #i‡
__WORDSIZE
 == 64

66 
	töt_Á°16_t
;

67 
	töt_Á°32_t
;

68 
	töt_Á°64_t
;

70 
	töt_Á°16_t
;

71 
	töt_Á°32_t
;

72 
	töt_Á°64_t
;

75 
	tuöt_Á°8_t
;

76 #i‡
__WORDSIZE
 == 64

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
	tuöt_Á°64_t
;

81 
	tuöt_Á°16_t
;

82 
	tuöt_Á°32_t
;

83 
	tuöt_Á°64_t
;

88 #i‚de‡
__öçå_t_deföed


89 
	#__öçå_t_deföed


	)

90 #i‡
__WORDSIZE
 == 64

91 
	töçå_t
;

93 
	töçå_t
;

96 #i‡
__WORDSIZE
 == 64

97 
	tuöçå_t
;

99 
	tuöçå_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tötmax_t
;

106 
	tuötmax_t
;

108 
	tötmax_t
;

109 
	tuötmax_t
;

114 #i‡!
deföed
 (
__˝lu•lus
Ë|| deföed (
__STDC_LIMIT_MACROS
) \

115 || 
	$deföed
 (
__INSIDE_CYGWIN__
)

117 #i‡
__x86_64__


118 
	#__I64
(
n
Ë¿## 
L


	)

119 
	#__U64
(
n
Ë¿## 
UL


	)

121 
	#__I64
(
n
Ë¿## 
LL


	)

122 
	#__U64
(
n
Ë¿## 
ULL


	)

127 
	#INT8_MIN
 (-128)

	)

128 
	#INT16_MIN
 (-32768)

	)

129 
	#INT32_MIN
 (-2147483647 - 1)

	)

130 
	#INT64_MIN
 (-
	`__I64
(9223372036854775807Ë- 1)

	)

132 
	#INT8_MAX
 (127)

	)

133 
	#INT16_MAX
 (32767)

	)

134 
	#INT32_MAX
 (2147483647)

	)

135 
	#INT64_MAX
 (
	`__I64
(9223372036854775807))

	)

137 
	#UINT8_MAX
 (255)

	)

138 
	#UINT16_MAX
 (65535)

	)

139 
	#UINT32_MAX
 (4294967295U)

	)

140 
	#UINT64_MAX
 (
	`__U64
(18446744073709551615))

	)

144 
	#INT_LEAST8_MIN
 (-128)

	)

145 
	#INT_LEAST16_MIN
 (-32768)

	)

146 
	#INT_LEAST32_MIN
 (-2147483647 - 1)

	)

147 
	#INT_LEAST64_MIN
 (-
	`__I64
(9223372036854775807Ë- 1)

	)

149 
	#INT_LEAST8_MAX
 (127)

	)

150 
	#INT_LEAST16_MAX
 (32767)

	)

151 
	#INT_LEAST32_MAX
 (2147483647)

	)

152 
	#INT_LEAST64_MAX
 (
	`__I64
(9223372036854775807))

	)

154 
	#UINT_LEAST8_MAX
 (255)

	)

155 
	#UINT_LEAST16_MAX
 (65535)

	)

156 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

157 
	#UINT_LEAST64_MAX
 (
	`__U64
(18446744073709551615))

	)

161 
	#INT_FAST8_MIN
 (-128)

	)

162 #i‡
__WORDSIZE
 == 64

163 
	#INT_FAST16_MIN
 (-
	`__I64
(9223372036854775807Ë- 1)

	)

164 
	#INT_FAST32_MIN
 (-
	`__I64
(9223372036854775807Ë- 1)

	)

166 
	#INT_FAST16_MIN
 (-2147483647 - 1)

	)

167 
	#INT_FAST32_MIN
 (-2147483647 - 1)

	)

169 
	#INT_FAST64_MIN
 (-
	`__I64
(9223372036854775807Ë- 1)

	)

171 
	#INT_FAST8_MAX
 (127)

	)

172 #i‡
__WORDSIZE
 == 64

173 
	#INT_FAST16_MAX
 (
	`__I64
(9223372036854775807))

	)

174 
	#INT_FAST32_MAX
 (
	`__I64
(9223372036854775807))

	)

176 
	#INT_FAST16_MAX
 (2147483647)

	)

177 
	#INT_FAST32_MAX
 (2147483647)

	)

179 
	#INT_FAST64_MAX
 (
	`__I64
(9223372036854775807))

	)

181 
	#UINT_FAST8_MAX
 (255)

	)

182 #i‡
__WORDSIZE
 == 64

183 
	#UINT_FAST16_MAX
 (
	`__U64
(18446744073709551615))

	)

184 
	#UINT_FAST32_MAX
 (
	`__U64
(18446744073709551615))

	)

186 
	#UINT_FAST16_MAX
 (4294967295U)

	)

187 
	#UINT_FAST32_MAX
 (4294967295U)

	)

189 
	#UINT_FAST64_MAX
 (
	`__U64
(18446744073709551615))

	)

193 #i‡
__WORDSIZE
 == 64

194 
	#INTPTR_MIN
 (-
	`__I64
(9223372036854775807Ë- 1)

	)

195 
	#INTPTR_MAX
 (
	`__I64
(9223372036854775807))

	)

196 
	#UINTPTR_MAX
 (
	`__U64
(18446744073709551615))

	)

198 
	#INTPTR_MIN
 (-2147483647 - 1)

	)

199 
	#INTPTR_MAX
 (2147483647)

	)

200 
	#UINTPTR_MAX
 (4294967295U)

	)

205 
	#INTMAX_MIN
 (-
	`__I64
(9223372036854775807Ë- 1)

	)

206 
	#INTMAX_MAX
 (
	`__I64
(9223372036854775807))

	)

207 
	#UINTMAX_MAX
 (
	`__U64
(18446744073709551615))

	)

211 #i‚de‡
PTRDIFF_MIN


212 #i‡
__WORDSIZE
 == 64

213 
	#PTRDIFF_MIN
 (-9223372036854775807L - 1)

	)

214 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647 - 1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

221 #i‚de‡
SIG_ATOMIC_MIN


222 
	#SIG_ATOMIC_MIN
 (-2147483647 - 1)

	)

224 #i‚de‡
SIG_ATOMIC_MAX


225 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

228 #i‚de‡
SIZE_MAX


229 #i‡
__WORDSIZE
 == 64

230 
	#SIZE_MAX
 (18446744073709551615UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

236 #i‚de‡
WCHAR_MIN


237 #ifde‡
__WCHAR_MIN__


238 
	#WCHAR_MIN
 
__WCHAR_MIN__


	)

239 
	#WCHAR_MAX
 
__WCHAR_MAX__


	)

241 
	#WCHAR_MIN
 (0)

	)

242 
	#WCHAR_MAX
 (65535)

	)

246 #i‚de‡
WINT_MIN


247 
	#WINT_MIN
 0U

	)

248 
	#WINT_MAX
 (4294967295U)

	)

255 #i‡!
	`deföed
 (
__˝lu•lus
Ë|| deföed (
__STDC_CONSTANT_MACROS
) \

256 || 
	$deföed
 (
__INSIDE_CYGWIN__
)

260 
	#INT8_C
(
x
Ë
	)
x

261 
	#INT16_C
(
x
Ë
	)
x

262 
	#INT32_C
(
x
Ë
	)
x

263 #i‡
__WORDSIZE
 == 64

264 
	#INT64_C
(
x
Ëx ## 
L


	)

266 
	#INT64_C
(
x
Ëx ## 
LL


	)

269 
	#UINT8_C
(
x
Ë
	)
x

270 
	#UINT16_C
(
x
Ë
	)
x

271 
	#UINT32_C
(
x
Ëx ## 
U


	)

272 #i‡
__WORDSIZE
 == 64

273 
	#UINT64_C
(
x
Ëx ## 
UL


	)

275 
	#UINT64_C
(
x
Ëx ## 
ULL


	)

280 #i‡
__WORDSIZE
 == 64

281 
	#INTMAX_C
(
x
Ëx ## 
L


	)

282 
	#UINTMAX_C
(
x
Ëx ## 
UL


	)

284 
	#INTMAX_C
(
x
Ëx ## 
LL


	)

285 
	#UINTMAX_C
(
x
Ëx ## 
ULL


	)

	@/usr/include/sys/_types.h

9 #i‚def 
_SYS__TYPES_H


10 
	#_SYS__TYPES_H


	)

12 
	~<machöe/_ty≥s.h
>

13 
	~<sys/lock.h
>

15 #i‚de‡
__off_t_deföed


16 
	t_off_t
;

19 #i‡
deföed
(
__πems__
)

21 
	t__dev_t
;

23 #i‚de‡
__dev_t_deföed


24 
	t__dev_t
;

28 #i‚de‡
__uid_t_deföed


29 
	t__uid_t
;

31 #i‚de‡
__gid_t_deföed


32 
	t__gid_t
;

35 #i‚de‡
__off64_t_deföed


36 
__exãnsi⁄__
 
	t_off64_t
;

43 #i‚de‡
__Âos_t_deföed


44 
	t_Âos_t
;

48 #ifde‡
__LARGE64_FILES


49 #i‚de‡
__Âos64_t_deföed


50 
_off64_t
 
	t_Âos64_t
;

54 #i‚de‡
__ssize_t_deföed


55 #ifde‡
__SIZE_TYPE__


59 sig√d

	)

60 
__SIZE_TYPE__
 
	t_ssize_t
;

63 #i‡
deföed
(
__INT_MAX__
) && __INT_MAX__ == 2147483647

64 
	t_ssize_t
;

66 
	t_ssize_t
;

71 
	#__√ed_wöt_t


	)

72 
	~<°ddef.h
>

74 #i‚de‡
__mb°©e_t_deföed


78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t_mb°©e_t
;

87 #i‚de‡
__Êock_t_deföed


88 
_LOCK_RECURSIVE_T
 
	t_Êock_t
;

91 #i‚de‡
__ic⁄v_t_deföed


93 *
	t_ic⁄v_t
;

	@/usr/include/sys/config.h

1 #i‚de‡
__SYS_CONFIG_H__


2 
	#__SYS_CONFIG_H__


	)

4 
	~<machöe/õìÂ.h
>

5 
	~<sys/„©uªs.h
>

7 #ifde‡
__Ørch64__


8 
	#MALLOC_ALIGNMENT
 16

	)

12 #i‡
deföed
(
__H8500__
Ë|| deföed(
__W65__
)

13 
	#__SMALL_BITFIELDS


	)

16 
	#H8300
 1

	)

20 #i‡
deföed
(
__Z8001__
Ë|| deföed(
__Z8002__
Ë|| deföed(
__H8500__
Ë|| deföed(
__W65__
Ë|| deföed (
__mn10200__
Ë|| deföed (
__AVR__
)

22 #unde‡
INT_MAX


23 #unde‡
UINT_MAX


24 
	#INT_MAX
 32767

	)

25 
	#UINT_MAX
 65535

	)

28 #i‡
deföed
 (
__H8300__
Ë|| deföed (
__H8300H__
Ë|| deföed(
__H8300S__
Ë|| deföed (
__H8300SX__
)

29 
	#__SMALL_BITFIELDS


	)

30 
	#H8300
 1

	)

31 #unde‡
INT_MAX


32 #unde‡
UINT_MAX


33 
	#INT_MAX
 
__INT_MAX__


	)

34 
	#UINT_MAX
 (
__INT_MAX__
 * 2U + 1)

	)

37 #i‡(
deföed
(
__CR16__
Ë|| deföed(
__CR16C__
Ë||deföed(
__CR16CP__
))

38 #i‚de‡
__INT32__


39 
	#__SMALL_BITFIELDS


	)

40 #unde‡
INT_MAX


41 #unde‡
UINT_MAX


42 
	#INT_MAX
 32767

	)

43 
	#UINT_MAX
 (
__INT_MAX__
 * 2U + 1)

	)

45 #unde‡
INT_MAX


46 #unde‡
UINT_MAX


47 
	#INT_MAX
 2147483647

	)

48 
	#UINT_MAX
 (
__INT_MAX__
 * 2U + 1)

	)

53 #i‡
deföed
 (
__xc16x__
Ë|| deföed (
__xc16xL__
Ë|| deföed (
__xc16xS__
)

54 
	#__SMALL_BITFIELDS


	)

57 #ifde‡
__W65__


58 
	#__SMALL_BITFIELDS


	)

61 #i‡
deföed
(
__D10V__
)

62 
	#__SMALL_BITFIELDS


	)

63 #unde‡
INT_MAX


64 #unde‡
UINT_MAX


65 
	#INT_MAX
 
__INT_MAX__


	)

66 
	#UINT_MAX
 (
__INT_MAX__
 * 2U + 1)

	)

67 
	#_POINTER_INT
 

	)

70 #i‡
deföed
(
__mc68hc11__
Ë|| deföed(
__mc68hc12__
Ë|| deföed(
__mc68hc1x__
)

71 #unde‡
INT_MAX


72 #unde‡
UINT_MAX


73 
	#INT_MAX
 
__INT_MAX__


	)

74 
	#UINT_MAX
 (
__INT_MAX__
 * 2U + 1)

	)

75 
	#_POINTER_INT
 

	)

78 #ifde‡
___AM29K__


79 
	#_FLOAT_RET
 

	)

82 #ifde‡
__i386__


83 #i‚de‡
__unix__


85 
	#_FLOAT_RET
 

	)

87 #i‡
deföed
(
__löux__
Ë|| deföed(
__RDOS__
)

89 
	#__DYNAMIC_REENT__


	)

90 
	#HAVE_GETDATE


	)

91 
	#_HAVE_SYSTYPES


	)

92 
	#_READ_WRITE_RETURN_TYPE
 
_ssize_t


	)

93 
	#__LARGE64_FILES
 1

	)

95 
	#_LARGEFILE64_SOURCE
 1

	)

99 #ifde‡
__mn10200__


100 
	#__SMALL_BITFIELDS


	)

103 #ifde‡
__AVR__


104 
	#__SMALL_BITFIELDS


	)

105 
	#_POINTER_INT
 

	)

108 #ifde‡
__v850


109 
	#__ATTRIBUTE_IMPURE_PTR__
 
	`__©åibuã__
((
__sda__
))

	)

113 #i‡
deföed
(
__PPC__
)

114 #i‡
deföed
(
_CALL_SYSV
)

115 
	#__ATTRIBUTE_IMPURE_PTR__
 
	`__©åibuã__
((
	`__£˘i⁄__
(".sd©a")))

	)

117 #ifde‡
__SPE__


118 
	#_LONG_DOUBLE
 

	)

123 #i‡
deföed
 (
__MICROBLAZE__
)

124 #i‚de‡
_REENT_SMALL


125 
	#_REENT_SMALL


	)

128 #ifde‡
__XMK__


129 
	#_UNIX98_THREAD_MUTEX_ATTRIBUTES


	)

133 #i‡
deföed
(
__mùs__
Ë&& !deföed(
__πems__
)

134 
	#__ATTRIBUTE_IMPURE_PTR__
 
	`__©åibuã__
((
	`__£˘i⁄__
(".sd©a")))

	)

137 #ifde‡
__x°‹my16__


138 
	#__SMALL_BITFIELDS


	)

139 #unde‡
INT_MAX


140 #unde‡
UINT_MAX


141 
	#INT_MAX
 
__INT_MAX__


	)

142 
	#UINT_MAX
 (
__INT_MAX__
 * 2U + 1)

	)

143 
	#MALLOC_ALIGNMENT
 8

	)

144 
	#_POINTER_INT
 

	)

145 
	#__BUFSIZ__
 16

	)

146 
	#_REENT_SMALL


	)

149 #i‡
deföed
 
__MSP430__


150 #i‚de‡
_REENT_SMALL


151 
	#_REENT_SMALL


	)

154 
	#__SMALL_BITFIELDS


	)

156 #ifde‡
__MSP430X_LARGE__


157 
	#_POINTER_INT
 

	)

159 
	#_POINTER_INT
 

	)

163 #ifde‡
__m32c__


164 
	#__SMALL_BITFIELDS


	)

165 #unde‡
INT_MAX


166 #unde‡
UINT_MAX


167 
	#INT_MAX
 
__INT_MAX__


	)

168 
	#UINT_MAX
 (
__INT_MAX__
 * 2U + 1)

	)

169 
	#MALLOC_ALIGNMENT
 8

	)

170 #i‡
deföed
(
__r8c_˝u__
Ë|| deföed(
__m16c_˝u__
)

171 
	#_POINTER_INT
 

	)

173 
	#_POINTER_INT
 

	)

175 
	#__BUFSIZ__
 16

	)

176 
	#_REENT_SMALL


	)

179 #ifde‡
__SPU__


180 
	#MALLOC_ALIGNMENT
 16

	)

181 
	#__CUSTOM_FILE_IO__


	)

189 #i‚de‡
__INT_MAX__


190 #ifde‡
INT_MAX


191 
	#__INT_MAX__
 
INT_MAX


	)

193 
	#__INT_MAX__
 2147483647

	)

197 #i‚de‡
__LONG_MAX__


198 #ifde‡
LONG_MAX


199 
	#__LONG_MAX__
 
LONG_MAX


	)

201 #i‡
deföed
 (
__Æpha__
Ë|| (deföed (
__•¨c__
Ë&& deföed(
__¨ch64__
)) \

202 || 
	$deföed
 (
__•¨cv9
)

203 
	#__LONG_MAX__
 9223372036854775807L

	)

205 
	#__LONG_MAX__
 2147483647L

	)

211 #i‚de‡
_POINTER_INT


212 
	#_POINTER_INT
 

	)

215 #ifde‡
__‰v__


216 
	#__ATTRIBUTE_IMPURE_PTR__
 
	`__©åibuã__
((
	`__£˘i⁄__
(".sd©a")))

	)

218 #unde‡
__RAND_MAX


219 #i‡
__INT_MAX__
 == 32767

220 
	#__RAND_MAX
 32767

	)

222 
	#__RAND_MAX
 0x7fffffff

	)

225 #i‡
	`deföed
(
__CYGWIN__
)

226 
	~<cygwö/c⁄fig.h
>

227 #i‡!
	`deföed
 (
__STRICT_ANSI__
Ë|| (
__STDC_VERSION__
 >= 199901L)

228 
	#__USE_XOPEN2K
 1

	)

232 #i‡
	`deföed
(
__πems__
)

233 
	#__FILENAME_MAX__
 255

	)

234 
	#_READ_WRITE_RETURN_TYPE
 
_ssize_t


	)

235 
	#__DYNAMIC_REENT__


	)

236 
	#_REENT_GLOBAL_ATEXIT


	)

239 #i‚de‡
__EXPORT


240 
	#__EXPORT


	)

243 #i‚de‡
__IMPORT


244 
	#__IMPORT


	)

250 #i‚de‡
_READ_WRITE_RETURN_TYPE


251 
	#_READ_WRITE_RETURN_TYPE
 

	)

254 #i‚de‡
__WCHAR_MAX__


255 #i‡
__INT_MAX__
 =32767 || 
	`deföed
 (
_WIN32
)

256 
	#__WCHAR_MAX__
 0xffffu

	)

262 #ifde‡
_WANT_REENT_SMALL


263 #i‚de‡
_REENT_SMALL


264 
	#_REENT_SMALL


	)

271 #ifde‡
_MB_EXTENDED_CHARSETS_ALL


272 
	#_MB_EXTENDED_CHARSETS_ISO
 1

	)

273 
	#_MB_EXTENDED_CHARSETS_WINDOWS
 1

	)

	@/usr/include/sys/custom_file.h

1 #îr‹ 
Sy°em
-
•ecific
 
cu°om_fûe
.
h
 
is
 
missög
.

	@/usr/include/sys/lock.h

11 #i‚de‡
_SYS_LOCK_H_


12 
	#_SYS_LOCK_H_


	)

14 *
	t_LOCK_T
;

15 
	#_LOCK_RECURSIVE_T
 
_LOCK_T


	)

21 
	#_LOCK_T_RECURSIVE_INITIALIZER
 ((
_LOCK_T
)18)

	)

22 
	#_LOCK_T_INITIALIZER
 ((
_LOCK_T
)19)

	)

24 
	#__LOCK_INIT
(
CLASS
,
NAME
) \

25 
CLASS
 
_LOCK_T
 
NAME
 = 
_LOCK_T_INITIALIZER
;

	)

26 
	#__LOCK_INIT_RECURSIVE
(
CLASS
,
NAME
) \

27 
CLASS
 
_LOCK_T
 
NAME
 = 
_LOCK_T_RECURSIVE_INITIALIZER
;

	)

29 
	#__lock_öô
(
__lock
Ë
	`__cygwö_lock_öô
(&__lock)

	)

30 
	#__lock_öô_ªcursive
(
__lock
Ë
	`__cygwö_lock_öô_ªcursive
(&__lock)

	)

31 
	#__lock_˛o£
(
__lock
Ë
	`__cygwö_lock_föi
(&__lock)

	)

32 
	#__lock_˛o£_ªcursive
(
__lock
Ë
	`__cygwö_lock_föi
(&__lock)

	)

33 
	#__lock_acquúe
(
__lock
Ë
	`__cygwö_lock_lock
(&__lock)

	)

34 
	#__lock_acquúe_ªcursive
(
__lock
Ë
	`__cygwö_lock_lock
(&__lock)

	)

35 
	#__lock_åy_acquúe
(
lock
Ë
	`__cygwö_lock_åylock
(&
__lock
)

	)

36 
	#__lock_åy_acquúe_ªcursive
(
lock
Ë
	`__cygwö_lock_åylock
(&
__lock
)

	)

37 
	#__lock_ªÀa£
(
__lock
Ë
	`__cygwö_lock_u∆ock
(&__lock)

	)

38 
	#__lock_ªÀa£_ªcursive
(
__lock
Ë
	`__cygwö_lock_u∆ock
(&__lock)

	)

40 #ifde‡
__˝lu•lus


44 
__cygwö_lock_öô
(
_LOCK_T
 *);

45 
__cygwö_lock_öô_ªcursive
(
_LOCK_T
 *);

46 
__cygwö_lock_föi
(
_LOCK_T
 *);

47 
__cygwö_lock_lock
(
_LOCK_T
 *);

48 
__cygwö_lock_åylock
(
_LOCK_T
 *);

49 
__cygwö_lock_u∆ock
(
_LOCK_T
 *);

50 #ifde‡
__˝lu•lus


	@/usr/include/sys/sched.h

21 #i‚de‡
_SYS_SCHED_H_


22 
	#_SYS_SCHED_H_


	)

24 #ifde‡
__˝lu•lus


30 #i‡
deföed
(
__CYGWIN__
)

31 
	#SCHED_OTHER
 3

	)

33 
	#SCHED_OTHER
 0

	)

36 
	#SCHED_FIFO
 1

	)

37 
	#SCHED_RR
 2

	)

39 #i‡
deföed
(
_POSIX_SPORADIC_SERVER
)

40 
	#SCHED_SPORADIC
 4

	)

46 
	ssched_∑øm
 {

47 
sched_¥i‹ôy
;

49 #i‡
deföed
(
_POSIX_SPORADIC_SERVER
Ë|| deföed(
_POSIX_THREAD_SPORADIC_SERVER
)

50 
sched_ss_low_¥i‹ôy
;

52 
time•ec
 
sched_ss_ª∂_≥riod
;

54 
time•ec
 
sched_ss_öô_budgë
;

56 
sched_ss_max_ª∂
;

61 #ifde‡
__˝lu•lus


	@/usr/include/bits/wordsize.h

3 #i‚de‡
_WORDSIZE_H


4 
	#_WORDSIZE_H
 1

	)

5 #ifde‡
__x86_64__


6 
	#__WORDSIZE
 64

	)

7 
	#__WORDSIZE_COMPAT32
 1

	)

9 
	#__WORDSIZE
 32

	)

	@/usr/include/cygwin/config.h

16 #i‚de‡
_CYGWIN_CONFIG_H


17 #ifde‡
__˝lu•lus


20 
	#_CYGWIN_CONFIG_H


	)

22 
	#__DYNAMIC_REENT__


	)

40 #ifde‡
_COMPILING_NEWLIB


41 #ifde‡
__x86_64__


42 
	~"../ésoff£ts64.h
"

45 
ölöe
 *
___gëªít
 ()

47 *
ªt
;

48 
__asm
 
__vﬁ©ûe__
 ("movq %%gs:8,%0" : "Ù" (
ªt
));

49  
ªt
 + 
és_loˇl_˛ib
;

51 
	#__gëªít
(Ë((
_ªít
 *Ë
	`___gëªít
())

	)

53 
	~"../ésoff£ts.h
"

54 *
_ésba£
 
__asm__
 ("%fs:4");

55 
	#__gëªít
(Ë(
_ªít
 *)(
_ésba£
 + 
és_loˇl_˛ib
)

	)

59 #ifde‡
__x86_64__


60 
	#__SYMBOL_PREFIX


	)

62 
	#__SYMBOL_PREFIX
 "_"

	)

64 
	#_SYMSTR
(
x
Ë
__SYMBOL_PREFIX
 #x

	)

66 
	#__FILENAME_MAX__
 4096

	)

71 
	#_READ_WRITE_RETURN_TYPE
 
_ssize_t


	)

72 
	#__LARGE64_FILES
 1

	)

73 
	#__USE_INTERNAL_STAT64
 1

	)

74 
	#__LINUX_ERRNO_EXTENSIONS__
 1

	)

75 
	#_MB_EXTENDED_CHARSETS_ALL
 1

	)

76 
	#__HAVE_LOCALE_INFO__
 1

	)

77 
	#__HAVE_LOCALE_INFO_EXTENDED__
 1

	)

78 
	#_WANT_C99_TIME_FORMATS
 1

	)

79 
	#_GLIBC_EXTENSION
 1

	)

80 #i‡
deföed
(
__INSIDE_CYGWIN__
Ë|| deföed(
_COMPILING_NEWLIB
)

81 
	#__EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

82 
	#__IMPORT


	)

84 
	#__EXPORT


	)

85 
	#__IMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

88 #i‚de‡
__WCHAR_MAX__


89 
	#__WCHAR_MAX__
 0xffffu

	)

92 
	#DEFAULT_LOCALE
 "C.UTF-8"

	)

94 #ifde‡
__˝lu•lus


	@/usr/include/endian.h

11 #i‚de‡
_ENDIAN_H_


12 
	#_ENDIAN_H_


	)

14 
	~<sys/c⁄fig.h
>

15 
	~<bôs/ídün.h
>

18 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

19 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

20 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

21 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

24 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


25 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

26 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


27 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

30 #i‡ ! 
deföed
 
_POSIX_SOURCE


32 
	~<byãsw≠.h
>

34 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


36 
	#htobe16
(
x
Ë
	`bsw≠_16
(x)

	)

37 
	#htobe32
(
x
Ë
	`bsw≠_32
(x)

	)

38 
	#htobe64
(
x
Ë
	`bsw≠_64
(x)

	)

40 
	#be16toh
(
x
Ë
	`bsw≠_16
(x)

	)

41 
	#be32toh
(
x
Ë
	`bsw≠_32
(x)

	)

42 
	#be64toh
(
x
Ë
	`bsw≠_64
(x)

	)

44 
	#htﬁe16
(
x
Ë(x)

	)

45 
	#htﬁe32
(
x
Ë(x)

	)

46 
	#htﬁe64
(
x
Ë(x)

	)

48 
	#À16toh
(
x
Ë(x)

	)

49 
	#À32toh
(
x
Ë(x)

	)

50 
	#À64toh
(
x
Ë(x)

	)

54 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


56 
	#htobe16
(
x
Ë(x)

	)

57 
	#htobe32
(
x
Ë(x)

	)

58 
	#htobe64
(
x
Ë(x)

	)

60 
	#be16toh
(
x
Ë(x)

	)

61 
	#be32toh
(
x
Ë(x)

	)

62 
	#be64toh
(
x
Ë(x)

	)

64 
	#htﬁe16
(
x
Ë
	`bsw≠_16
(x)

	)

65 
	#htﬁe32
(
x
Ë
	`bsw≠_32
(x)

	)

66 
	#htﬁe64
(
x
Ë
	`bsw≠_64
(x)

	)

68 
	#À16toh
(
x
Ë
	`bsw≠_16
(x)

	)

69 
	#À32toh
(
x
Ë
	`bsw≠_32
(x)

	)

70 
	#À64toh
(
x
Ë
	`bsw≠_64
(x)

	)

	@/usr/include/machine/_default_types.h

5 #i‚de‡
_MACHINE__DEFAULT_TYPES_H


6 
	#_MACHINE__DEFAULT_TYPES_H


	)

8 #ifde‡
__˝lu•lus


15 #i‡
__GNUC_PREREQ
 (3, 3)

17 
	#__EXP
(
x
Ë
__
##x##
	)
__

20 
	#__EXP
(
x
Ë
	)
x

21 
	~<limôs.h
>

24 #i‡
__EXP
(
SCHAR_MAX
) == 0x7f

25 sig√d 
	t__öt8_t
 ;

26 
	t__uöt8_t
 ;

27 
	#___öt8_t_deföed
 1

	)

30 #i‡
__EXP
(
INT_MAX
) == 0x7fff

31 sig√d 
	t__öt16_t
;

32 
	t__uöt16_t
;

33 
	#___öt16_t_deföed
 1

	)

34 #ñi‡
__EXP
(
SHRT_MAX
) == 0x7fff

35 sig√d 
	t__öt16_t
;

36 
	t__uöt16_t
;

37 
	#___öt16_t_deföed
 1

	)

38 #ñi‡
__EXP
(
SCHAR_MAX
) == 0x7fff

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 
	#___öt16_t_deföed
 1

	)

44 #i‡
___öt16_t_deföed


45 
__öt16_t
 
	t__öt_Àa°16_t
;

46 
__uöt16_t
 
	t__uöt_Àa°16_t
;

47 
	#___öt_Àa°16_t_deföed
 1

	)

49 #i‡!
___öt8_t_deföed


50 
__öt16_t
 
	t__öt_Àa°8_t
;

51 
__uöt16_t
 
	t__uöt_Àa°8_t
;

52 
	#___öt_Àa°8_t_deföed
 1

	)

56 #i‡
__EXP
(
INT_MAX
) == 0x7fffffffL

57 sig√d 
	t__öt32_t
;

58 
	t__uöt32_t
;

59 
	#___öt32_t_deföed
 1

	)

60 #ñi‡
__EXP
(
LONG_MAX
) == 0x7fffffffL

61 sig√d 
	t__öt32_t
;

62 
	t__uöt32_t
;

63 
	#___öt32_t_deföed
 1

	)

64 #ñi‡
__EXP
(
SHRT_MAX
) == 0x7fffffffL

65 sig√d 
	t__öt32_t
;

66 
	t__uöt32_t
;

67 
	#___öt32_t_deföed
 1

	)

68 #ñi‡
__EXP
(
SCHAR_MAX
) == 0x7fffffffL

69 sig√d 
	t__öt32_t
;

70 
	t__uöt32_t
;

71 
	#___öt32_t_deföed
 1

	)

74 #i‡
___öt32_t_deföed


75 
__öt32_t
 
	t__öt_Àa°32_t
;

76 
__uöt32_t
 
	t__uöt_Àa°32_t
;

77 
	#___öt_Àa°32_t_deföed
 1

	)

79 #i‡!
___öt8_t_deföed


80 
__öt32_t
 
	t__öt_Àa°8_t
;

81 
__uöt32_t
 
	t__uöt_Àa°8_t
;

82 
	#___öt_Àa°8_t_deföed
 1

	)

84 #i‡!
___öt16_t_deföed


85 
__öt32_t
 
	t__öt_Àa°16_t
;

86 
__uöt32_t
 
	t__uöt_Àa°16_t
;

87 
	#___öt_Àa°16_t_deföed
 1

	)

91 #i‡
__EXP
(
LONG_MAX
) > 0x7fffffff

92 sig√d 
	t__öt64_t
;

93 
	t__uöt64_t
;

94 
	#___öt64_t_deföed
 1

	)

97 #ñi‡ 
deföed
(
__LONG_LONG_MAX__
) && (__LONG_LONG_MAX__ > 0x7fffffff)

98 sig√d 
	t__öt64_t
;

99 
	t__uöt64_t
;

100 
	#___öt64_t_deföed
 1

	)

103 #ñi‡ 
deföed
(
LLONG_MAX
) && (LLONG_MAX > 0x7fffffff)

104 sig√d 
	t__öt64_t
;

105 
	t__uöt64_t
;

106 
	#___öt64_t_deföed
 1

	)

108 #ñi‡ 
__EXP
(
INT_MAX
) > 0x7fffffff

109 sig√d 
	t__öt64_t
;

110 
	t__uöt64_t
;

111 
	#___öt64_t_deföed
 1

	)

114 #unde‡
__EXP


116 #ifde‡
__˝lu•lus


	@/usr/include/sys/sysmacros.h

11 #i‚de‡
_SYS_SYSMACROS_H


12 
	#_SYS_SYSMACROS_H


	)

14 
	~<sys/ty≥s.h
>

16 
_ELIDABLE_INLINE
 
gnu_dev_maj‹
(
dev_t
);

17 
_ELIDABLE_INLINE
 
gnu_dev_mö‹
(
dev_t
);

18 
_ELIDABLE_INLINE
 
dev_t
 
gnu_dev_makedev
(, );

20 
_ELIDABLE_INLINE
 

21 
	$gnu_dev_maj‹
(
dev_t
 
dev
)

23  ()(((
dev
) >> 16) & 0xffff);

24 
	}
}

26 
_ELIDABLE_INLINE
 

27 
	$gnu_dev_mö‹
(
dev_t
 
dev
)

29  ()((
dev
) & 0xffff);

30 
	}
}

32 
_ELIDABLE_INLINE
 
dev_t


33 
	$gnu_dev_makedev
(
maj
, 
mö
)

35  (((
maj
Ë<< 16Ë| ((
mö
) & 0xffff));

36 
	}
}

38 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
(dev)

	)

39 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
(dev)

	)

40 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
(maj, mö)

	)

	@/usr/include/bits/endian.h

11 #i‚de‡
_BITS_ENDIAN_H_


12 
	#_BITS_ENDIAN_H_


	)

14 #i‚de‡
__BIG_ENDIAN


15 
	#__BIG_ENDIAN
 4321

	)

17 #i‚de‡
__LITTLE_ENDIAN


18 
	#__LITTLE_ENDIAN
 1234

	)

21 #i‚de‡
__BYTE_ORDER


22 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/byteswap.h

11 #i‚de‡
_BYTESWAP_H


12 
	#_BYTESWAP_H


	)

14 #ifde‡
__˝lu•lus


18 
__ölöe
 

19 
bsw≠_16
 (
__x
)

21  (
__x
 >> 8) | (__x << 8);

24 
__ölöe
 

25 
bsw≠_32
 (
__x
)

27  (
bsw≠_16
 (
__x
 & 0xffff) << 16) | (bswap_16 (__x >> 16));

30 
__ölöe
 

31 
bsw≠_64
 (
__x
)

33  (((Ë
bsw≠_32
 (
__x
 & 0xffffffffull)) << 32) | (bswap_32 (__x >> 32));

36 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

12 #i‚de‡
_LIMITS_H___


14 
	~<„©uªs.h
>

15 
	~<bôs/w‹dsize.h
>

17 #i‚de‡
_MACH_MACHLIMITS_H_


20 
	#_LIMITS_H___


	)

21 
	#_MACH_MACHLIMITS_H_


	)

27 #unde‡
CHAR_BIT


28 
	#CHAR_BIT
 
__CHAR_BIT__


	)

31 #unde‡
LONG_BIT


32 
	#LONG_BIT
 (
__SIZEOF_LONG__
 * 
__CHAR_BIT__
)

	)

35 #unde‡
WORD_BIT


36 
	#WORD_BIT
 (
__SIZEOF_INT__
 * 
__CHAR_BIT__
)

	)

39 #i‚de‡
MB_LEN_MAX


41 
	#MB_LEN_MAX
 8

	)

45 #unde‡
SCHAR_MIN


46 
	#SCHAR_MIN
 (-128)

	)

47 #unde‡
SCHAR_MAX


48 
	#SCHAR_MAX
 127

	)

51 #unde‡
UCHAR_MAX


52 
	#UCHAR_MAX
 255

	)

55 #ifde‡
__CHAR_UNSIGNED__


56 #unde‡
CHAR_MIN


57 
	#CHAR_MIN
 0

	)

58 #unde‡
CHAR_MAX


59 
	#CHAR_MAX
 255

	)

61 #unde‡
CHAR_MIN


62 
	#CHAR_MIN
 (-128)

	)

63 #unde‡
CHAR_MAX


64 
	#CHAR_MAX
 127

	)

68 #unde‡
SHRT_MIN


69 
	#SHRT_MIN
 (-32768)

	)

70 #unde‡
SHRT_MAX


71 
	#SHRT_MAX
 32767

	)

74 #unde‡
USHRT_MAX


75 
	#USHRT_MAX
 65535

	)

78 #i‚de‡
__INT_MAX__


79 
	#__INT_MAX__
 2147483647

	)

81 #unde‡
INT_MIN


82 
	#INT_MIN
 (-
INT_MAX
-1)

	)

83 #unde‡
INT_MAX


84 
	#INT_MAX
 
__INT_MAX__


	)

87 #unde‡
UINT_MAX


88 
	#UINT_MAX
 (
INT_MAX
 * 2U + 1)

	)

92 #i‚de‡
__LONG_MAX__


93 #i‡
__WORDSIZE
 == 64

94 
	#__LONG_MAX__
 9223372036854775807L

	)

96 
	#__LONG_MAX__
 2147483647L

	)

99 #unde‡
LONG_MIN


100 
	#LONG_MIN
 (-
LONG_MAX
-1L)

	)

101 #unde‡
LONG_MAX


102 
	#LONG_MAX
 
__LONG_MAX__


	)

105 #unde‡
ULONG_MAX


106 
	#ULONG_MAX
 (
LONG_MAX
 * 2UL + 1)

	)

109 #i‚de‡
__LONG_LONG_MAX__


110 
	#__LONG_LONG_MAX__
 9223372036854775807LL

	)

113 #i‡
deföed
 (
__GNU_LIBRARY__
Ë? deföed (
__USE_GNU
Ë: !deföed (
__STRICT_ANSI__
)

114 #unde‡
LONG_LONG_MIN


115 
	#LONG_LONG_MIN
 (-
LONG_LONG_MAX
-1)

	)

116 #unde‡
LONG_LONG_MAX


117 
	#LONG_LONG_MAX
 
__LONG_LONG_MAX__


	)

120 #unde‡
ULONG_LONG_MAX


121 
	#ULONG_LONG_MAX
 (
LONG_LONG_MAX
 * 2ULL + 1)

	)

125 #unde‡
LLONG_MIN


126 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

127 #unde‡
LLONG_MAX


128 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

131 #unde‡
ULLONG_MAX


132 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

135 #unde‡
SSIZE_MAX


136 
	#SSIZE_MAX
 (
__LONG_MAX__
)

	)

150 #unde‡
AIO_LISTIO_MAX


155 #unde‡
AIO_MAX


160 #unde‡
AIO_PRIO_DELTA_MAX


166 #unde‡
ARG_MAX


167 
	#ARG_MAX
 32000

	)

170 #unde‡
ATEXIT_MAX


171 
	#ATEXIT_MAX
 32

	)

174 #unde‡
CHILD_MAX


175 
	#CHILD_MAX
 256

	)

178 #unde‡
DELAYTIMER_MAX


182 #unde‡
HOST_NAME_MAX


183 
	#HOST_NAME_MAX
 255

	)

186 #unde‡
IOV_MAX


187 
	#IOV_MAX
 1024

	)

190 #unde‡
LOGIN_NAME_MAX


191 
	#LOGIN_NAME_MAX
 256

	)

194 #unde‡
MQ_OPEN_MAX


195 
	#MQ_OPEN_MAX
 
OPEN_MAX


	)

198 #unde‡
MQ_PRIO_MAX


199 
	#MQ_PRIO_MAX
 
INT_MAX


	)

205 #unde‡
OPEN_MAX


206 
	#OPEN_MAX
 256

	)

209 #unde‡
PAGESIZE


210 #unde‡
PAGE_SIZE


211 
	#PAGESIZE
 65536

	)

212 
	#PAGE_SIZE
 
PAGESIZE


	)

221 #unde‡
PTHREAD_DESTRUCTOR_ITERATIONS


222 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 1

	)

226 #unde‡
PTHREAD_KEYS_MAX


227 
	#PTHREAD_KEYS_MAX
 1024

	)

237 #unde‡
PTHREAD_STACK_MIN


238 
	#PTHREAD_STACK_MIN
 65536

	)

242 #unde‡
PTHREAD_THREADS_MAX


248 #unde‡
RTSIG_MAX


249 #i‡
__WORDSIZE
 == 64

250 
	#RTSIG_MAX
 33

	)

252 
	#RTSIG_MAX
 1

	)

257 #unde‡
SEM_NSEMS_MAX


261 #unde‡
SEM_VALUE_MAX


262 
	#SEM_VALUE_MAX
 1147483648

	)

266 #unde‡
SIGQUEUE_MAX


267 
	#SIGQUEUE_MAX
 32

	)

271 #unde‡
SS_REPL_MAX


275 #unde‡
STREAM_MAX


276 
	#STREAM_MAX
 20

	)

279 #unde‡
SYMLOOP_MAX


280 
	#SYMLOOP_MAX
 10

	)

283 #unde‡
TIMER_MAX


284 
	#TIMER_MAX
 32

	)

287 #unde‡
TRACE_EVENT_NAME_MAX


292 #unde‡
TRACE_NAME_MAX


297 #unde‡
TRACE_SYS_MAX


303 #unde‡
TRACE_USER_EVENT_MAX


307 #unde‡
TTY_NAME_MAX


308 
	#TTY_NAME_MAX
 32

	)

311 #unde‡
TZNAME_MAX


318 #unde‡
FILESIZEBITS


319 
	#FILESIZEBITS
 64

	)

322 #unde‡
LINK_MAX


323 
	#LINK_MAX
 1024

	)

326 #unde‡
MAX_CANON


327 
	#MAX_CANON
 255

	)

330 #unde‡
MAX_INPUT


331 
	#MAX_INPUT
 255

	)

334 #unde‡
NAME_MAX


335 
	#NAME_MAX
 255

	)

341 #unde‡
PATH_MAX


342 
	#PATH_MAX
 4096

	)

346 #unde‡
PIPE_BUF


347 
	#PIPE_BUF
 4096

	)

351 #unde‡
POSIX_ALLOC_SIZE_MIN


357 #unde‡
POSIX_REC_INCR_XFER_SIZE


361 #unde‡
POSIX_REC_MAX_XFER_SIZE


365 #unde‡
POSIX_REC_MIN_XFER_SIZE


369 #unde‡
POSIX_REC_XFER_ALIGN


373 #unde‡
SYMLINK_MAX


374 
	#SYMLINK_MAX
 (
PATH_MAX
 - 1)

	)

380 #unde‡
BC_BASE_MAX


381 
	#BC_BASE_MAX
 99

	)

384 #unde‡
BC_DIM_MAX


385 
	#BC_DIM_MAX
 2048

	)

388 #unde‡
BC_SCALE_MAX


389 
	#BC_SCALE_MAX
 99

	)

392 #unde‡
BC_STRING_MAX


393 
	#BC_STRING_MAX
 1000

	)

396 #unde‡
CHARCLASS_NAME_MAX


405 #unde‡
COLL_WEIGHTS_MAX


410 #unde‡
EXPR_NEST_MAX


411 
	#EXPR_NEST_MAX
 32

	)

414 #unde‡
LINE_MAX


415 
	#LINE_MAX
 2048

	)

419 #unde‡
NGROUPS_MAX


420 
	#NGROUPS_MAX
 1024

	)

424 #unde‡
RE_DUP_MAX


425 
	#RE_DUP_MAX
 255

	)

435 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

439 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

440 
	#_POSIX_AIO_MAX
 1

	)

441 
	#_POSIX_ARG_MAX
 4096

	)

442 
	#_POSIX_CHILD_MAX
 25

	)

443 
	#_POSIX_DELAYTIMER_MAX
 32

	)

444 
	#_POSIX_HOST_NAME_MAX
 255

	)

445 
	#_POSIX_LINK_MAX
 8

	)

446 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

447 
	#_POSIX_MAX_CANON
 255

	)

448 
	#_POSIX_MAX_INPUT
 255

	)

449 
	#_POSIX_MQ_OPEN_MAX
 8

	)

450 
	#_POSIX_MQ_PRIO_MAX
 32

	)

451 
	#_POSIX_NAME_MAX
 14

	)

452 
	#_POSIX_NGROUPS_MAX
 8

	)

453 
	#_POSIX_OPEN_MAX
 20

	)

454 
	#_POSIX_PATH_MAX
 256

	)

455 
	#_POSIX_PIPE_BUF
 512

	)

456 
	#_POSIX_RE_DUP_MAX
 255

	)

457 
	#_POSIX_RTSIG_MAX
 8

	)

458 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

459 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

460 
	#_POSIX_SIGQUEUE_MAX
 32

	)

461 
	#_POSIX_SSIZE_MAX
 32767

	)

462 
	#_POSIX_STREAM_MAX
 8

	)

463 
	#_POSIX_SS_REPL_MAX
 4

	)

464 
	#_POSIX_SYMLINK_MAX
 255

	)

465 
	#_POSIX_SYMLOOP_MAX
 8

	)

466 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

467 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

468 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

469 
	#_POSIX_TIMER_MAX
 32

	)

470 
	#_POSIX_TRACE_EVENT_NAME_MAX
 30

	)

471 
	#_POSIX_TRACE_NAME_MAX
 8

	)

472 
	#_POSIX_TRACE_SYS_MAX
 8

	)

473 
	#_POSIX_TRACE_USER_EVENT_MAX
 32

	)

474 
	#_POSIX_TTY_NAME_MAX
 9

	)

475 
	#_POSIX_TZNAME_MAX
 6

	)

477 
	#_POSIX2_BC_BASE_MAX
 99

	)

478 
	#_POSIX2_BC_DIM_MAX
 2048

	)

479 
	#_POSIX2_BC_SCALE_MAX
 99

	)

480 
	#_POSIX2_BC_STRING_MAX
 1000

	)

481 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

482 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

483 
	#_POSIX2_LINE_MAX
 2048

	)

484 
	#_POSIX2_RE_DUP_MAX
 255

	)

486 
	#_XOPEN_IOV_MAX
 16

	)

487 
	#_XOPEN_NAME_MAX
 255

	)

488 
	#_XOPEN_PATH_MAX
 1024

	)

492 
	#NL_ARGMAX
 9

	)

493 
	#NL_LANGMAX
 14

	)

494 
	#NL_MSGMAX
 32767

	)

495 
	#NL_NMAX
 
INT_MAX


	)

496 
	#NL_SETMAX
 255

	)

497 
	#NL_TEXTMAX
 
_POSIX2_LINE_MAX


	)

500 #unde‡
NZERO


501 
	#NZERO
 20

	)

	@/usr/include/features.h

11 #i‚de‡
_FEATURES_H


12 
	#_FEATURES_H


	)

14 
	~<sys/cdefs.h
>

15 
	~<sys/„©uªs.h
>

	@
1
.
1
/usr/include
59
1367
oc_utl.c
oc_utl.h
oc_utl_htbl.c
oc_utl_htbl.h
oc_utl_page.c
oc_utl_page.h
oc_utl_trace.c
oc_utl_trace.h
oc_utl_trace_base.c
oc_utl_trace_base.h
oc_utl_trk.c
oc_utl_trk.h
test/oc_utl_htbl_test.c
test/oc_utl_trk_test.c
/usr/include/memory.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/_ansi.h
/usr/include/alloca.h
/usr/include/cygwin/stdlib.h
/usr/include/machine/ieeefp.h
/usr/include/machine/stdlib.h
/usr/include/sched.h
/usr/include/sys/cdefs.h
/usr/include/sys/features.h
/usr/include/sys/reent.h
/usr/include/sys/signal.h
/usr/include/sys/stdio.h
/usr/include/sys/string.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/assert.h
/usr/include/cygwin/signal.h
/usr/include/cygwin/time.h
/usr/include/cygwin/types.h
/usr/include/cygwin/wait.h
/usr/include/machine/_types.h
/usr/include/machine/time.h
/usr/include/machine/types.h
/usr/include/newlib.h
/usr/include/stdint.h
/usr/include/sys/_types.h
/usr/include/sys/config.h
/usr/include/sys/custom_file.h
/usr/include/sys/lock.h
/usr/include/sys/sched.h
/usr/include/bits/wordsize.h
/usr/include/cygwin/config.h
/usr/include/endian.h
/usr/include/machine/_default_types.h
/usr/include/sys/sysmacros.h
/usr/include/bits/endian.h
/usr/include/byteswap.h
/usr/include/limits.h
/usr/include/features.h
